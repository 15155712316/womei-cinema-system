{
  "analysis_date": "2025-06-06",
  "summary": {
    "total_duplicates": 2583,
    "total_redundant": 174,
    "optimization_potential": "high"
  },
  "analysis_results": {
    "duplicate_methods": [],
    "duplicate_code_blocks": [
      {
        "file1": "main_modular.py",
        "lines1": "15-19",
        "file2": "main_modular.py",
        "lines2": "16-20",
        "block_hash": "0b183120c1dc7e73d5164d4258a71725",
        "content": "# 导入插件系统\nfrom ui.interfaces.plugin_interface import (\n    IWidgetInterface, plugin_manager\n)\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "15-19",
        "file2": "main_modular.py",
        "lines2": "17-21",
        "block_hash": "0b183120c1dc7e73d5164d4258a71725",
        "content": "from ui.interfaces.plugin_interface import (\n    IWidgetInterface, plugin_manager\n)\n\n# 导入正确的事件总线"
      },
      {
        "file1": "main_modular.py",
        "lines1": "24-28",
        "file2": "main_modular.py",
        "lines2": "25-29",
        "block_hash": "124f8e145eb582500333c3349b128273",
        "content": "from ui.widgets.classic_components import apply_classic_theme_to_widget\nfrom ui.widgets.account_widg..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "30-34",
        "file2": "main_modular.py",
        "lines2": "31-35",
        "block_hash": "a6c247e6c913f15ee7804f78091098cf",
        "content": "\n# 用户认证\nfrom services.auth_service import AuthService\nfrom services.ui_utils import MessageManager, ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "30-34",
        "file2": "main_modular.py",
        "lines2": "32-36",
        "block_hash": "a6c247e6c913f15ee7804f78091098cf",
        "content": "# 用户认证\nfrom services.auth_service import AuthService\nfrom services.ui_utils import MessageManager, C..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "43-47",
        "file2": "main_modular.py",
        "lines2": "44-48",
        "block_hash": "91472a94f0fca6637b4d092f05a3226a",
        "content": "from services.cinema_manager import CinemaManager\nfrom services.film_service import get_films, norma..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "49-53",
        "file2": "main_modular.py",
        "lines2": "50-54",
        "block_hash": "cfc0a95d26f68ab34cd49821253e7ee0",
        "content": "import json, os, time, traceback\n\n# 🆕 增强支付系统导入\nfrom PyQt5.QtWidgets import QInputDialog, QLineEdit\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "52-56",
        "file2": "main_modular.py",
        "lines2": "53-57",
        "block_hash": "1313bf87921bdfe8784b18fed8d72d60",
        "content": "from PyQt5.QtWidgets import QInputDialog, QLineEdit\n\n# 导入登录窗口\nfrom ui.login_window import LoginWindo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "57-61",
        "file2": "main_modular.py",
        "lines2": "58-62",
        "block_hash": "451e4d4959f38b1331f2c61509d2dd5f",
        "content": "\nclass ModularCinemaMainWindow(QMainWindow):\n    \"\"\"模块化影院下单系统主窗口\"\"\"\n    \n    # 定义信号"
      },
      {
        "file1": "main_modular.py",
        "lines1": "62-66",
        "file2": "main_modular.py",
        "lines2": "63-67",
        "block_hash": "f5a8f62bb05a49844e8424bfc9c2347b",
        "content": "    login_success = pyqtSignal(dict)  # 登录成功信号\n    \n    def __init__(self):\n        super().__init__..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "67-71",
        "file2": "main_modular.py",
        "lines2": "68-72",
        "block_hash": "cac72f26a6990139c31df242bd0fe435",
        "content": "        # 初始化业务服务\n        self.auth_service = AuthService()\n        self.cinema_manager = CinemaMana..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "67-71",
        "file2": "main_modular.py",
        "lines2": "69-73",
        "block_hash": "cac72f26a6990139c31df242bd0fe435",
        "content": "        self.auth_service = AuthService()\n        self.cinema_manager = CinemaManager()\n        self..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "72-76",
        "file2": "main_modular.py",
        "lines2": "73-77",
        "block_hash": "663369ad305f382eec12fee89cfaff02",
        "content": "        # 🆕 初始化订单详情管理器\n        from modules.order_display import OrderDetailManager\n        self.ord..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "77-81",
        "file2": "main_modular.py",
        "lines2": "78-82",
        "block_hash": "8df1cd30a264e2be43f5eba999e32256",
        "content": "        self.current_user = None\n        self.current_account = None\n        self.current_order = No..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "98-102",
        "file2": "main_modular.py",
        "lines2": "99-103",
        "block_hash": "7656bfb8d89bfa32de836814d2284b3e",
        "content": "        # 设置窗口基本属性\n        self.setWindowTitle(\"柴犬影院下单系统 - 模块化版本\")\n        self.setFixedSize(1500, 9..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "114-118",
        "file2": "main_modular.py",
        "lines2": "115-119",
        "block_hash": "913918e9091d5a740a3ce52de9aa1fba",
        "content": "        self._connect_signals()\n        \n        # 连接全局事件\n        self._connect_global_events()\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "123-127",
        "file2": "main_modular.py",
        "lines2": "124-128",
        "block_hash": "5a5b4c32c03e65728f9f4b169c3da8e5",
        "content": "        self._init_enhanced_payment_system()\n\n        # 启动用户认证检查\n        QTimer.singleShot(100, self..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "132-136",
        "file2": "main_modular.py",
        "lines2": "133-137",
        "block_hash": "2a34788fe7801ef7394dce74c21649c5",
        "content": "            if not hasattr(self, 'api_client'):\n                from services.api_base import APIBas..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "136-140",
        "file2": "main_modular.py",
        "lines2": "137-141",
        "block_hash": "ae332aa2787d5fc523befc4859ac27f3",
        "content": "            # 🆕 初始化会员卡密码策略状态\n            self.member_password_required = False  # 是否需要会员卡密码\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "156-160",
        "file2": "main_modular.py",
        "lines2": "157-161",
        "block_hash": "c03be6133cb2e2f065f37142a2a11856",
        "content": "        # 创建主布局\n        main_layout = QHBoxLayout(central_widget)\n        main_layout.setContentsMar..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "156-160",
        "file2": "main_modular.py",
        "lines2": "158-162",
        "block_hash": "c03be6133cb2e2f065f37142a2a11856",
        "content": "        main_layout = QHBoxLayout(central_widget)\n        main_layout.setContentsMargins(5, 5, 5, 5)..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "162-166",
        "file2": "main_modular.py",
        "lines2": "163-167",
        "block_hash": "e79e450396f3caf20f751ae17c1fc070",
        "content": "        total_width = 1500\n        left_w = int(total_width * 0.2)    # 300px (20%)\n        center_w..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "167-171",
        "file2": "main_modular.py",
        "lines2": "168-172",
        "block_hash": "c9a14c31753651cf9b4495b03bd911cd",
        "content": "        # 左栏：账号管理模块\n        self.account_widget = AccountWidget()\n        self.account_widget.setFix..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "167-171",
        "file2": "main_modular.py",
        "lines2": "169-173",
        "block_hash": "c9a14c31753651cf9b4495b03bd911cd",
        "content": "        self.account_widget = AccountWidget()\n        self.account_widget.setFixedWidth(left_w - 10)..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "175-179",
        "file2": "main_modular.py",
        "lines2": "176-180",
        "block_hash": "bdaa0d717b21a7f1b15733c1b1549941",
        "content": "        # Tab管理模块 (上部38%高度)\n        self.tab_manager_widget = TabManagerWidget()\n        center_layo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "179-183",
        "file2": "main_modular.py",
        "lines2": "180-184",
        "block_hash": "56e7b108616772d6cd3ab2c9d8903d7c",
        "content": "        # 座位选择模块 (下部62%高度) - 独立的座位区域，不包含订单详情\n        self.seat_widget = self._create_seat_area()\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "184-188",
        "file2": "main_modular.py",
        "lines2": "185-189",
        "block_hash": "fedf294fb8d328f70e1f3e6665dc3acd",
        "content": "        center_container = QWidget()\n        center_container.setLayout(center_layout)\n        cente..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "189-193",
        "file2": "main_modular.py",
        "lines2": "190-194",
        "block_hash": "90bf1eb523ffddca0c594bc3601b9231",
        "content": "        # 右栏：取票码区 + 订单详情区\n        self.right_widget = self._create_right_area()\n        self.right_w..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "189-193",
        "file2": "main_modular.py",
        "lines2": "191-195",
        "block_hash": "90bf1eb523ffddca0c594bc3601b9231",
        "content": "        self.right_widget = self._create_right_area()\n        self.right_widget.setFixedWidth(right_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "195-199",
        "file2": "main_modular.py",
        "lines2": "196-200",
        "block_hash": "a422aacfc60bdbcb4f66fa153c339edd",
        "content": "    \n    def _create_seat_area(self) -> QWidget:\n        \"\"\"创建独立的座位选择区域\"\"\"\n        from ui.widgets.c..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "200-204",
        "file2": "main_modular.py",
        "lines2": "201-205",
        "block_hash": "19b60db4eece082e473d663991075b26",
        "content": "        widget = QWidget()\n        layout = QVBoxLayout(widget)\n        layout.setContentsMargins(5,..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "206-210",
        "file2": "main_modular.py",
        "lines2": "207-211",
        "block_hash": "7ef1b48dd6c96c92ad24924ba8d3089c",
        "content": "        seat_group = ClassicGroupBox(\"座位区域\")\n        self.seat_area_layout = QVBoxLayout(seat_group)..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "212-216",
        "file2": "main_modular.py",
        "lines2": "213-217",
        "block_hash": "b11cf758cee58ad53fe9d6882b7c7012",
        "content": "        # 保留seat_input引用以避免代码错误，但不显示在界面上\n        self.seat_input = ClassicLineEdit()\n        self.se..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "212-216",
        "file2": "main_modular.py",
        "lines2": "214-218",
        "block_hash": "b11cf758cee58ad53fe9d6882b7c7012",
        "content": "        self.seat_input = ClassicLineEdit()\n        self.seat_input.setPlaceholderText(\"点击上方座位图选择座位...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "200-204",
        "file2": "main_modular.py",
        "lines2": "243-247",
        "block_hash": "19b60db4eece082e473d663991075b26",
        "content": "        \n        widget = QWidget()\n        layout = QVBoxLayout(widget)\n        layout.setContentsM..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "200-204",
        "file2": "main_modular.py",
        "lines2": "244-248",
        "block_hash": "19b60db4eece082e473d663991075b26",
        "content": "        widget = QWidget()\n        layout = QVBoxLayout(widget)\n        layout.setContentsMargins(5,..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "202-206",
        "file2": "main_modular.py",
        "lines2": "245-249",
        "block_hash": "d1babfd15f71ff9d481a39464ee53680",
        "content": "        layout = QVBoxLayout(widget)\n        layout.setContentsMargins(5, 5, 5, 5)\n        layout.se..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "248-252",
        "file2": "main_modular.py",
        "lines2": "249-253",
        "block_hash": "0f8f8b5ac9aeef08a6fadbce60e6e874",
        "content": "        # 取票码区 (上部50%)\n        qr_group = ClassicGroupBox(\"取票码区\")\n        qr_layout = QVBoxLayout(qr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "248-252",
        "file2": "main_modular.py",
        "lines2": "250-254",
        "block_hash": "0f8f8b5ac9aeef08a6fadbce60e6e874",
        "content": "        qr_group = ClassicGroupBox(\"取票码区\")\n        qr_layout = QVBoxLayout(qr_group)\n        qr_layo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "253-257",
        "file2": "main_modular.py",
        "lines2": "254-258",
        "block_hash": "5ed9f4af08ca7ff0f167c79720642044",
        "content": "        # 🎯 添加按钮区域\n        button_layout = QHBoxLayout()\n        button_layout.setSpacing(10)\n\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "262-266",
        "file2": "main_modular.py",
        "lines2": "282-286",
        "block_hash": "6ee5b59fd1298a96c2890819f57b9f6d",
        "content": "            QPushButton {\n                background-color: #4caf50;\n                color: white;\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "263-267",
        "file2": "main_modular.py",
        "lines2": "283-287",
        "block_hash": "87e30602e0627f9ae1cfeac1cea88f33",
        "content": "                background-color: #4caf50;\n                color: white;\n                border: non..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "264-268",
        "file2": "main_modular.py",
        "lines2": "284-288",
        "block_hash": "522aa0c0add47030d62c04db5608be70",
        "content": "                color: white;\n                border: none;\n                border-radius: 4px;\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "265-269",
        "file2": "main_modular.py",
        "lines2": "285-289",
        "block_hash": "baa218e3aa2239954a32da519eee83d5",
        "content": "                border: none;\n                border-radius: 4px;\n                font: 12px \"Micros..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "266-270",
        "file2": "main_modular.py",
        "lines2": "286-290",
        "block_hash": "54bc5292bac0cfb960d37f01057ae2f4",
        "content": "                border-radius: 4px;\n                font: 12px \"Microsoft YaHei\";\n            }\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "267-271",
        "file2": "main_modular.py",
        "lines2": "287-291",
        "block_hash": "8ad3fdf882ff19ab60f1a520cc35e484",
        "content": "                font: 12px \"Microsoft YaHei\";\n            }\n            QPushButton:hover {\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "268-272",
        "file2": "main_modular.py",
        "lines2": "288-292",
        "block_hash": "10fafcf495a24b8ff488793da8f7a7b2",
        "content": "            }\n            QPushButton:hover {\n                background-color: #388e3c;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "269-273",
        "file2": "main_modular.py",
        "lines2": "289-293",
        "block_hash": "606922a82d919620c6f634ef053de3e7",
        "content": "            QPushButton:hover {\n                background-color: #388e3c;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "270-274",
        "file2": "main_modular.py",
        "lines2": "290-294",
        "block_hash": "8ca4c9a0a244159c95622da30c1646da",
        "content": "                background-color: #388e3c;\n            }\n            QPushButton:pressed {\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "297-301",
        "file2": "main_modular.py",
        "lines2": "298-302",
        "block_hash": "941bb54f59c099743965d9d0aa3aed5c",
        "content": "        # 添加按钮到布局\n        button_layout.addWidget(self.copy_path_btn)\n        button_layout.addWidge..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "297-301",
        "file2": "main_modular.py",
        "lines2": "299-303",
        "block_hash": "941bb54f59c099743965d9d0aa3aed5c",
        "content": "        button_layout.addWidget(self.copy_path_btn)\n        button_layout.addWidget(self.copy_image_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "318-322",
        "file2": "main_modular.py",
        "lines2": "319-323",
        "block_hash": "1bd7437f3c666c7671d234a760cb9184",
        "content": "        qr_layout.addLayout(button_layout)  # 先添加按钮\n        qr_layout.addWidget(self.qr_display)  # ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "324-328",
        "file2": "main_modular.py",
        "lines2": "325-329",
        "block_hash": "af1461eda34736feb5211553a87b007d",
        "content": "        order_group = ClassicGroupBox(\"订单详情区\")\n        order_layout = QVBoxLayout(order_group)\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "268-272",
        "file2": "main_modular.py",
        "lines2": "374-378",
        "block_hash": "10fafcf495a24b8ff488793da8f7a7b2",
        "content": "            }\n            QPushButton:hover {\n                background-color: #f57c00;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "269-273",
        "file2": "main_modular.py",
        "lines2": "375-379",
        "block_hash": "606922a82d919620c6f634ef053de3e7",
        "content": "            QPushButton:hover {\n                background-color: #f57c00;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "270-274",
        "file2": "main_modular.py",
        "lines2": "376-380",
        "block_hash": "8ca4c9a0a244159c95622da30c1646da",
        "content": "                background-color: #f57c00;\n            }\n            QPushButton:pressed {\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "395-399",
        "file2": "main_modular.py",
        "lines2": "396-400",
        "block_hash": "212ec7df39d288dd754b9ba55bc0e757",
        "content": "            if hasattr(self, 'current_qr_path') and self.current_qr_path:\n                import os\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "402-406",
        "file2": "main_modular.py",
        "lines2": "403-407",
        "block_hash": "84773c3ae738859005c7b1df8a9c8077",
        "content": "                clipboard = QApplication.clipboard()\n                clipboard.setText(absolute_path..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "411-415",
        "file2": "main_modular.py",
        "lines2": "412-416",
        "block_hash": "a5bc023b88f5a24ee3526daac050d79c",
        "content": "            if hasattr(self, 'current_qr_bytes') and self.current_qr_bytes:\n                from PyQ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "416-420",
        "file2": "main_modular.py",
        "lines2": "417-421",
        "block_hash": "d4a7722f29fa0cf1ef5ef99addc4b586",
        "content": "                # 从原始字节数据创建高质量pixmap\n                byte_array = QByteArray(self.current_qr_bytes)\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "431-435",
        "file2": "main_modular.py",
        "lines2": "432-436",
        "block_hash": "21c1bbfce4536cf5f7f780cca7b69a4e",
        "content": "                self._copy_display_image()\n\n        except Exception as e:\n            pass\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "433-437",
        "file2": "main_modular.py",
        "lines2": "434-438",
        "block_hash": "e84695c625584456a1666befa7dbecdf",
        "content": "        except Exception as e:\n            pass\n            # 最后备用方案\n            self._copy_display_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "464-468",
        "file2": "main_modular.py",
        "lines2": "465-469",
        "block_hash": "07082c0b3fff5d305eaa652b44582a52",
        "content": "        self.seat_input.textChanged.connect(self._on_seat_input_changed)\n        \n        # 右栏支付按钮信号..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "467-471",
        "file2": "main_modular.py",
        "lines2": "468-472",
        "block_hash": "c45115979c7e0b67ce655aa66668b336",
        "content": "        self.pay_button.clicked.connect(self._on_pay_button_clicked)\n        \n        # 主窗口信号\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "470-474",
        "file2": "main_modular.py",
        "lines2": "471-475",
        "block_hash": "faebc28480d4b29de673f0b87c4df182",
        "content": "        self.login_success.connect(self._on_main_login_success)\n    \n    def _connect_global_events(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "496-500",
        "file2": "main_modular.py",
        "lines2": "497-501",
        "block_hash": "5eed2a77a5b165e33ce221f37bbd3287",
        "content": "    @pyqtSlot(dict)\n    def _on_user_login_success(self, user_info: dict):\n        \"\"\"用户登录成功处理\"\"\"\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "514-518",
        "file2": "main_modular.py",
        "lines2": "515-519",
        "block_hash": "d9c616127083ba9703a2581ebec50f22",
        "content": "            # 关闭登录窗口\n            if hasattr(self, 'login_window') and self.login_window:\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "514-518",
        "file2": "main_modular.py",
        "lines2": "516-520",
        "block_hash": "d9c616127083ba9703a2581ebec50f22",
        "content": "            if hasattr(self, 'login_window') and self.login_window:\n                self.login_windo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "537-541",
        "file2": "main_modular.py",
        "lines2": "538-542",
        "block_hash": "fb46ffef1babc4e2dd88042aa89eb7f2",
        "content": "            self.center_window()\n            \n            # 发出登录成功信号\n            self.login_success...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "540-544",
        "file2": "main_modular.py",
        "lines2": "541-545",
        "block_hash": "fe0e6fd6fca2b7da2fd6f8fffbcf8c55",
        "content": "            self.login_success.emit(self.current_user)\n            \n            # 发布全局登录成功事件\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "543-547",
        "file2": "main_modular.py",
        "lines2": "544-548",
        "block_hash": "af7d9e1013cea2f4840488270762b52f",
        "content": "            event_bus.user_login_success.emit(self.current_user)\n            \n            # 🆕 延迟触发默认..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "549-553",
        "file2": "main_modular.py",
        "lines2": "550-554",
        "block_hash": "904660b8926bc474fed91d44e68929d7",
        "content": "        except Exception as e:\n            QMessageBox.critical(self, \"显示主窗口错误\", f\"显示主窗口失败: {str(e)}..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "564-568",
        "file2": "main_modular.py",
        "lines2": "565-569",
        "block_hash": "348057d9d1efc40b77ea9c477fe31052",
        "content": "            # 第二步：自动选择第一个影院\n            first_cinema = cinemas[0]\n            cinema_name = first_ci..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "571-575",
        "file2": "main_modular.py",
        "lines2": "572-576",
        "block_hash": "2c5cfadaed1b5035fd4265893dede68b",
        "content": "            # 更新Tab管理器的影院数据\n            if hasattr(self.tab_manager_widget, 'update_cinema_list'):\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "576-580",
        "file2": "main_modular.py",
        "lines2": "577-581",
        "block_hash": "d7165fc780a6df429af6215b9fef3678",
        "content": "            event_bus.cinema_selected.emit(first_cinema)\n\n            # 第三步：延迟选择该影院的关联账号\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "579-583",
        "file2": "main_modular.py",
        "lines2": "580-584",
        "block_hash": "8cce184c301a90a186e457696419d29e",
        "content": "            QTimer.singleShot(200, lambda: self._auto_select_cinema_account(first_cinema))\n\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "596-600",
        "file2": "main_modular.py",
        "lines2": "597-601",
        "block_hash": "8c1c22fbfce3c2ffc524f8be75e393be",
        "content": "            if hasattr(self, 'account_widget') and hasattr(self.account_widget, 'load_account_list')..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "614-618",
        "file2": "main_modular.py",
        "lines2": "615-619",
        "block_hash": "840165153c76fbeff7e1203e6bf4a2ec",
        "content": "                first_account = cinema_accounts[0]\n                userid = first_account.get('useri..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "623-627",
        "file2": "main_modular.py",
        "lines2": "624-628",
        "block_hash": "75e880ba25a98f6ffa6ddf08f9179ec6",
        "content": "            self.set_current_account(first_account)\n\n            # 发布账号选择事件\n            event_bus.ac..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "628-632",
        "file2": "main_modular.py",
        "lines2": "629-633",
        "block_hash": "84258d045e2f1729e531ba7c426f76c0",
        "content": "            # 更新账号组件显示\n            if hasattr(self, 'account_widget'):\n                self.account_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "632-636",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n\n        except Exception as e:\n            import traceback\n            traceback.print_exc()"
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "633-637",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n    "
      },
      {
        "file1": "main_modular.py",
        "lines1": "637-641",
        "file2": "main_modular.py",
        "lines2": "638-642",
        "block_hash": "9ca2774e34c306c11c23521ff14bcd68",
        "content": "    def _update_tab_cinema_selection(self, cinema_name):\n        \"\"\"更新Tab管理器的影院选择\"\"\"\n        try:\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "514-518",
        "file2": "main_modular.py",
        "lines2": "670-674",
        "block_hash": "d9c616127083ba9703a2581ebec50f22",
        "content": "            # 清理旧的登录窗口\n            if hasattr(self, 'login_window') and self.login_window:\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "514-518",
        "file2": "main_modular.py",
        "lines2": "671-675",
        "block_hash": "d9c616127083ba9703a2581ebec50f22",
        "content": "            if hasattr(self, 'login_window') and self.login_window:\n                self.login_windo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "688-692",
        "file2": "main_modular.py",
        "lines2": "689-693",
        "block_hash": "2478d356f0bec66f25bcd53e2c0e83aa",
        "content": "        except Exception as e:\n            QMessageBox.critical(self, \"创建登录窗口失败\", f\"无法创建登录窗口: {str(e..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "693-697",
        "file2": "main_modular.py",
        "lines2": "694-698",
        "block_hash": "092bed229be2304aa64ad752cb58c853",
        "content": "    \n    def _on_account_selected(self, account_data: dict):\n        \"\"\"账号选择处理 - 对接到核心业务方法\"\"\"\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "698-702",
        "file2": "main_modular.py",
        "lines2": "699-703",
        "block_hash": "98097419861bd7b644c76699f9fbc0ee",
        "content": "            self.set_current_account(account_data)\n            \n        except Exception as e:\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "711-715",
        "file2": "main_modular.py",
        "lines2": "712-716",
        "block_hash": "dcf093734dfbbb23349af7c885a2af46",
        "content": "            self.seat_placeholder.setText(\n                f\"已选择影院: {cinema_name}\\n\\n\"\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "734-738",
        "file2": "main_modular.py",
        "lines2": "735-739",
        "block_hash": "dcbec90c04738a69ca19ff77698595bd",
        "content": "    def _on_order_submitted(self, order_data: dict):\n        \"\"\"处理订单提交信号 - 来自Tab管理器\"\"\"\n        try:\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "742-746",
        "file2": "main_modular.py",
        "lines2": "743-747",
        "block_hash": "0e2f5c3e4874db8f7c60d227c6f533aa",
        "content": "            # 验证基本信息\n            if not order_data.get('account'):\n                MessageManager.sh..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "742-746",
        "file2": "main_modular.py",
        "lines2": "744-748",
        "block_hash": "0e2f5c3e4874db8f7c60d227c6f533aa",
        "content": "            if not order_data.get('account'):\n                MessageManager.show_error(self, \"账号错误\"..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "747-751",
        "file2": "main_modular.py",
        "lines2": "748-752",
        "block_hash": "93874eb20ed9d8ac3f3a0991b9111fd8",
        "content": "            # 获取座位信息（从座位图面板）\n            selected_seats = []\n            if hasattr(self, 'seat_map_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "770-774",
        "file2": "main_modular.py",
        "lines2": "771-775",
        "block_hash": "e8549a277d7bc19857d7df2858526683",
        "content": "            print(f\"[主窗口] 开始处理订单，选择座位: {len(selected_seats)} 个\")\n            \n            # 调用现有的完整订..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "775-779",
        "file2": "main_modular.py",
        "lines2": "776-780",
        "block_hash": "1170958c98b1110b82075e961920073b",
        "content": "            if result:\n                MessageManager.show_success(self, \"订单创建成功\", \"订单已成功创建，请及时支付\", ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "797-801",
        "file2": "main_modular.py",
        "lines2": "798-802",
        "block_hash": "3c78dc1138c046c8a67be23ac328a15c",
        "content": "            coupon_text = self.tab_manager_widget.coupon_input.toPlainText().strip()\n            if ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "804-808",
        "file2": "main_modular.py",
        "lines2": "805-809",
        "block_hash": "2f8e166629ca1da9f560d429f22b6513",
        "content": "            # 批量绑定券\n            success_count = 0\n            fail_count = 0\n            bind_log = ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "812-816",
        "file2": "main_modular.py",
        "lines2": "813-817",
        "block_hash": "ec6066144282e5b5fa2bec7515e5959f",
        "content": "                    result = bind_coupon({\n                        'account': self.current_account,\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "831-835",
        "file2": "main_modular.py",
        "lines2": "832-836",
        "block_hash": "67cfb551714164f2bdd19bccc4038267",
        "content": "            # 更新绑定日志\n            if hasattr(self.tab_manager_widget, 'bind_log'):\n                se..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "838-842",
        "file2": "main_modular.py",
        "lines2": "839-843",
        "block_hash": "eeef899dfa8610b5b467dbd38b6cd146",
        "content": "            # 不显示绑定完成弹窗，只在控制台记录\n            \n        except Exception as e:\n            MessageManag..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "849-853",
        "file2": "main_modular.py",
        "lines2": "850-854",
        "block_hash": "58a581264c61bd7ef527fcd92eeff674",
        "content": "            # 调用API获取订单列表\n            orders = get_order_list({\n                'account': self.curr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "849-853",
        "file2": "main_modular.py",
        "lines2": "851-855",
        "block_hash": "58a581264c61bd7ef527fcd92eeff674",
        "content": "            orders = get_order_list({\n                'account': self.current_account\n            })..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "854-858",
        "file2": "main_modular.py",
        "lines2": "855-859",
        "block_hash": "ec84b7ab8c6a5167c4247cbaa16c2bc0",
        "content": "            # 更新订单表格\n            if hasattr(self.tab_manager_widget, 'order_table') and orders:\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "869-873",
        "file2": "main_modular.py",
        "lines2": "870-874",
        "block_hash": "284bfed5336d9f1319500ed3a058fc99",
        "content": "            if not self.current_account:\n                MessageManager.show_error(self, \"支付失败\", \"请先..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "873-877",
        "file2": "main_modular.py",
        "lines2": "874-878",
        "block_hash": "1ee19f03b443ac4810d8570e71b409e5",
        "content": "            # 获取订单和账号信息\n            order_detail = self.current_order\n            account = self.cur..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "873-877",
        "file2": "main_modular.py",
        "lines2": "875-879",
        "block_hash": "1ee19f03b443ac4810d8570e71b409e5",
        "content": "            order_detail = self.current_order\n            account = self.current_account\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "878-882",
        "file2": "main_modular.py",
        "lines2": "879-883",
        "block_hash": "e456ea0c6e78c863ed6ef7ab5630b087",
        "content": "            # 获取影院信息\n            cinema_data = None\n            if hasattr(self, 'tab_manager_widget..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "890-894",
        "file2": "main_modular.py",
        "lines2": "891-895",
        "block_hash": "6c8f99c51ea967f674e828eff171dff1",
        "content": "            password_policy_result = self.validate_member_password_policy(order_id)\n            if n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "898-902",
        "file2": "main_modular.py",
        "lines2": "899-903",
        "block_hash": "a191f06d372c8a92783322e5f5634b2d",
        "content": "            # 🆕 智能密码处理 - 优先使用预设密码\n            if requires_password:\n                print(f\"[支付-密码] ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "905-909",
        "file2": "main_modular.py",
        "lines2": "906-910",
        "block_hash": "308d746b3fcd6cf14b3fbb973f57c612",
        "content": "                if member_password:\n                    print(f\"[支付-密码] ✅ 使用预设支付密码 (长度: {len(member_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "918-922",
        "file2": "main_modular.py",
        "lines2": "919-923",
        "block_hash": "389176c017ece52c61ff1d8e69ce0ff3",
        "content": "            # 🆕 获取选中的券号\n            selected_coupons = getattr(self, 'selected_coupons', [])\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "923-927",
        "file2": "main_modular.py",
        "lines2": "924-928",
        "block_hash": "0be1e403d3f4246310daec3ae73e17b9",
        "content": "            coupon_info = getattr(self, 'current_coupon_info', None)\n\n            # 🆕 判断是否使用券支付\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "925-929",
        "file2": "main_modular.py",
        "lines2": "926-930",
        "block_hash": "6f8c75c02192ad27ed75456f910a9d81",
        "content": "            # 🆕 判断是否使用券支付\n            use_coupon = bool(couponcode and coupon_info and coupon_info.g..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "930-934",
        "file2": "main_modular.py",
        "lines2": "931-935",
        "block_hash": "9c0875fbe27e897e1fb68b0993712d08",
        "content": "                coupon_data = coupon_info['resultData']\n                pay_amount = coupon_data.get..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "954-958",
        "file2": "main_modular.py",
        "lines2": "955-959",
        "block_hash": "8b9aab0d29852f9c50eef5b8ecdc5e52",
        "content": "                    pay_amount = str(order_detail.get('payAmount', 0))  # 订单总价（分）\n\n                d..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "985-989",
        "file2": "main_modular.py",
        "lines2": "986-990",
        "block_hash": "08c6744d1cfb4b462577999c40fddf9c",
        "content": "            pay_result = pay_order(pay_params)\n\n\n            if pay_result and pay_result.get('resul..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "987-991",
        "file2": "main_modular.py",
        "lines2": "988-992",
        "block_hash": "4e878715be72e84bb7c56169ea391ff6",
        "content": "\n            if pay_result and pay_result.get('resultCode') == '0':\n                # 🆕 支付成功处理流程\n\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "966-970",
        "file2": "main_modular.py",
        "lines2": "995-999",
        "block_hash": "ce61d0930635aa5ca1d0c67d7d0f342a",
        "content": "                    'groupid': '',\n                    'cinemaid': cinema_id,\n                    'c..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "967-971",
        "file2": "main_modular.py",
        "lines2": "996-1000",
        "block_hash": "bf2936e2f9678795508a9f6eaf4c3a20",
        "content": "                    'cinemaid': cinema_id,\n                    'cardno': account.get('cardno', ''),\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "main_modular.py",
        "lines2": "997-1001",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                    'cardno': account.get('cardno', ''),\n                    'userid': account['user..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "main_modular.py",
        "lines2": "998-1002",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                    'userid': account['userid'],\n                    'openid': account['openid'],\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "main_modular.py",
        "lines2": "999-1003",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                    'openid': account['openid'],\n                    'CVersion': '3.9.12',\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "main_modular.py",
        "lines2": "1000-1004",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "                    'CVersion': '3.9.12',\n                    'OS': 'Windows',\n                    '..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "main_modular.py",
        "lines2": "1001-1005",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "                    'OS': 'Windows',\n                    'token': account['token'],\n                ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1006-1010",
        "file2": "main_modular.py",
        "lines2": "1007-1011",
        "block_hash": "1456de0c83352c7ab4c7ef553754c1b4",
        "content": "                print(f\"[调试-支付成功] 获取已支付订单详情，使用接口: get_order_detail\")\n                updated_order_d..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1009-1013",
        "file2": "main_modular.py",
        "lines2": "1010-1014",
        "block_hash": "dfc83e8e052095069dc2e59a57c8a5b1",
        "content": "                if updated_order_detail and updated_order_detail.get('resultCode') == '0':\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1023-1027",
        "file2": "main_modular.py",
        "lines2": "1024-1028",
        "block_hash": "df802c11d8ee76eab392d2878a636475",
        "content": "                # 🆕 清空当前订单和券选择状态\n                self.current_order = None\n                self.sele..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1028-1032",
        "file2": "main_modular.py",
        "lines2": "1029-1033",
        "block_hash": "61437611ece2bad34fbdbd646d609e3d",
        "content": "                MessageManager.show_info(self, \"支付成功\", \"订单支付成功！\")\n\n            else:\n               ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1036-1040",
        "file2": "main_modular.py",
        "lines2": "1037-1041",
        "block_hash": "d02c85914bec70fe36c27e8f885dfd49",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1053-1057",
        "file2": "main_modular.py",
        "lines2": "1054-1058",
        "block_hash": "05bc216883ec1e1a4b6f2bbe11b6750b",
        "content": "            if result and result.get('resultCode') == '0':\n                pass\n            else:\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1061-1065",
        "file2": "main_modular.py",
        "lines2": "1062-1066",
        "block_hash": "ceaa77d7f25f770d7cfbddf522eef0c1",
        "content": "    def _get_member_info(self, account, cinemaid):\n        \"\"\"获取会员信息 - 修复：严格按照API返回数据结构判断\"\"\"\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1080-1084",
        "file2": "main_modular.py",
        "lines2": "1081-1085",
        "block_hash": "9dd1d0cd51fa031728382578199ae78d",
        "content": "            print(f\"[调试-会员信息] API请求参数: {params}\")\n\n            # 调用getMemberInfo API\n            api..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1082-1086",
        "file2": "main_modular.py",
        "lines2": "1083-1087",
        "block_hash": "61c16003cf3e65a8ba2c6a5b5670f7e0",
        "content": "            # 调用getMemberInfo API\n            api_result = api_get('/MiniTicket/index.php/MiniMember..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1082-1086",
        "file2": "main_modular.py",
        "lines2": "1084-1088",
        "block_hash": "61c16003cf3e65a8ba2c6a5b5670f7e0",
        "content": "            api_result = api_get('/MiniTicket/index.php/MiniMember/getMemberInfo', cinemaid, params)..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1091-1095",
        "file2": "main_modular.py",
        "lines2": "1092-1096",
        "block_hash": "5d6520cd4e10ca47e26d14336992d54c",
        "content": "                print(f\"[调试-会员信息] resultData: {result_data}\")\n                print(f\"[调试-会员信息] resu..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1132-1136",
        "file2": "main_modular.py",
        "lines2": "1133-1137",
        "block_hash": "f4d83594d4624b990d4c9a2c2e69f2c7",
        "content": "    def _create_order(self, account, cinemaid, selected_seats):\n        \"\"\"创建订单（保留原方法供其他地方调用）\"\"\"\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1153-1157",
        "file2": "main_modular.py",
        "lines2": "1154-1158",
        "block_hash": "c43238db8ccad3559982198b59ac2907",
        "content": "    \n    def _refresh_account_dependent_data(self):\n        \"\"\"刷新依赖账号的数据 - 🔧 修复空值处理错误\"\"\"\n        try..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1162-1166",
        "file2": "main_modular.py",
        "lines2": "1163-1167",
        "block_hash": "c1feb315b23f14cc4d8addf2eca8d162",
        "content": "            if not self.current_order or not isinstance(self.current_order, dict):\n                p..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1166-1170",
        "file2": "main_modular.py",
        "lines2": "1167-1171",
        "block_hash": "d3d9461ce54c66b6258ec48af30197f9",
        "content": "            # 获取必要参数\n            order_id = self.current_order.get('orderno') or self.current_order...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1171-1175",
        "file2": "main_modular.py",
        "lines2": "1172-1176",
        "block_hash": "4bf2ec864a1445ef4f1b2b5a8ae5b202",
        "content": "            if hasattr(self, 'tab_manager_widget') and hasattr(self.tab_manager_widget, 'current_cin..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1186-1190",
        "file2": "main_modular.py",
        "lines2": "1187-1191",
        "block_hash": "997345cdd38bb080557845b6e283fbe8",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1191-1195",
        "file2": "main_modular.py",
        "lines2": "1192-1196",
        "block_hash": "b685c5afa58783be8e6a6d597cc8f5f1",
        "content": "    def _save_account_data(self, account):\n        \"\"\"保存账号数据\"\"\"\n        try:\n            save_accoun..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1214-1218",
        "file2": "main_modular.py",
        "lines2": "1215-1219",
        "block_hash": "76225d9e69f6dfc48f4f76dd4ff94c97",
        "content": "            if hasattr(self, 'tab_manager_widget') and hasattr(self.tab_manager_widget, 'cinemas_dat..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1208-1212",
        "file2": "main_modular.py",
        "lines2": "1217-1221",
        "block_hash": "5e4b28f8561c68fb28aaca9801c83933",
        "content": "                    cinema_short_name = cinema.get('cinemaShortName', '')\n                    cinema..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1209-1213",
        "file2": "main_modular.py",
        "lines2": "1218-1222",
        "block_hash": "389f5fcb83c968853e2baa58f0908f2d",
        "content": "                    cinema_name_field = cinema.get('name', '')\n                    \n                ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1210-1214",
        "file2": "main_modular.py",
        "lines2": "1219-1223",
        "block_hash": "2da1912910556bb0e083fb9f0d67e740",
        "content": "                    \n                    if cinema_short_name == cinema_name or cinema_name_field ==..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1226-1230",
        "file2": "main_modular.py",
        "lines2": "1227-1231",
        "block_hash": "2f49b3ea1a69f95e3f130a533d68c71a",
        "content": "            for cinema in cinemas:\n                cinema_short_name = cinema.get('cinemaShortName',..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1233-1237",
        "file2": "main_modular.py",
        "lines2": "1234-1238",
        "block_hash": "5850159fee91bce370d5a57d235411f9",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1249-1253",
        "file2": "main_modular.py",
        "lines2": "1250-1254",
        "block_hash": "0fb413cac667017d84663c8d893a3d0b",
        "content": "                if all([base_url, cinemaid, userid]):\n                    # 调用get_films函数\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1285-1289",
        "file2": "main_modular.py",
        "lines2": "1286-1290",
        "block_hash": "00d40b66f90c8d03611813f8030e3bce",
        "content": "            self.order_detail_manager.display_order_detail(order_detail, 'creation')\n\n        except..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1335-1339",
        "file2": "main_modular.py",
        "lines2": "1336-1340",
        "block_hash": "ebd85fd07d4f2ae34fee5414ffdc9ddf",
        "content": "                table.setItem(i, 3, table.__class__.createItem(order.get('order_id', '')))\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1345-1349",
        "file2": "main_modular.py",
        "lines2": "1346-1350",
        "block_hash": "d675428ad773ac2ff9d7368455d0785c",
        "content": "\n    def _on_session_selected(self, session_info: dict):\n        \"\"\"场次选择处理 - 加载座位图\"\"\"\n        try:\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1345-1349",
        "file2": "main_modular.py",
        "lines2": "1347-1351",
        "block_hash": "d675428ad773ac2ff9d7368455d0785c",
        "content": "    def _on_session_selected(self, session_info: dict):\n        \"\"\"场次选择处理 - 加载座位图\"\"\"\n        try:\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1352-1356",
        "file2": "main_modular.py",
        "lines2": "1353-1357",
        "block_hash": "66bb559a4d9f4574c926d7e8291f9a74",
        "content": "            # 验证必要信息\n            session_data = session_info.get('session_data')\n            account..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1357-1361",
        "file2": "main_modular.py",
        "lines2": "1358-1362",
        "block_hash": "86cb911ab95c534b91b93290c7e57cdf",
        "content": "            if not all([session_data, account, cinema_data]):\n                self._safe_update_seat..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1363-1367",
        "file2": "main_modular.py",
        "lines2": "1364-1368",
        "block_hash": "9114f59e83025a97864d41e2c42486fc",
        "content": "            QTimer.singleShot(100, lambda: self._load_seat_map(session_info))\n            \n        e..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1365-1369",
        "file2": "main_modular.py",
        "lines2": "1366-1370",
        "block_hash": "f2cacb958e0a83fb7bb2aa7cfd3323ea",
        "content": "        except Exception as e:\n            pass\n            # 安全地更新座位区域显示\n            self._safe_upd..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "223-227",
        "file2": "main_modular.py",
        "lines2": "1384-1388",
        "block_hash": "5e17cddc25a08052d326ed96bd1e4ea1",
        "content": "            self.seat_placeholder.setAlignment(Qt.AlignCenter)\n            self.seat_placeholder.set..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "224-228",
        "file2": "main_modular.py",
        "lines2": "1385-1389",
        "block_hash": "520d422b3fcf53393a10e003db5fe31e",
        "content": "            self.seat_placeholder.setStyleSheet(\"\"\"\n                QLabel {\n                    col..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "225-229",
        "file2": "main_modular.py",
        "lines2": "1386-1390",
        "block_hash": "a57ac5a7b7f372b5289870029e1abe04",
        "content": "                QLabel {\n                    color: #999999;\n                    font: 14px \"Microso..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "226-230",
        "file2": "main_modular.py",
        "lines2": "1387-1391",
        "block_hash": "c5ba789b57b985974deb16210b788911",
        "content": "                    color: #999999;\n                    font: 14px \"Microsoft YaHei\";\n              ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "227-231",
        "file2": "main_modular.py",
        "lines2": "1388-1392",
        "block_hash": "f89f429141cca15f35f727ab49b3de47",
        "content": "                    font: 14px \"Microsoft YaHei\";\n                    background-color: #ffffff;\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "228-232",
        "file2": "main_modular.py",
        "lines2": "1389-1393",
        "block_hash": "241ca2ac31c0b4cccf9fcbf992111170",
        "content": "                    background-color: #ffffff;\n                    border: 1px dashed #cccccc;\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "229-233",
        "file2": "main_modular.py",
        "lines2": "1390-1394",
        "block_hash": "4de22b6dae3c394c5563e6ccbab26105",
        "content": "                    border: 1px dashed #cccccc;\n                    padding: 60px;\n                 ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "230-234",
        "file2": "main_modular.py",
        "lines2": "1391-1395",
        "block_hash": "21a3915a1e04f3ba558c12b54c58f518",
        "content": "                    padding: 60px;\n                    border-radius: 5px;\n                }\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "231-235",
        "file2": "main_modular.py",
        "lines2": "1392-1396",
        "block_hash": "9738a640d4f26aea31e66cc6d00556ab",
        "content": "                    border-radius: 5px;\n                }\n            \"\"\")\n            self.seat_are..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1396-1400",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n\n        except Exception as e:\n            import traceback\n            traceback.print_exc()"
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1397-1401",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1373-1377",
        "file2": "main_modular.py",
        "lines2": "1404-1408",
        "block_hash": "e3258207dc70102c365fc885a74a1fa4",
        "content": "        try:\n            # 检查座位区域布局是否存在\n            if not hasattr(self, 'seat_area_layout') or not ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1374-1378",
        "file2": "main_modular.py",
        "lines2": "1405-1409",
        "block_hash": "541a7264789e2bd41f2b7d6eee3e78da",
        "content": "            # 检查座位区域布局是否存在\n            if not hasattr(self, 'seat_area_layout') or not self.seat_are..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1375-1379",
        "file2": "main_modular.py",
        "lines2": "1406-1410",
        "block_hash": "3e9b222806e349feed103fd55fec7623",
        "content": "            if not hasattr(self, 'seat_area_layout') or not self.seat_area_layout:\n                r..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1378-1382",
        "file2": "main_modular.py",
        "lines2": "1409-1413",
        "block_hash": "47648eccdb206ea6fa97d875772f24a2",
        "content": "            # 清理现有的座位组件\n            self._clear_seat_area()\n\n            # 重新创建座位占位符\n            fro..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1379-1383",
        "file2": "main_modular.py",
        "lines2": "1410-1414",
        "block_hash": "a8de96d0c6ebb49b842e32d65a8530c2",
        "content": "            self._clear_seat_area()\n\n            # 重新创建座位占位符\n            from ui.widgets.classic_com..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1380-1384",
        "file2": "main_modular.py",
        "lines2": "1411-1415",
        "block_hash": "989576f4ee28643fab1b8e3e18929e6a",
        "content": "\n            # 重新创建座位占位符\n            from ui.widgets.classic_components import ClassicLabel\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1395-1399",
        "file2": "main_modular.py",
        "lines2": "1417-1421",
        "block_hash": "93a49032d04b31482867ff49a44b90d9",
        "content": "            self.seat_area_layout.addWidget(self.seat_placeholder)\n\n\n        except Exception as e:\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1418-1422",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n\n        except Exception as e:\n            import traceback\n            traceback.print_exc()"
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1419-1423",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1423-1427",
        "file2": "main_modular.py",
        "lines2": "1424-1428",
        "block_hash": "dfd0faff25b0d246316363613fae43e6",
        "content": "    def _clear_seat_area(self):\n        \"\"\"清理座位区域的所有组件\"\"\"\n        try:\n            if hasattr(self, ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1435-1439",
        "file2": "main_modular.py",
        "lines2": "1436-1440",
        "block_hash": "c5d4aae8ab140598506b452b5b3df250",
        "content": "    def _load_seat_map(self, session_info: dict):\n        \"\"\"加载座位图数据\"\"\"\n        try:\n            fro..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1440-1444",
        "file2": "main_modular.py",
        "lines2": "1441-1445",
        "block_hash": "38c79d9b543e48a5fdbc4ade9615239e",
        "content": "            # 获取必要参数\n            session_data = session_info['session_data']\n            account = s..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1440-1444",
        "file2": "main_modular.py",
        "lines2": "1442-1446",
        "block_hash": "38c79d9b543e48a5fdbc4ade9615239e",
        "content": "            session_data = session_info['session_data']\n            account = session_info['account'..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1445-1449",
        "file2": "main_modular.py",
        "lines2": "1446-1450",
        "block_hash": "7a105c7d064f262ea4351a0726626b00",
        "content": "            # 🆕 修复base_url字段名问题\n            # 从影院数据中获取base_url，支持多种字段名\n            base_url = cinema..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1447-1451",
        "file2": "main_modular.py",
        "lines2": "1448-1452",
        "block_hash": "6db68bb841da2b3d8be4ac510596df0c",
        "content": "            base_url = cinema_data.get('base_url', '') or cinema_data.get('domain', '')\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1450-1454",
        "file2": "main_modular.py",
        "lines2": "1451-1455",
        "block_hash": "39e3a70b15321291c3135e3f6e1c3bb2",
        "content": "                base_url = base_url.replace('https://', '').replace('http://', '')\n            \n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1480-1484",
        "file2": "main_modular.py",
        "lines2": "1481-1485",
        "block_hash": "aa2cea18c3017dfb5b7c07ddf6d02199",
        "content": "            # 调用座位图API\n            seat_result = get_plan_seat_info(**params)\n            \n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1483-1487",
        "file2": "main_modular.py",
        "lines2": "1484-1488",
        "block_hash": "9f159470eaa96685149749a1f643dd2d",
        "content": "            print(f\"[主窗口] 座位图API响应: {type(seat_result)}\")\n            \n            if seat_result an..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1488-1492",
        "file2": "main_modular.py",
        "lines2": "1489-1493",
        "block_hash": "fe6f3890e38d3f0b61b90d221b275aad",
        "content": "                    seat_data = seat_result.get('resultData', {})\n                    self._display_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1493-1497",
        "file2": "main_modular.py",
        "lines2": "1494-1498",
        "block_hash": "c3567ec69eb3c57151942e5a3325c8ec",
        "content": "                    error_msg = seat_result.get('resultDesc', '未知错误')\n                    self._safe..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1500-1504",
        "file2": "main_modular.py",
        "lines2": "1501-1505",
        "block_hash": "94f62cdebd320554d4188df17e70f809",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1505-1509",
        "file2": "main_modular.py",
        "lines2": "1506-1510",
        "block_hash": "ed0b292f3a62bd0a7135a2089d056dad",
        "content": "    def _display_seat_map(self, seat_data: dict, session_info: dict):\n        \"\"\"显示座位图\"\"\"\n        tr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1531-1535",
        "file2": "main_modular.py",
        "lines2": "1532-1536",
        "block_hash": "2fa786b7fa77f0861215df3978dfedcf",
        "content": "            if seat_matrix and len(seat_matrix) > 0:\n                try:\n                    # 替换占位..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1534-1538",
        "file2": "main_modular.py",
        "lines2": "1535-1539",
        "block_hash": "435d81bfb3b409b4f78eba6285ab0103",
        "content": "                    from ui.components.seat_map_panel_pyqt5 import SeatMapPanelPyQt5\n               ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1428-1432",
        "file2": "main_modular.py",
        "lines2": "1539-1543",
        "block_hash": "dafafc9da71d6c85228aeedad9043bf3",
        "content": "                        # 清除现有组件\n                        while self.seat_area_layout.count():\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1428-1432",
        "file2": "main_modular.py",
        "lines2": "1540-1544",
        "block_hash": "dafafc9da71d6c85228aeedad9043bf3",
        "content": "                        while self.seat_area_layout.count():\n                            child = sel..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1544-1548",
        "file2": "main_modular.py",
        "lines2": "1545-1549",
        "block_hash": "23c2f3145dc81c99e6d72bbd98a3433e",
        "content": "                        # 创建新的座位图面板\n                        seat_panel = SeatMapPanelPyQt5()\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1551-1555",
        "file2": "main_modular.py",
        "lines2": "1552-1556",
        "block_hash": "097ad2c08dbd378649459a112e11fd22",
        "content": "                        # 🆕 连接提交订单回调\n                        seat_panel.set_on_submit_order(self._on..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1556-1560",
        "file2": "main_modular.py",
        "lines2": "1557-1561",
        "block_hash": "7f03debb3607b5758c543a9d5343d5d2",
        "content": "                        self.seat_area_layout.addWidget(seat_panel)\n                        \n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1561-1565",
        "file2": "main_modular.py",
        "lines2": "1562-1566",
        "block_hash": "49b94e3f409f3cf6f62b51f47ab07466",
        "content": "                        # 更新成功信息\n                        session_text = session_info.get('session_te..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1565-1569",
        "file2": "main_modular.py",
        "lines2": "1566-1570",
        "block_hash": "b25dcea73cc713abfef5dd39825e2f9c",
        "content": "                        # 更新座位输入框提示\n                        if hasattr(self, 'seat_input'):\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1565-1569",
        "file2": "main_modular.py",
        "lines2": "1567-1571",
        "block_hash": "b25dcea73cc713abfef5dd39825e2f9c",
        "content": "                        if hasattr(self, 'seat_input'):\n                            self.seat_input...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1583-1587",
        "file2": "main_modular.py",
        "lines2": "1584-1588",
        "block_hash": "4bead4f58070aa225fe61588deb99eb1",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1588-1592",
        "file2": "main_modular.py",
        "lines2": "1589-1593",
        "block_hash": "dc38ff967a9aded026c5474893551023",
        "content": "    def _parse_seats_array(self, seats_array: List[Dict], hall_info: dict) -> List[List[Dict]]:\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1612-1616",
        "file2": "main_modular.py",
        "lines2": "1613-1617",
        "block_hash": "8fcb94f5d243d2dabfe6748a41997c16",
        "content": "                physical_row = seat.get('rn', 0)\n                physical_col = seat.get('cn', 0)\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1622-1626",
        "file2": "main_modular.py",
        "lines2": "1623-1627",
        "block_hash": "4510b43c9c42f16955fa336f1a5f893b",
        "content": "            seat_matrix = []\n            for row in range(max_row):\n                seat_row = [None..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1628-1632",
        "file2": "main_modular.py",
        "lines2": "1629-1633",
        "block_hash": "7a16480173a971d083ece69701c06225",
        "content": "            for seat in seats_array:\n                # 🆕 使用物理座位号（rn, cn）确定在座位图中的位置\n                p..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1630-1634",
        "file2": "main_modular.py",
        "lines2": "1631-1635",
        "block_hash": "3582dbbdcb00e954c2345342161e750d",
        "content": "                physical_row = seat.get('rn', 0) - 1  # 转为0基索引\n                physical_col = seat.g..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1644-1648",
        "file2": "main_modular.py",
        "lines2": "1645-1649",
        "block_hash": "c6767a44047b5dece2260029deba1aac",
        "content": "                    # 物理座位号（rn, cn）用于构建座位图布局\n                    # 逻辑座位号（r, c）用于显示和提交\n              ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1644-1648",
        "file2": "main_modular.py",
        "lines2": "1646-1650",
        "block_hash": "c6767a44047b5dece2260029deba1aac",
        "content": "                    # 逻辑座位号（r, c）用于显示和提交\n                    logical_row = seat.get('r', '')  # 逻辑排号..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1650-1654",
        "file2": "main_modular.py",
        "lines2": "1651-1655",
        "block_hash": "ba18d3fadd0e9995f23eaaf874b019b6",
        "content": "                    if logical_col:\n                        real_seat_num = str(logical_col)\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1669-1673",
        "file2": "main_modular.py",
        "lines2": "1670-1674",
        "block_hash": "88a225cbfc52136b47092ca54bbe0248",
        "content": "            # 打印前几行座位数据用于调试，显示物理间隔\n            for i, row in enumerate(seat_matrix[:3]):  # 只打印前3行\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1688-1692",
        "file2": "main_modular.py",
        "lines2": "1689-1693",
        "block_hash": "7b29b3e137981aa89d22f4da291fb5e7",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1693-1697",
        "file2": "main_modular.py",
        "lines2": "1694-1698",
        "block_hash": "5abd78e361bcf7216f464233f1229426",
        "content": "    def _on_seat_map_selection_changed(self, selected_seats: List[Dict]):\n        \"\"\"座位图选择变化处理\"\"\"\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1701-1705",
        "file2": "main_modular.py",
        "lines2": "1702-1706",
        "block_hash": "d0c7b983dc86a14aaaea17410763b144",
        "content": "                    seat_names = [seat.get('num', f\"{seat.get('row', '?')}-{seat.get('col', '?')}\") ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1706-1710",
        "file2": "main_modular.py",
        "lines2": "1707-1711",
        "block_hash": "223d60e9810db351f5c776ab46406b8d",
        "content": "                    self.seat_input.setText(\"\")\n            \n            # 触发座位选择事件\n            self..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1711-1715",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "            \n        except Exception as e:\n            import traceback\n            traceback.print..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1715-1719",
        "file2": "main_modular.py",
        "lines2": "1716-1720",
        "block_hash": "c7f3215de7bdf47c13576c60732246e8",
        "content": "    def _on_seat_panel_submit_order(self, selected_seats: List[Dict]):\n        \"\"\"座位面板提交订单处理\"\"\"\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1723-1727",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "            \n        except Exception as e:\n            import traceback\n            traceback.print..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1731-1735",
        "file2": "main_modular.py",
        "lines2": "1732-1736",
        "block_hash": "bf295c2abdf2ebc110e5580737e4d2ec",
        "content": "            self.on_bind_coupons()\n            \n        except Exception as e:\n            pass\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1736-1740",
        "file2": "main_modular.py",
        "lines2": "1737-1741",
        "block_hash": "1a18fc7eeed6b88e99f17af0ca7e9295",
        "content": "    def _on_coupon_exchanged(self, exchange_data: dict):\n        \"\"\"券兑换处理\"\"\"\n        coupon_type = e..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1741-1745",
        "file2": "main_modular.py",
        "lines2": "1742-1746",
        "block_hash": "a3534740a6cd9bc23c656f605b15ffe2",
        "content": "    def _on_seat_load_requested(self, seat_load_data: dict):\n        \"\"\"处理座位图加载请求信号 - 来自Tab管理器的选座按钮\"..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1753-1757",
        "file2": "main_modular.py",
        "lines2": "1754-1758",
        "block_hash": "8e2a86532692d2e57712951dd4d01fc3",
        "content": "            print(f\"  影院: {seat_load_data.get('cinema_name', 'N/A')}\")\n            print(f\"  影片: {se..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1769-1773",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n\n        except Exception as e:\n            import traceback\n            traceback.print_exc()"
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1770-1774",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1771-1775",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1799-1803",
        "file2": "main_modular.py",
        "lines2": "1800-1804",
        "block_hash": "5b9eb033a352cb911779ddb4e8e7c6d7",
        "content": "                self._on_seat_selected(','.join(seats))\n\n        except Exception as e:\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1808-1812",
        "file2": "main_modular.py",
        "lines2": "1809-1813",
        "block_hash": "967057f47151277a58451e933ed8d098",
        "content": "            self.on_one_click_pay()\n            \n        except Exception as e:\n            pass\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1816-1820",
        "file2": "main_modular.py",
        "lines2": "1817-1821",
        "block_hash": "e57373bf1f97912a54418ca9c461a408",
        "content": "\n    def _on_main_login_success(self, user_info: dict):\n        \"\"\"主窗口登录成功处理 - 触发账号列表刷新\"\"\"\n        t..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1821-1825",
        "file2": "main_modular.py",
        "lines2": "1822-1826",
        "block_hash": "551babb81ec7743f253035821b9e9f37",
        "content": "            self.refresh_account_list()\n            \n        except Exception as e:\n            pass..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1826-1830",
        "file2": "main_modular.py",
        "lines2": "1827-1831",
        "block_hash": "9d46ac762c6d45d51cd2553f088f3f3d",
        "content": "    # ===== 全局事件处理方法 =====\n\n    def _on_global_login_success(self, user_info: dict):\n        \"\"\"全局登录..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1838-1842",
        "file2": "main_modular.py",
        "lines2": "1839-1843",
        "block_hash": "2951ef5ece4893caf9f38a4b7a6ea067",
        "content": "            if phone:\n                self.phone_display.setText(f\"当前账号: {phone}\")\n            else:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1852-1856",
        "file2": "main_modular.py",
        "lines2": "1853-1857",
        "block_hash": "4bca53fd186032b412aa0a9f57ed29db",
        "content": "            cinema_name = cinema_data.get('cinemaShortName', '未知影院')\n            cinema_id = cinema_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1858-1862",
        "file2": "main_modular.py",
        "lines2": "1859-1863",
        "block_hash": "99af5d469e205effbd637f6e981f16f2",
        "content": "            if cinema_id:\n                self._auto_select_cinema_account(cinema_data)\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1863-1867",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1867-1871",
        "file2": "main_modular.py",
        "lines2": "1868-1872",
        "block_hash": "34aead7434d52a7f36b393a3dd2a074c",
        "content": "    def _on_global_order_created(self, order_data: dict):\n        \"\"\"全局订单创建处理\"\"\"\n        try:\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1873-1877",
        "file2": "main_modular.py",
        "lines2": "1874-1878",
        "block_hash": "dbce86b8c9f649a61c0f913e3179db01",
        "content": "            self._update_order_details(order_data)\n            \n            # 更新取票码区域\n            se..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1876-1880",
        "file2": "main_modular.py",
        "lines2": "1877-1881",
        "block_hash": "bea4b71bdb5898da6ba33b51b77091a3",
        "content": "            self.qr_display.setText(f\"订单号: {order_id}\\n\\n取票码将在支付完成后显示\")\n            \n        except ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1881-1885",
        "file2": "main_modular.py",
        "lines2": "1882-1886",
        "block_hash": "31022a59b0c2a0d0491b92619586a486",
        "content": "    def _on_global_order_paid(self, order_id: str):\n        \"\"\"全局订单支付处理 - 修复：不覆盖已显示的取票码二维码\"\"\"\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1888-1892",
        "file2": "main_modular.py",
        "lines2": "1889-1893",
        "block_hash": "28d921535134062e68008334d8639a64",
        "content": "            print(f\"[主窗口] 📋 订单支付成功事件: {order_id}\")\n\n            # 检查是否已经有取票码二维码显示\n            if has..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1893-1897",
        "file2": "main_modular.py",
        "lines2": "1894-1898",
        "block_hash": "290842f0226b603bfac1b5dba79abe3a",
        "content": "                if self.qr_display.pixmap() and not self.qr_display.pixmap().isNull():\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1299-1303",
        "file2": "main_modular.py",
        "lines2": "1901-1905",
        "block_hash": "343a61a79ee08ff334ae48f5432be506",
        "content": "                self.qr_display.setStyleSheet(\"\"\"\n                    QLabel {\n                     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1300-1304",
        "file2": "main_modular.py",
        "lines2": "1902-1906",
        "block_hash": "512c0d967161b4ed77a4e279c4cda2ce",
        "content": "                    QLabel {\n                        color: #2e7d32;\n                        font: b..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1301-1305",
        "file2": "main_modular.py",
        "lines2": "1903-1907",
        "block_hash": "b87b2aef26956b531a123195bcca905b",
        "content": "                        color: #2e7d32;\n                        font: bold 12px \"Microsoft YaHei\";\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1302-1306",
        "file2": "main_modular.py",
        "lines2": "1904-1908",
        "block_hash": "1dfc3cfa43c9d5e434400f7ebe3fd422",
        "content": "                        font: bold 12px \"Microsoft YaHei\";\n                        background-color:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1303-1307",
        "file2": "main_modular.py",
        "lines2": "1905-1909",
        "block_hash": "91a52af776fb6b5c285c955fa45263a1",
        "content": "                        background-color: #e8f5e8;\n                        border: 2px solid #4caf50..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1304-1308",
        "file2": "main_modular.py",
        "lines2": "1906-1910",
        "block_hash": "e542b283e111f25d002271ea8cd7b903",
        "content": "                        border: 2px solid #4caf50;\n                        padding: 20px;\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1920-1924",
        "file2": "main_modular.py",
        "lines2": "1921-1925",
        "block_hash": "ff2e13415a8b06084f3f9f254c881429",
        "content": "            qr_code = detail_data.get('qrCode', '')\n            ticket_code = detail_data.get('ticke..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1925-1929",
        "file2": "main_modular.py",
        "lines2": "1926-1930",
        "block_hash": "52dca9df8c720007b483911a0e3917be",
        "content": "            # 🎯 确定最终的取票码（优先使用qrCode）\n            final_ticket_code = qr_code or ds_code or ticket_co..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1930-1934",
        "file2": "main_modular.py",
        "lines2": "1931-1935",
        "block_hash": "7bb6c8c326fd46de3317bb981ff7ec42",
        "content": "                self._generate_payment_success_qrcode(order_id, final_ticket_code, detail_data, cine..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1932-1936",
        "file2": "main_modular.py",
        "lines2": "1933-1937",
        "block_hash": "1077ab1ad7a0e9a1bbbb628b5e0a635e",
        "content": "            else:\n                pass\n                # 显示支付成功但无取票码的信息\n                self._show_p..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1937-1941",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1947-1951",
        "file2": "main_modular.py",
        "lines2": "1948-1952",
        "block_hash": "e888a7ec70a5d9afd733338b64e5eb4d",
        "content": "            from utils.qrcode_generator import generate_ticket_qrcode, save_qrcode_image\n\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1950-1954",
        "file2": "main_modular.py",
        "lines2": "1951-1955",
        "block_hash": "283eb6ee62fe676245eae895157b5a1f",
        "content": "            qr_bytes = generate_ticket_qrcode(ticket_code, detail_data)\n\n            if qr_bytes:\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1955-1959",
        "file2": "main_modular.py",
        "lines2": "1956-1960",
        "block_hash": "9e48b9827c3ec31ea7fde32a57bb08a6",
        "content": "                # 🎯 保存二维码图片到本地\n                save_path = save_qrcode_image(qr_bytes, order_id, cin..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1955-1959",
        "file2": "main_modular.py",
        "lines2": "1957-1961",
        "block_hash": "9e48b9827c3ec31ea7fde32a57bb08a6",
        "content": "                save_path = save_qrcode_image(qr_bytes, order_id, cinema_id)\n                if save..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1980-1984",
        "file2": "main_modular.py",
        "lines2": "1981-1985",
        "block_hash": "8686c9fefb824d18e4e808d77d07623c",
        "content": "                # 🎯 直接调用显示方法（不通过事件总线，避免延迟）\n                # 🔧 修复：确保支付成功后的显示与双击订单查看完全一致\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1980-1984",
        "file2": "main_modular.py",
        "lines2": "1982-1986",
        "block_hash": "8686c9fefb824d18e4e808d77d07623c",
        "content": "                # 🔧 修复：确保支付成功后的显示与双击订单查看完全一致\n                print(f\"[支付成功] 📤 调用统一显示函数，显示类型: {qr_dat..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1932-1936",
        "file2": "main_modular.py",
        "lines2": "1986-1990",
        "block_hash": "1077ab1ad7a0e9a1bbbb628b5e0a635e",
        "content": "\n            else:\n                pass\n                # 降级显示支付成功信息\n                self._show_paym..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1932-1936",
        "file2": "main_modular.py",
        "lines2": "1987-1991",
        "block_hash": "1077ab1ad7a0e9a1bbbb628b5e0a635e",
        "content": "            else:\n                pass\n                # 降级显示支付成功信息\n                self._show_payme..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1934-1938",
        "file2": "main_modular.py",
        "lines2": "1988-1992",
        "block_hash": "5e77f4d9d5fb6b8444a7512f89024853",
        "content": "                pass\n                # 降级显示支付成功信息\n                self._show_payment_success_without..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1935-1939",
        "file2": "main_modular.py",
        "lines2": "1989-1993",
        "block_hash": "989d1f996f1fcb88a25ac2e1c286f05d",
        "content": "                # 降级显示支付成功信息\n                self._show_payment_success_without_qrcode(order_id)\n\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1936-1940",
        "file2": "main_modular.py",
        "lines2": "1990-1994",
        "block_hash": "fe176f62d00b30a2056f0bc70720c08f",
        "content": "                self._show_payment_success_without_qrcode(order_id)\n\n        except Exception as e:\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "1991-1995",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1938-1942",
        "file2": "main_modular.py",
        "lines2": "1992-1996",
        "block_hash": "191b8f0c0ab9289b37fc72a1a03bda26",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1939-1943",
        "file2": "main_modular.py",
        "lines2": "1993-1997",
        "block_hash": "225baf1043023597afbbc67082704916",
        "content": "            import traceback\n            traceback.print_exc()\n            # 降级显示支付成功信息\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1303-1307",
        "file2": "main_modular.py",
        "lines2": "2007-2011",
        "block_hash": "91a52af776fb6b5c285c955fa45263a1",
        "content": "                    background-color: #e8f5e8;\n                    border: 2px solid #4caf50;\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1304-1308",
        "file2": "main_modular.py",
        "lines2": "2008-2012",
        "block_hash": "e542b283e111f25d002271ea8cd7b903",
        "content": "                    border: 2px solid #4caf50;\n                    padding: 20px;\n                  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2016-2020",
        "file2": "main_modular.py",
        "lines2": "2017-2021",
        "block_hash": "6c47ec4d15891839f3a98dd892cb8628",
        "content": "    def _on_show_qrcode(self, qr_data):\n        \"\"\"显示二维码处理\"\"\"\n        try:\n            print(f\"[主窗口]..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2022-2026",
        "file2": "main_modular.py",
        "lines2": "2023-2027",
        "block_hash": "f277e1622ec0cf28b221e7a5d425d845",
        "content": "            if isinstance(qr_data, dict):\n                display_type = qr_data.get('display_type',..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2027-2031",
        "file2": "main_modular.py",
        "lines2": "2028-2032",
        "block_hash": "bdd07a4dbe8f8b0e7d0f79a18830f34e",
        "content": "                    print(f\"[主窗口] 📱 - 订单号: {qr_data.get('order_no', 'N/A')}\")\n                    pr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2031-2035",
        "file2": "main_modular.py",
        "lines2": "2032-2036",
        "block_hash": "f447bd9fa60e58da667d42d1a86a228a",
        "content": "                    # 显示取票码信息\n                    self._display_ticket_code_info(qr_data)\n\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2036-2040",
        "file2": "main_modular.py",
        "lines2": "2037-2041",
        "block_hash": "c5b5d37336e2af685347410e851fe882",
        "content": "                    print(f\"[主窗口] 🎭 - 订单号: {qr_data.get('order_no', 'N/A')}\")\n                    pr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2041-2045",
        "file2": "main_modular.py",
        "lines2": "2042-2046",
        "block_hash": "8f0368e3206f710afae8c6c7d2c384f6",
        "content": "                    # 显示组合信息（文本+图片）\n                    self._display_combined_ticket_info(qr_data)\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2053-2057",
        "file2": "main_modular.py",
        "lines2": "2054-2058",
        "block_hash": "10202f59cadf00fac864338b0249b7fd",
        "content": "                    self._display_generated_qrcode(qr_data)\n\n                else:\n                 ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2058-2062",
        "file2": "main_modular.py",
        "lines2": "2059-2063",
        "block_hash": "3dc3410666dc11180553ae40f3d26705",
        "content": "                    print(f\"[主窗口] 📊 - 订单号: {qr_data.get('order_no', 'N/A')}\")\n                    pr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2062-2066",
        "file2": "main_modular.py",
        "lines2": "2063-2067",
        "block_hash": "389387fe1d2fc31019e7ddbef0a3d1a2",
        "content": "                    # 获取二维码字节数据\n                    qr_bytes = qr_data.get('qr_bytes')\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2079-2083",
        "file2": "main_modular.py",
        "lines2": "2080-2084",
        "block_hash": "997776f2a14df449ee7faeb8762e4fb1",
        "content": "                self._display_qrcode_text(qr_data)\n            else:\n                print(f\"[主窗口] ⚠..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "2084-2088",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2128-2132",
        "file2": "main_modular.py",
        "lines2": "2129-2133",
        "block_hash": "1cb261b234efc16669ee0bd401e396b6",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2153-2157",
        "file2": "main_modular.py",
        "lines2": "2154-2158",
        "block_hash": "56c26d19e6d483879d11035aacaae8fa",
        "content": "            if ticket_code:\n                info_text += f\"🎫 取票码: {ticket_code}\\n\"\n            else:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2158-2162",
        "file2": "main_modular.py",
        "lines2": "2159-2163",
        "block_hash": "a051d793d1a7113d2f362aa3b6d06dd4",
        "content": "            info_text += f\"📋 订单号: {order_no}\"\n\n            print(f\"[主窗口] 🔍 文本长度: {len(info_text)}\")\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2160-2164",
        "file2": "main_modular.py",
        "lines2": "2161-2165",
        "block_hash": "ce8692cb7999a94f8b0045fd886a69f5",
        "content": "            print(f\"[主窗口] 🔍 文本长度: {len(info_text)}\")\n            print(f\"[主窗口] 🔍 文本内容: {repr(info_te..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1861-1865",
        "file2": "main_modular.py",
        "lines2": "2180-2184",
        "block_hash": "6dd7043f5dfeaf06864ec79370d72730",
        "content": "            else:\n                pass\n\n        except Exception as e:\n            import traceback"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1862-1866",
        "file2": "main_modular.py",
        "lines2": "2181-2185",
        "block_hash": "e8dd531a5d8383b8a3f7fb654ddf338c",
        "content": "                pass\n\n        except Exception as e:\n            import traceback\n            traceb..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "2182-2186",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "2203-2207",
        "file2": "main_modular.py",
        "lines2": "2204-2208",
        "block_hash": "ef36bf4c1c47846acdb8a1ed118f7e0e",
        "content": "            print(f\"[主窗口] 🎭 - 二维码: {len(qr_bytes) if qr_bytes else 0} bytes {data_format}\")\n\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2099-2103",
        "file2": "main_modular.py",
        "lines2": "2215-2219",
        "block_hash": "4bee9497d14b47749ac105fb09d4fd04",
        "content": "                        pixmap = QPixmap()\n                        success = pixmap.loadFromData(byt..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2112-2116",
        "file2": "main_modular.py",
        "lines2": "2230-2234",
        "block_hash": "9c04a73c2df519e08e912cd2e4e5b9c0",
        "content": "                    self.qr_display.setText(\"\")  # 清空文本\n                    self.qr_display.setAlign..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2113-2117",
        "file2": "main_modular.py",
        "lines2": "2231-2235",
        "block_hash": "b116fcecc1cc22d00e6f88fcf643090a",
        "content": "                    self.qr_display.setAlignment(Qt.AlignCenter)\n                    self.qr_display..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2114-2118",
        "file2": "main_modular.py",
        "lines2": "2232-2236",
        "block_hash": "77ec6b6f9f490327456fc436084c498f",
        "content": "                    self.qr_display.setStyleSheet(\"\"\"\n                        QLabel {\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2146-2150",
        "file2": "main_modular.py",
        "lines2": "2244-2248",
        "block_hash": "5248fbd5d090a491bde70b8b8091f858",
        "content": "                    # 如果图片加载失败，显示文本信息\n                    info_text = f\"🎬 {film_name}\\n\"\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2147-2151",
        "file2": "main_modular.py",
        "lines2": "2245-2249",
        "block_hash": "7fafdb9edc5f6a6ac096f253cd6bea4a",
        "content": "                    info_text = f\"🎬 {film_name}\\n\"\n                    info_text += f\"🏛️ {cinema_nam..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2165-2169",
        "file2": "main_modular.py",
        "lines2": "2253-2257",
        "block_hash": "dc479bb75d09877267669b14c7405a17",
        "content": "\n                    self.qr_display.clear()\n                    self.qr_display.setText(info_text)\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2166-2170",
        "file2": "main_modular.py",
        "lines2": "2254-2258",
        "block_hash": "d06ac28e64a92a50f287cb708f582d3c",
        "content": "                    self.qr_display.clear()\n                    self.qr_display.setText(info_text)\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2167-2171",
        "file2": "main_modular.py",
        "lines2": "2255-2259",
        "block_hash": "c7421d08dea304ff429d531c1233de3c",
        "content": "                    self.qr_display.setText(info_text)\n                    self.qr_display.setAlignm..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2173-2177",
        "file2": "main_modular.py",
        "lines2": "2261-2265",
        "block_hash": "92c041049d034ccfff49ebf045403bce",
        "content": "                            background-color: #e3f2fd;\n                            border: 2px solid..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2174-2178",
        "file2": "main_modular.py",
        "lines2": "2262-2266",
        "block_hash": "0fe8b6183b79dd6fd7d1784a741ac71b",
        "content": "                            border: 2px solid #2196f3;\n                            padding: 15px;\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2175-2179",
        "file2": "main_modular.py",
        "lines2": "2263-2267",
        "block_hash": "63470aea864a4146b78ff58c6fc88019",
        "content": "                            padding: 15px;\n                            border-radius: 8px;\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1861-1865",
        "file2": "main_modular.py",
        "lines2": "2269-2273",
        "block_hash": "6dd7043f5dfeaf06864ec79370d72730",
        "content": "            else:\n                pass\n\n        except Exception as e:\n            import traceback"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1862-1866",
        "file2": "main_modular.py",
        "lines2": "2270-2274",
        "block_hash": "e8dd531a5d8383b8a3f7fb654ddf338c",
        "content": "                pass\n\n        except Exception as e:\n            import traceback\n            traceb..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "2271-2275",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "2213-2217",
        "file2": "main_modular.py",
        "lines2": "2300-2304",
        "block_hash": "0a2875a67a0e4890fd1740baf217fab4",
        "content": "                try:\n                    # 🎯 加载生成的二维码图片\n                    byte_array = QByteArray(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2097-2101",
        "file2": "main_modular.py",
        "lines2": "2301-2305",
        "block_hash": "6c78abb3cff3352b6bf0326fa75754e5",
        "content": "                    # 🎯 加载生成的二维码图片\n                    byte_array = QByteArray(qr_bytes)\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2214-2218",
        "file2": "main_modular.py",
        "lines2": "2302-2306",
        "block_hash": "e1f018ea5035bb8c074041b7e5d0fb47",
        "content": "                    byte_array = QByteArray(qr_bytes)\n                    pixmap = QPixmap()\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2099-2103",
        "file2": "main_modular.py",
        "lines2": "2303-2307",
        "block_hash": "4bee9497d14b47749ac105fb09d4fd04",
        "content": "                    pixmap = QPixmap()\n                    success = pixmap.loadFromData(byte_array)..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2305-2309",
        "file2": "main_modular.py",
        "lines2": "2306-2310",
        "block_hash": "31bc5428312bbce3feba43058e5c4453",
        "content": "                    if success and not pixmap.isNull():\n                        # 🎯 显示优化后的二维码图片（保持原始..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2111-2115",
        "file2": "main_modular.py",
        "lines2": "2322-2326",
        "block_hash": "a7a05b3b851dd7e382487d351716e618",
        "content": "                        self.qr_display.setPixmap(scaled_pixmap)\n                        self.qr_dis..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2112-2116",
        "file2": "main_modular.py",
        "lines2": "2323-2327",
        "block_hash": "9c04a73c2df519e08e912cd2e4e5b9c0",
        "content": "                        self.qr_display.setText(\"\")  # 清空文本\n                        self.qr_display...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2113-2117",
        "file2": "main_modular.py",
        "lines2": "2324-2328",
        "block_hash": "b116fcecc1cc22d00e6f88fcf643090a",
        "content": "                        self.qr_display.setAlignment(Qt.AlignCenter)\n                        self.qr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2333-2337",
        "file2": "main_modular.py",
        "lines2": "2334-2338",
        "block_hash": "fb2ec668ea394dbf86820522f40152f4",
        "content": "                        print(f\"[主窗口] ✅ 生成的二维码显示成功: {pixmap.width()}x{pixmap.height()}\")\n\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2335-2339",
        "file2": "main_modular.py",
        "lines2": "2336-2340",
        "block_hash": "99464e502f0ae554095dc749de72abfc",
        "content": "                    else:\n                        pass\n                        # 降级显示文本信息\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2338-2342",
        "file2": "main_modular.py",
        "lines2": "2339-2343",
        "block_hash": "001b9cc2a7829446dbb4a4d5295ec767",
        "content": "                        self._display_qrcode_text(f\"🎫 取票码: {ticket_code}\\n📋 订单号: {order_no}\\n⚠️ 二维码显..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1861-1865",
        "file2": "main_modular.py",
        "lines2": "2345-2349",
        "block_hash": "6dd7043f5dfeaf06864ec79370d72730",
        "content": "            else:\n                pass\n\n        except Exception as e:\n            import traceback"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1862-1866",
        "file2": "main_modular.py",
        "lines2": "2346-2350",
        "block_hash": "e8dd531a5d8383b8a3f7fb654ddf338c",
        "content": "                pass\n\n        except Exception as e:\n            import traceback\n            traceb..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "2347-2351",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "1299-1303",
        "file2": "main_modular.py",
        "lines2": "2359-2363",
        "block_hash": "343a61a79ee08ff334ae48f5432be506",
        "content": "                self.qr_display.setStyleSheet(\"\"\"\n                    QLabel {\n                     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1300-1304",
        "file2": "main_modular.py",
        "lines2": "2360-2364",
        "block_hash": "512c0d967161b4ed77a4e279c4cda2ce",
        "content": "                    QLabel {\n                        color: #2e7d32;\n                        font: b..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1301-1305",
        "file2": "main_modular.py",
        "lines2": "2361-2365",
        "block_hash": "b87b2aef26956b531a123195bcca905b",
        "content": "                        color: #2e7d32;\n                        font: bold 12px \"Microsoft YaHei\";\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1302-1306",
        "file2": "main_modular.py",
        "lines2": "2362-2366",
        "block_hash": "1dfc3cfa43c9d5e434400f7ebe3fd422",
        "content": "                        font: bold 12px \"Microsoft YaHei\";\n                        background-color:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1303-1307",
        "file2": "main_modular.py",
        "lines2": "2363-2367",
        "block_hash": "91a52af776fb6b5c285c955fa45263a1",
        "content": "                        background-color: #e8f5e8;\n                        border: 2px solid #4caf50..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1304-1308",
        "file2": "main_modular.py",
        "lines2": "2364-2368",
        "block_hash": "e542b283e111f25d002271ea8cd7b903",
        "content": "                        border: 2px solid #4caf50;\n                        padding: 20px;\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1862-1866",
        "file2": "main_modular.py",
        "lines2": "2370-2374",
        "block_hash": "e8dd531a5d8383b8a3f7fb654ddf338c",
        "content": "                pass\n        except Exception as e:\n            import traceback\n            traceba..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2395-2399",
        "file2": "main_modular.py",
        "lines2": "2396-2400",
        "block_hash": "fdf8245c5beb98ea2d3e7573ee8a6dc8",
        "content": "                self._safe_update_seat_area(\"座位图将在此显示\\n\\n请先选择影院、影片、日期和场次\")\n                \n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2400-2404",
        "file2": "main_modular.py",
        "lines2": "2401-2405",
        "block_hash": "ffd81ac8724aa330e6ad4d931565b005",
        "content": "    def _update_order_details(self, order_data: dict):\n        \"\"\"🆕 更新订单详情显示 - 使用统一的订单详情管理器\"\"\"\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2405-2409",
        "file2": "main_modular.py",
        "lines2": "2406-2410",
        "block_hash": "6f1b940b4bc4357ab030370e2553fae1",
        "content": "            self.order_detail_manager.display_order_detail(order_data, 'update')\n\n        except Exc..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2410-2414",
        "file2": "main_modular.py",
        "lines2": "2411-2415",
        "block_hash": "e7fed00637f1e82f88b16ed5120c2066",
        "content": "            if hasattr(self, 'order_detail_text'):\n                self.order_detail_text.setPlainTe..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2419-2423",
        "file2": "main_modular.py",
        "lines2": "2420-2424",
        "block_hash": "012346bcb8b38279519832069b6fdfea",
        "content": "            self.account_widget.cleanup()\n            self.tab_manager_widget.cleanup()\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2422-2426",
        "file2": "main_modular.py",
        "lines2": "2423-2427",
        "block_hash": "98ebd151ed143d2001c57f6b9a3355d1",
        "content": "            event.accept()\n            \n        except Exception as e:\n            event.accept()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "2474-2478",
        "file2": "main_modular.py",
        "lines2": "2475-2479",
        "block_hash": "882befce9a3c1f234cb28db652e66926",
        "content": "        except Exception as e:\n            print(f\"[增强支付] 会员信息API调用失败: {e}\")\n            # 降级到本地数据\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2512-2516",
        "file2": "main_modular.py",
        "lines2": "2513-2517",
        "block_hash": "e463f5ecd0771386964a2e2dcef48024",
        "content": "            cinema_id = self.current_account.get('cinemaid', '') or self.current_account.get('cinema..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2439-2443",
        "file2": "main_modular.py",
        "lines2": "2522-2526",
        "block_hash": "5c4f9e791f48a849905a26ce94726d63",
        "content": "                'groupid': '',\n                'cinemaid': cinema_id,\n                'cardno': '',\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2440-2444",
        "file2": "main_modular.py",
        "lines2": "2523-2527",
        "block_hash": "82c0274732ceba1910a4a8ae8d7b1d4a",
        "content": "                'cinemaid': cinema_id,\n                'cardno': '',\n                'userid': self...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2441-2445",
        "file2": "main_modular.py",
        "lines2": "2524-2528",
        "block_hash": "baed731749ef392db0a04fd7bb103fa3",
        "content": "                'cardno': '',\n                'userid': self.current_account.get('userid', ''),\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2442-2446",
        "file2": "main_modular.py",
        "lines2": "2525-2529",
        "block_hash": "811dcbfc7d6d1d02cd45e7e0b4ea7e15",
        "content": "                'userid': self.current_account.get('userid', ''),\n                'openid': self.cur..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2443-2447",
        "file2": "main_modular.py",
        "lines2": "2526-2530",
        "block_hash": "4f33e0d3743f1f72ff64efe55bb80a71",
        "content": "                'openid': self.current_account.get('openid', ''),\n                'CVersion': '3.9.1..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2444-2448",
        "file2": "main_modular.py",
        "lines2": "2527-2531",
        "block_hash": "18779de5326881b3c48828c076f44810",
        "content": "                'CVersion': '3.9.12',\n                'OS': 'Windows',\n                'token': self..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2445-2449",
        "file2": "main_modular.py",
        "lines2": "2528-2532",
        "block_hash": "3a4fa4b6b51b38e923a1e247617ac5f6",
        "content": "                'OS': 'Windows',\n                'token': self.current_account.get('token', ''),\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2556-2560",
        "file2": "main_modular.py",
        "lines2": "2557-2561",
        "block_hash": "7f647c9b3dbb4a0dd3b107422bcc5fa3",
        "content": "            print(f\"[调试-密码策略] 🔄 降级到影院策略\")\n            cinema_policy = self._get_cinema_password_poli..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2575-2579",
        "file2": "main_modular.py",
        "lines2": "2576-2580",
        "block_hash": "bbb209f06dcce2b61b923a1e7a2ef8f1",
        "content": "            cinema_id = self.current_account.get('cinemaid', '') or self.current_account.get('cinema..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2578-2582",
        "file2": "main_modular.py",
        "lines2": "2579-2583",
        "block_hash": "68bf455024f5034ed28bea007e7ac9e3",
        "content": "            cinema_password_policies = {\n                # 需要密码的影院\n                '61011571': {'req..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2580-2584",
        "file2": "main_modular.py",
        "lines2": "2581-2585",
        "block_hash": "eacc8a6a623493284fdb23ad57f1fe3b",
        "content": "                '61011571': {'requires_password': True, 'name': '华夏优加荟大都荟'},\n                '35fec8..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2587-2591",
        "file2": "main_modular.py",
        "lines2": "2588-2592",
        "block_hash": "dec054e07e3bb972a75e5b318aaee279",
        "content": "            if cinema_id in cinema_password_policies:\n                policy = cinema_password_polic..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2613-2617",
        "file2": "main_modular.py",
        "lines2": "2614-2618",
        "block_hash": "ecf29ca655af8ce3b6cae3d8847422f9",
        "content": "            has_password = False\n            if hasattr(self, 'current_account') and self.current_ac..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2650-2654",
        "file2": "main_modular.py",
        "lines2": "2651-2655",
        "block_hash": "e32a11377a80700146619b3349d0d8bd",
        "content": "    def _get_enhanced_password_display(self, enable_mempassword: str) -> str:\n        \"\"\"🆕 获取增强的密码策略..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2667-2671",
        "file2": "main_modular.py",
        "lines2": "2668-2672",
        "block_hash": "ac551851018aa9d33622e3fad4e64ed8",
        "content": "                print(f\"[密码显示] enable_mempassword值异常: {enable_mempassword}，使用智能默认策略\")\n              ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2683-2687",
        "file2": "main_modular.py",
        "lines2": "2684-2688",
        "block_hash": "11e21e6951b36fc401d1ce273d25819f",
        "content": "        except Exception as e:\n            print(f\"[密码显示] 获取密码显示错误: {e}\")\n            # 最终降级\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2720-2724",
        "file2": "main_modular.py",
        "lines2": "2721-2725",
        "block_hash": "01903531c7f0b4d3a1d214b0af926da2",
        "content": "    def _prompt_set_payment_password(self, account: dict) -> str:\n        \"\"\"🆕 提示用户设置支付密码\"\"\"\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2741-2745",
        "file2": "main_modular.py",
        "lines2": "2742-2746",
        "block_hash": "c5b80ae5f47693bcf9a71cc6765617b8",
        "content": "                if ok and password:\n                    # 保存密码到账号数据\n                    account['pay..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2743-2747",
        "file2": "main_modular.py",
        "lines2": "2744-2748",
        "block_hash": "02a3f7542c0b6206dc32fc39e7c59942",
        "content": "                    account['payment_password'] = password\n\n                    # 保存到文件\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2746-2750",
        "file2": "main_modular.py",
        "lines2": "2747-2751",
        "block_hash": "1a9a5091d0f5bcaf5a4aa6d368fa78f4",
        "content": "                    self._save_payment_password_to_account_file(account)\n\n                    QMessa..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2771-2775",
        "file2": "main_modular.py",
        "lines2": "2772-2776",
        "block_hash": "8824eb4bf5fc834fb66fab29600548f0",
        "content": "            if not os.path.exists(accounts_file):\n                print(f\"[密码管理] 账号文件不存在: {accounts_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "main_modular.py",
        "lines2": "2776-2780",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "            # 读取现有账号数据\n            with open(accounts_file, 'r', encoding='utf-8') as f:\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2791-2795",
        "file2": "main_modular.py",
        "lines2": "2792-2796",
        "block_hash": "de786e01f0dcab3e251423e163f5f636",
        "content": "            if updated:\n                # 写回文件\n                with open(accounts_file, 'w', encodin..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2529-2533",
        "file2": "main_modular.py",
        "lines2": "2821-2825",
        "block_hash": "e97afcd5c737d8e068ffd5f994a2dfc8",
        "content": "                'token': self.current_account.get('token', ''),\n                'source': '2'\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2873-2877",
        "file2": "main_modular.py",
        "lines2": "2874-2878",
        "block_hash": "64156dfdd00a2cae533660a8edbb47ea",
        "content": "            # 3. 获取密码策略\n            order_no = order_data.get('orderno', '')\n            cinema_id =..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2873-2877",
        "file2": "main_modular.py",
        "lines2": "2875-2879",
        "block_hash": "64156dfdd00a2cae533660a8edbb47ea",
        "content": "            order_no = order_data.get('orderno', '')\n            cinema_id = self.current_account.ge..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2819-2823",
        "file2": "main_modular.py",
        "lines2": "2913-2917",
        "block_hash": "a0a79fadf2f83ad73412e69c745182f2",
        "content": "                'userid': self.current_account.get('userid', ''),\n                'openid': self.cur..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2820-2824",
        "file2": "main_modular.py",
        "lines2": "2914-2918",
        "block_hash": "6ab6f575a6265f75dbcd67e4650ac574",
        "content": "                'openid': self.current_account.get('openid', ''),\n                'token': self.curr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2446-2450",
        "file2": "main_modular.py",
        "lines2": "2915-2919",
        "block_hash": "25ce471b5279e13c8db064c7885a80e8",
        "content": "                'token': self.current_account.get('token', ''),\n                'source': '2'\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2846-2850",
        "file2": "main_modular.py",
        "lines2": "2943-2947",
        "block_hash": "7a9fb64cc40096f2f86e2596c08dc119",
        "content": "                }\n\n        except Exception as e:\n            return {'success': False, 'error': str..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2975-2979",
        "file2": "main_modular.py",
        "lines2": "2976-2980",
        "block_hash": "f91b402526a7ccb1330211d07bc8ad3c",
        "content": "            member_password = \"\"\n            if password_policy.get('requires_password', True):\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2988-2992",
        "file2": "main_modular.py",
        "lines2": "2989-2993",
        "block_hash": "5a449f40a26080f57e5a0118e513b9d7",
        "content": "            # 5. 构建混合支付参数\n            member_info = member_result\n            cinema_id = self.curre..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2896-2900",
        "file2": "main_modular.py",
        "lines2": "2999-3003",
        "block_hash": "3756f809814f361963ed59c3627082d2",
        "content": "                'memberinfo': json.dumps({\n                    'cardno': member_info.get('cardno', '..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2897-2901",
        "file2": "main_modular.py",
        "lines2": "3000-3004",
        "block_hash": "f13fa2d11f221a8aeca1dd006deda741",
        "content": "                    'cardno': member_info.get('cardno', ''),\n                    'mobile': member_in..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2818-2822",
        "file2": "main_modular.py",
        "lines2": "3015-3019",
        "block_hash": "88904aabf594c32b134f587c53b50e95",
        "content": "                'cinemaid': cinema_id,\n                'userid': self.current_account.get('userid', ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2819-2823",
        "file2": "main_modular.py",
        "lines2": "3016-3020",
        "block_hash": "a0a79fadf2f83ad73412e69c745182f2",
        "content": "                'userid': self.current_account.get('userid', ''),\n                'openid': self.cur..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2820-2824",
        "file2": "main_modular.py",
        "lines2": "3017-3021",
        "block_hash": "6ab6f575a6265f75dbcd67e4650ac574",
        "content": "                'openid': self.current_account.get('openid', ''),\n                'token': self.curr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2446-2450",
        "file2": "main_modular.py",
        "lines2": "3018-3022",
        "block_hash": "25ce471b5279e13c8db064c7885a80e8",
        "content": "                'token': self.current_account.get('token', ''),\n                'source': '2'\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3021-3025",
        "file2": "main_modular.py",
        "lines2": "3022-3026",
        "block_hash": "ec673763cbc04c2ff2bf29a01f85acda",
        "content": "            # 添加密码参数\n            if password_policy.get('requires_password', True) and member_passwo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2932-2936",
        "file2": "main_modular.py",
        "lines2": "3025-3029",
        "block_hash": "0506bb2c138434ebf240ec65b31c3727",
        "content": "\n            # 6. 执行混合支付\n            from services.api_base import api_post\n            response = a..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2933-2937",
        "file2": "main_modular.py",
        "lines2": "3026-3030",
        "block_hash": "fab9898f833387eaed643aef40eff248",
        "content": "            # 6. 执行混合支付\n            from services.api_base import api_post\n            response = ap..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2846-2850",
        "file2": "main_modular.py",
        "lines2": "3036-3040",
        "block_hash": "7a9fb64cc40096f2f86e2596c08dc119",
        "content": "                }\n\n        except Exception as e:\n            return {'success': False, 'error': str..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3040-3044",
        "file2": "main_modular.py",
        "lines2": "3041-3045",
        "block_hash": "ba98260c575a2c179ebcaa0937e02edd",
        "content": "    def _validate_coupon_prepay(self, order_no: str, coupon_codes: str) -> Dict[str, Any]:\n        \"..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3045-3049",
        "file2": "main_modular.py",
        "lines2": "3046-3050",
        "block_hash": "21aa0ea8beb137e409fb6458a149135d",
        "content": "            if not self.current_account:\n                return {'success': False, 'error': '账号信息缺失'..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2442-2446",
        "file2": "main_modular.py",
        "lines2": "3058-3062",
        "block_hash": "811dcbfc7d6d1d02cd45e7e0b4ea7e15",
        "content": "                'userid': self.current_account.get('userid', ''),\n                'openid': self.cur..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2443-2447",
        "file2": "main_modular.py",
        "lines2": "3059-3063",
        "block_hash": "4f33e0d3743f1f72ff64efe55bb80a71",
        "content": "                'openid': self.current_account.get('openid', ''),\n                'CVersion': '3.9.1..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2444-2448",
        "file2": "main_modular.py",
        "lines2": "3060-3064",
        "block_hash": "18779de5326881b3c48828c076f44810",
        "content": "                'CVersion': '3.9.12',\n                'OS': 'Windows',\n                'token': self..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2445-2449",
        "file2": "main_modular.py",
        "lines2": "3061-3065",
        "block_hash": "3a4fa4b6b51b38e923a1e247617ac5f6",
        "content": "                'OS': 'Windows',\n                'token': self.current_account.get('token', ''),\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2446-2450",
        "file2": "main_modular.py",
        "lines2": "3062-3066",
        "block_hash": "25ce471b5279e13c8db064c7885a80e8",
        "content": "                'token': self.current_account.get('token', ''),\n                'source': '2'\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2846-2850",
        "file2": "main_modular.py",
        "lines2": "3078-3082",
        "block_hash": "7a9fb64cc40096f2f86e2596c08dc119",
        "content": "                }\n\n        except Exception as e:\n            return {'success': False, 'error': str..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3082-3086",
        "file2": "main_modular.py",
        "lines2": "3083-3087",
        "block_hash": "b4b10747828f613e6de6bc4810c3783b",
        "content": "    def process_payment_with_password_management(self, order_data: Dict[str, Any], selected_coupons:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3088-3092",
        "file2": "main_modular.py",
        "lines2": "3089-3093",
        "block_hash": "9300e28e663efa6646f69402c5dcd34b",
        "content": "            has_coupons = bool(selected_coupons)\n            has_member_card = (hasattr(self, 'membe..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3109-3113",
        "file2": "main_modular.py",
        "lines2": "3110-3114",
        "block_hash": "445393d5c6369eca6be419feaf704063",
        "content": "                return {\n                    'success': False,\n                    'error': '请选择支付方式..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3114-3118",
        "file2": "main_modular.py",
        "lines2": "3115-3119",
        "block_hash": "a6854360c14c5b9b5ca66de5623217e8",
        "content": "            # 2. 处理支付结果\n            if result.get('success'):\n                QMessageBox.informatio..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3118-3122",
        "file2": "main_modular.py",
        "lines2": "3119-3123",
        "block_hash": "d18f05f1a75e7dd3538849280450d317",
        "content": "                # 获取取票码\n                order_no = order_data.get('orderno', '')\n                if ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3123-3127",
        "file2": "main_modular.py",
        "lines2": "3124-3128",
        "block_hash": "ed0d43f8caee40cd55782ee62db104f3",
        "content": "                return result\n            else:\n                # 检查是否需要设置密码\n                if resu..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3142-3146",
        "file2": "main_modular.py",
        "lines2": "3143-3147",
        "block_hash": "c897a20e8cb99476d86bd7fe289e5c0e",
        "content": "    def _process_coupon_payment(self, order_data: Dict[str, Any], selected_coupons: List[Dict]) -> D..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2846-2850",
        "file2": "main_modular.py",
        "lines2": "3151-3155",
        "block_hash": "7a9fb64cc40096f2f86e2596c08dc119",
        "content": "            }\n        except Exception as e:\n            return {'success': False, 'error': str(e)}\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1837-1841",
        "file2": "main_modular.py",
        "lines2": "3164-3168",
        "block_hash": "8699ec7d91e427c7b64893cefcc63d1d",
        "content": "\n                # 更新UI显示\n                if phone:\n                    self.phone_display.setText(f..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1838-1842",
        "file2": "main_modular.py",
        "lines2": "3165-3169",
        "block_hash": "2951ef5ece4893caf9f38a4b7a6ea067",
        "content": "                # 更新UI显示\n                if phone:\n                    self.phone_display.setText(f\"..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1838-1842",
        "file2": "main_modular.py",
        "lines2": "3166-3170",
        "block_hash": "2951ef5ece4893caf9f38a4b7a6ea067",
        "content": "                if phone:\n                    self.phone_display.setText(f\"当前账号: {phone}\")\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3173-3177",
        "file2": "main_modular.py",
        "lines2": "3174-3178",
        "block_hash": "4daf925e37460f6b1966e042359f5777",
        "content": "                # 🆕 重置券列表\n                if hasattr(self, 'tab_manager_widget') and hasattr(self.ta..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3178-3182",
        "file2": "main_modular.py",
        "lines2": "3179-3183",
        "block_hash": "0aeaef2e9ff0bcc86de2e46826f00d14",
        "content": "                self._refresh_account_dependent_data()\n\n                # 重要修复：账号切换时重新加载座位图\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3181-3185",
        "file2": "main_modular.py",
        "lines2": "3182-3186",
        "block_hash": "cc12d4db289cb1ac42eb143b4b492d4c",
        "content": "                self._reload_seat_map_for_account_change()\n\n        except Exception as e:\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3190-3194",
        "file2": "main_modular.py",
        "lines2": "3191-3195",
        "block_hash": "a475d37ed2ac8c81e5b87827ceb837bd",
        "content": "            if not hasattr(self, 'tab_manager_widget'):\n                return\n\n            tab_mana..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3196-3200",
        "file2": "main_modular.py",
        "lines2": "3197-3201",
        "block_hash": "067b466fb354e1c081f94ca4efd8f6a4",
        "content": "            cinema_text = tab_manager.cinema_combo.currentText()\n            movie_text = tab_manage..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3202-3206",
        "file2": "main_modular.py",
        "lines2": "3203-3207",
        "block_hash": "8b2d7fcfdfa6862aec6e89d1d409c18b",
        "content": "            invalid_selections = [\"请选择\", \"请先选择\", \"正在加载\", \"暂无\", \"加载失败\", \"选择影院\", \"加载中...\"]\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3208-3212",
        "file2": "main_modular.py",
        "lines2": "3209-3213",
        "block_hash": "ae619e0778601bc1c021f0934dd25306",
        "content": "            print(f\"  - 新账号: {self.current_account.get('userid', 'N/A')}\")\n\n            # 重新触发场次选择，这..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3210-3214",
        "file2": "main_modular.py",
        "lines2": "3211-3215",
        "block_hash": "d9f0aaa7f5ab040379584bde1c6ec62f",
        "content": "            # 重新触发场次选择，这会重新加载座位图\n            if hasattr(tab_manager, 'current_session_data') and tab..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "3225-3229",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "3233-3237",
        "file2": "main_modular.py",
        "lines2": "3234-3238",
        "block_hash": "e04299e56a7d208c1f647db76ff841ac",
        "content": "            if hasattr(self, 'current_seat_panel') and self.current_seat_panel:\n                if h..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3252-3256",
        "file2": "main_modular.py",
        "lines2": "3253-3257",
        "block_hash": "7eb8e8d30406c19f1d39c28335f2bd02",
        "content": "                self._save_account_data(account)\n                \n        except Exception as e:\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3264-3268",
        "file2": "main_modular.py",
        "lines2": "3265-3269",
        "block_hash": "9a9d72f7f241c3fc7e8ac0c20fae4aeb",
        "content": "            if hasattr(self, 'account_widget'):\n                self.account_widget.update_account_l..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3280-3284",
        "file2": "main_modular.py",
        "lines2": "3281-3285",
        "block_hash": "5ceeca6e99b5358a7a087d5113ad52e4",
        "content": "            \n            # 获取影院信息\n            cinema_info = self._get_cinema_info_by_name(cinema_nam..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3282-3286",
        "file2": "main_modular.py",
        "lines2": "3283-3287",
        "block_hash": "f7cad5e46742aea4e3775f9ebc631d81",
        "content": "            cinema_info = self._get_cinema_info_by_name(cinema_name)\n            if cinema_info:\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3287-3291",
        "file2": "main_modular.py",
        "lines2": "3288-3292",
        "block_hash": "b0e65a222efc3e0fc01acd7cfee73c1d",
        "content": "                # 取消未支付订单\n                if self.current_account and cinema_info.get('cinemaid'):\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3304-3308",
        "file2": "main_modular.py",
        "lines2": "3305-3309",
        "block_hash": "b126365a3bdd204fb78c57e0eb669d00",
        "content": "            # 1. 基础验证\n            if not self.current_account:\n                MessageManager.show_e..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3304-3308",
        "file2": "main_modular.py",
        "lines2": "3306-3310",
        "block_hash": "b126365a3bdd204fb78c57e0eb669d00",
        "content": "            if not self.current_account:\n                MessageManager.show_error(self, \"提交失败\", \"请先..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3310-3314",
        "file2": "main_modular.py",
        "lines2": "3311-3315",
        "block_hash": "fad84b60aa4236ab2c523357bc7e22d4",
        "content": "            cinema_text = self.tab_manager_widget.cinema_combo.currentText()\n            movie_text ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3318-3322",
        "file2": "main_modular.py",
        "lines2": "3319-3323",
        "block_hash": "4b71239d8012bebc0f4806c57d048b8d",
        "content": "            # 验证选择完整性\n            if not all([cinema_text, movie_text, date_text, session_text]):\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3323-3327",
        "file2": "main_modular.py",
        "lines2": "3324-3328",
        "block_hash": "987104ec047b7e481d267b4b6c262dd3",
        "content": "            if not selected_seats:\n                MessageManager.show_error(self, \"座位未选择\", \"请选择座位\",..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3328-3332",
        "file2": "main_modular.py",
        "lines2": "3329-3333",
        "block_hash": "eca9a5248ae17278dc5e57bab9b8e437",
        "content": "            invalid_selections = [\"请选择\", \"请先选择\", \"正在加载\", \"暂无\", \"加载失败\", \"选择影院\"]\n            if any(te..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3345-3349",
        "file2": "main_modular.py",
        "lines2": "3346-3350",
        "block_hash": "67c8182e99da62b14648eaf610e4148c",
        "content": "            order_params = self._build_order_params(selected_seats)\n            if not order_params:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3354-3358",
        "file2": "main_modular.py",
        "lines2": "3355-3359",
        "block_hash": "ed2b55ae287e7bc590e55ca209dcd43e",
        "content": "            if not result or result.get('resultCode') != '0':\n                error_msg = result.get..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3359-3363",
        "file2": "main_modular.py",
        "lines2": "3360-3364",
        "block_hash": "85d0d51b18e8d5f7a9d2881492ad3493",
        "content": "            # 获取订单数据\n            order_data = result.get('resultData', {})\n            order_id = or..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3363-3367",
        "file2": "main_modular.py",
        "lines2": "3364-3368",
        "block_hash": "8aa4f72838b8c03e7fbf383482c8118c",
        "content": "            # 获取场次数据用于显示\n            tab_manager = self.tab_manager_widget\n            session_data ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3392-3396",
        "file2": "main_modular.py",
        "lines2": "3393-3397",
        "block_hash": "e92a9fd8b393a8e6c0550f41d102569a",
        "content": "            # 🆕 获取会员信息以判断是否有会员卡\n            print(f\"[调试-订单创建] 开始获取会员信息\")\n            self._get_membe..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3057-3061",
        "file2": "main_modular.py",
        "lines2": "3403-3407",
        "block_hash": "73e1112da66d64f1f337ba9577d25c18",
        "content": "                'cardno': self.current_account.get('cardno', ''),\n                'userid': self.cur..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2442-2446",
        "file2": "main_modular.py",
        "lines2": "3404-3408",
        "block_hash": "811dcbfc7d6d1d02cd45e7e0b4ea7e15",
        "content": "                'userid': self.current_account.get('userid', ''),\n                'openid': self.cur..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2443-2447",
        "file2": "main_modular.py",
        "lines2": "3405-3409",
        "block_hash": "4f33e0d3743f1f72ff64efe55bb80a71",
        "content": "                'openid': self.current_account.get('openid', ''),\n                'CVersion': '3.9.1..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2444-2448",
        "file2": "main_modular.py",
        "lines2": "3406-3410",
        "block_hash": "18779de5326881b3c48828c076f44810",
        "content": "                'CVersion': '3.9.12',\n                'OS': 'Windows',\n                'token': self..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2445-2449",
        "file2": "main_modular.py",
        "lines2": "3407-3411",
        "block_hash": "3a4fa4b6b51b38e923a1e247617ac5f6",
        "content": "                'OS': 'Windows',\n                'token': self.current_account.get('token', ''),\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3415-3419",
        "file2": "main_modular.py",
        "lines2": "3416-3420",
        "block_hash": "c0d3c3b658dbb7656900c001b4654632",
        "content": "            order_detail_result = get_unpaid_order_detail(detail_params)\n\n            print(f\"[调试-订单..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3419-3423",
        "file2": "main_modular.py",
        "lines2": "3420-3424",
        "block_hash": "d8e8c97794d759221842858fae91adc3",
        "content": "            # 🆕 从订单详情中获取会员价格 - 添加类型转换\n            member_total_price = 0\n            if order_detail..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3419-3423",
        "file2": "main_modular.py",
        "lines2": "3421-3425",
        "block_hash": "d8e8c97794d759221842858fae91adc3",
        "content": "            member_total_price = 0\n            if order_detail_result and order_detail_result.get('r..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3489-3493",
        "file2": "main_modular.py",
        "lines2": "3490-3494",
        "block_hash": "ed97500bff1b4dbc5ebdd691c8da411e",
        "content": "            self._show_order_detail(self.current_order)\n\n            # 第四步：获取可用券列表\n            self...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3492-3496",
        "file2": "main_modular.py",
        "lines2": "3493-3497",
        "block_hash": "7c27412c87e1c66cfd7f75ac43a97e1f",
        "content": "            self._load_available_coupons(order_id, cinema_data.get('cinemaid', ''))\n\n            # 发..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3512-3516",
        "file2": "main_modular.py",
        "lines2": "3513-3517",
        "block_hash": "afd0fae1df794fd6ab95ea94f1550325",
        "content": "            if not hasattr(self, 'tab_manager_widget'):\n                return None\n\n            tab..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3517-3521",
        "file2": "main_modular.py",
        "lines2": "3518-3522",
        "block_hash": "aff5e98a92e34c63b3555f58f60e53a4",
        "content": "            # 获取场次数据\n            session_data = getattr(tab_manager, 'current_session_data', None)\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3517-3521",
        "file2": "main_modular.py",
        "lines2": "3519-3523",
        "block_hash": "aff5e98a92e34c63b3555f58f60e53a4",
        "content": "            session_data = getattr(tab_manager, 'current_session_data', None)\n            if not ses..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3523-3527",
        "file2": "main_modular.py",
        "lines2": "3524-3528",
        "block_hash": "13953069c31facf3fa45c0b33e5b0b25",
        "content": "            cinema_text = tab_manager.cinema_combo.currentText()\n            cinema_data = self._get..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3535-3539",
        "file2": "main_modular.py",
        "lines2": "3536-3540",
        "block_hash": "18702de663af7ae70630ef4b67a77656",
        "content": "                    row_num = seat.get('rn', seat.get('row', 1))\n                    col_num = seat...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3540-3544",
        "file2": "main_modular.py",
        "lines2": "3541-3545",
        "block_hash": "30606fbf9ca069166b97c469d3ee528b",
        "content": "                seat_price = seat.get('price', 0)\n                if seat_price == 0:\n              ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3546-3550",
        "file2": "main_modular.py",
        "lines2": "3547-3551",
        "block_hash": "bd91f975ba774a61bd5d8c2edfce3b6b",
        "content": "                try:\n                    if isinstance(seat_price, (int, float)):\n                  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3559-3563",
        "file2": "main_modular.py",
        "lines2": "3560-3564",
        "block_hash": "64123cb4c20f86843b9aaa4b260eb417",
        "content": "                # 获取座位位置信息\n                seat_row = seat.get('rn', seat.get('row', 1))\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1233-1237",
        "file2": "main_modular.py",
        "lines2": "3621-3625",
        "block_hash": "5850159fee91bce370d5a57d235411f9",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1233-1237",
        "file2": "main_modular.py",
        "lines2": "3622-3626",
        "block_hash": "5850159fee91bce370d5a57d235411f9",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3650-3654",
        "file2": "main_modular.py",
        "lines2": "3651-3655",
        "block_hash": "2834b96b0a4d953ebf3cb88cdd0a54c5",
        "content": "            print(f\"[主窗口] 开始获取券列表，订单号: {order_id}\")\n\n            # 调用API获取券列表\n            coupon_res..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3656-3660",
        "file2": "main_modular.py",
        "lines2": "3657-3661",
        "block_hash": "1034c2e0f5d219b590928aa96430e68a",
        "content": "            if coupon_result is None:\n                print(\"[主窗口] 券列表API返回None，可能是网络异常或服务器无响应\")\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3662-3666",
        "file2": "main_modular.py",
        "lines2": "3663-3667",
        "block_hash": "67a899ba98367447b91bdecff3d20eb1",
        "content": "            if not isinstance(coupon_result, dict):\n                print(f\"[主窗口] 券列表API返回格式错误，类型: {..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3668-3672",
        "file2": "main_modular.py",
        "lines2": "3669-3673",
        "block_hash": "bbc716f0de9ff2afb5b10cdc4b281637",
        "content": "            result_code = coupon_result.get('resultCode')\n            if result_code == '0':\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3674-3678",
        "file2": "main_modular.py",
        "lines2": "3675-3679",
        "block_hash": "4fa468a3d61d95e14a9d98c94550c3e7",
        "content": "                if result_data is None:\n                    print(\"[主窗口] 券列表数据为空\")\n                 ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3680-3684",
        "file2": "main_modular.py",
        "lines2": "3681-3685",
        "block_hash": "3ccdab5d2898eadcd75ee3142c6bbc86",
        "content": "                if not isinstance(result_data, dict):\n                    print(f\"[主窗口] 券列表数据格式错误，类型..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3688-3692",
        "file2": "main_modular.py",
        "lines2": "3689-3693",
        "block_hash": "9cce8a8d46d15830a04d700ba29f8268",
        "content": "                # 🔧 修复：确保coupons是列表类型\n                if not isinstance(coupons, list):\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3693-3697",
        "file2": "main_modular.py",
        "lines2": "3694-3698",
        "block_hash": "aead51e46d1773626830a833a7dc45d4",
        "content": "                print(f\"[主窗口] 获取到 {len(coupons)} 张可用券\")\n\n                # 显示券列表\n                sel..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3716-3720",
        "file2": "main_modular.py",
        "lines2": "3717-3721",
        "block_hash": "67f65ed1f15786c9491ec5d31403aed3",
        "content": "            if hasattr(self, 'coupon_list'):\n                coupon_list_widget = self.coupon_list\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3735-3739",
        "file2": "main_modular.py",
        "lines2": "3736-3740",
        "block_hash": "dd4dc657547a35b78d4f8e4455560831",
        "content": "            if coupons is None:\n                print(\"[主窗口] 券列表参数为None，使用空列表\")\n                coup..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3739-3743",
        "file2": "main_modular.py",
        "lines2": "3740-3744",
        "block_hash": "a5148006c4fb0ae42075d564be9501d9",
        "content": "            # 🔧 修复：确保coupons是列表类型\n            if not isinstance(coupons, list):\n                prin..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3744-3748",
        "file2": "main_modular.py",
        "lines2": "3745-3749",
        "block_hash": "99e9f356767f09c022cd312499d14c9d",
        "content": "            print(f\"[主窗口] 显示券列表: {len(coupons)} 张券\")\n\n            # 🆕 保存券数据到实例变量\n            self.co..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3714-3718",
        "file2": "main_modular.py",
        "lines2": "3762-3766",
        "block_hash": "7ebde90732d77f3612a1e354265d8ce1",
        "content": "            coupon_list_widget = None\n\n            # 方法1：直接查找 coupon_list 属性\n            if hasattr(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3763-3767",
        "file2": "main_modular.py",
        "lines2": "3764-3768",
        "block_hash": "38129e39086189c8a2cb4880589b81ce",
        "content": "            # 方法1：直接查找 coupon_list 属性\n            if hasattr(self, 'coupon_list'):\n                c..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3767-3771",
        "file2": "main_modular.py",
        "lines2": "3768-3772",
        "block_hash": "c5e572f478d082c88e4a4d0898d81f3f",
        "content": "            # 方法2：查找 tab_manager_widget 中的券列表\n            elif hasattr(self, 'tab_manager_widget') a..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3771-3775",
        "file2": "main_modular.py",
        "lines2": "3772-3776",
        "block_hash": "55ff7c9cbd5062bc92cfb65f18c6b703",
        "content": "            # 方法3：遍历查找 QListWidget\n            else:\n                from PyQt5.QtWidgets import QLi..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3776-3780",
        "file2": "main_modular.py",
        "lines2": "3777-3781",
        "block_hash": "79b9e1cdd4e21a098199445f40d3910b",
        "content": "                    parent = child.parent()\n                    if parent and hasattr(parent, 'title..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3781-3785",
        "file2": "main_modular.py",
        "lines2": "3782-3786",
        "block_hash": "71136c3d77f4895239a53f92382d1b7f",
        "content": "            # 修复：使用 is not None 而不是 bool() 检查\n            if coupon_list_widget is not None:\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3785-3789",
        "file2": "main_modular.py",
        "lines2": "3786-3790",
        "block_hash": "2176bd232ada52b9a01d1040854005bc",
        "content": "                # 🆕 设置券列表为多选模式\n                from PyQt5.QtWidgets import QAbstractItemView\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3792-3796",
        "file2": "main_modular.py",
        "lines2": "3793-3797",
        "block_hash": "3346c81e71a8a63fc55ded8a6b05d614",
        "content": "                    try:\n                        coupon_list_widget.itemSelectionChanged.disconnect(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3797-3801",
        "file2": "main_modular.py",
        "lines2": "3798-3802",
        "block_hash": "3cdb45e7e9d41fdd2af511f2ab85ed9a",
        "content": "                    coupon_list_widget.itemSelectionChanged.connect(self._on_coupon_selection_change..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3802-3806",
        "file2": "main_modular.py",
        "lines2": "3803-3807",
        "block_hash": "a1f5c8ad2a57d86072bd9e2d781d8ffa",
        "content": "                if not coupons:\n                    # 显示无券提示\n                    coupon_list_widget...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3810-3814",
        "file2": "main_modular.py",
        "lines2": "3811-3815",
        "block_hash": "2c0c430c802a8554ae13321259bbcadc",
        "content": "                    if not isinstance(coupon, dict):\n                        print(f\"[主窗口] 跳过无效券数据: ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3814-3818",
        "file2": "main_modular.py",
        "lines2": "3815-3819",
        "block_hash": "902cb52453ec6756c781a29e11d540e6",
        "content": "                    # 解析券信息 - 使用真实API的字段名称\n                    # 券名称：尝试多个字段\n                    coup..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3816-3820",
        "file2": "main_modular.py",
        "lines2": "3817-3821",
        "block_hash": "874d337ac7989d8124029b074a4723e5",
        "content": "                    coupon_name = coupon.get('couponname') or coupon.get('voucherName') or coupon.ge..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3819-3823",
        "file2": "main_modular.py",
        "lines2": "3820-3824",
        "block_hash": "84649e33892c846f733acaa3aa6b2d4a",
        "content": "                    expire_date = coupon.get('expireddate') or coupon.get('expiredDate') or coupon.g..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3822-3826",
        "file2": "main_modular.py",
        "lines2": "3823-3827",
        "block_hash": "2bb618676d7b6bc773798eec871df88e",
        "content": "                    coupon_code = coupon.get('couponcode') or coupon.get('voucherCode') or coupon.ge..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3848-3852",
        "file2": "main_modular.py",
        "lines2": "3849-3853",
        "block_hash": "e1ad951a995ea2b0a59d89887a93bc24",
        "content": "        except Exception as e:\n            import traceback\n            traceback.print_exc()\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3715-3719",
        "file2": "main_modular.py",
        "lines2": "3859-3863",
        "block_hash": "484913f978ad564bf17cf08e9f694e56",
        "content": "            # 获取券列表组件\n            coupon_list_widget = None\n            if hasattr(self, 'coupon_lis..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3716-3720",
        "file2": "main_modular.py",
        "lines2": "3861-3865",
        "block_hash": "67f65ed1f15786c9491ec5d31403aed3",
        "content": "            if hasattr(self, 'coupon_list'):\n                coupon_list_widget = self.coupon_list\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3865-3869",
        "file2": "main_modular.py",
        "lines2": "3866-3870",
        "block_hash": "058fe9c36c91d0332d94f405d28f5c72",
        "content": "            if not coupon_list_widget:\n                print(\"[主窗口] 券选择事件：找不到券列表组件\")\n               ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3869-3873",
        "file2": "main_modular.py",
        "lines2": "3870-3874",
        "block_hash": "ed7f8052dcd82f9bc0bfbf559c6a3eb7",
        "content": "            # 🔧 修复：检查券数据是否存在\n            if not hasattr(self, 'coupons_data') or self.coupons_data i..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3869-3873",
        "file2": "main_modular.py",
        "lines2": "3871-3875",
        "block_hash": "ed7f8052dcd82f9bc0bfbf559c6a3eb7",
        "content": "            if not hasattr(self, 'coupons_data') or self.coupons_data is None:\n                print..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3874-3878",
        "file2": "main_modular.py",
        "lines2": "3875-3879",
        "block_hash": "9c91a750a8ef2476e8f0a1211735c449",
        "content": "            # 🔧 修复：确保券数据是列表类型\n            if not isinstance(self.coupons_data, list):\n              ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3874-3878",
        "file2": "main_modular.py",
        "lines2": "3876-3880",
        "block_hash": "9c91a750a8ef2476e8f0a1211735c449",
        "content": "            if not isinstance(self.coupons_data, list):\n                print(f\"[主窗口] 券选择事件：券数据类型错误:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3879-3883",
        "file2": "main_modular.py",
        "lines2": "3880-3884",
        "block_hash": "a91b5148be3774fabb81e98f076f1888",
        "content": "            # 获取选中的券项目索引\n            selected_items = coupon_list_widget.selectedItems()\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3891-3895",
        "file2": "main_modular.py",
        "lines2": "3892-3896",
        "block_hash": "1e17eed0ea1b19bf766414ac5d52de08",
        "content": "            # 🔧 修复：检查max_coupon_select属性\n            if not hasattr(self, 'max_coupon_select') or se..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3903-3907",
        "file2": "main_modular.py",
        "lines2": "3904-3908",
        "block_hash": "fece5588b2c6d2f6625ad6fdcb8013aa",
        "content": "                for i, item in enumerate(selected_items):\n                    if i >= self.max_coupo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3909-3913",
        "file2": "main_modular.py",
        "lines2": "3910-3914",
        "block_hash": "681565947504906d2222acc04fde2ade",
        "content": "            selected_codes = []\n            for index in selected_indices:\n                if 0 <= i..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3914-3918",
        "file2": "main_modular.py",
        "lines2": "3915-3919",
        "block_hash": "56022e813f9f209ad8ede274eadd5565",
        "content": "                    # 🔧 修复：确保coupon是字典类型\n                    if not isinstance(coupon, dict):\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3919-3923",
        "file2": "main_modular.py",
        "lines2": "3920-3924",
        "block_hash": "5673ff17fe3d062120cf3056d1ba1187",
        "content": "                    coupon_code = coupon.get('couponcode') or coupon.get('voucherCode') or coupon.ge..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3923-3927",
        "file2": "main_modular.py",
        "lines2": "3924-3928",
        "block_hash": "8d4e71d190813817379517bfe2d22822",
        "content": "\n            # 验证必要参数\n            if not self.current_order or not self.current_account:\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3923-3927",
        "file2": "main_modular.py",
        "lines2": "3925-3929",
        "block_hash": "8d4e71d190813817379517bfe2d22822",
        "content": "            # 验证必要参数\n            if not self.current_order or not self.current_account:\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3928-3932",
        "file2": "main_modular.py",
        "lines2": "3929-3933",
        "block_hash": "99442e568dfca1f391880c307097618f",
        "content": "            # 获取订单和账号信息\n            order_id = self.current_order.get('orderno') or self.current_ord..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3936-3940",
        "file2": "main_modular.py",
        "lines2": "3937-3941",
        "block_hash": "9ba9288200bf106f7abdd3af048e6ce1",
        "content": "            if hasattr(self, 'tab_manager_widget') and hasattr(self.tab_manager_widget, 'cinema_comb..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "886-890",
        "file2": "main_modular.py",
        "lines2": "3958-3962",
        "block_hash": "2eda2d44d907df4b4b8d2ee351feb829",
        "content": "                return\n\n            cinema_id = cinema_data.get('cinemaid', '')\n\n            # 🆕 实时请..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3961-3965",
        "file2": "main_modular.py",
        "lines2": "3962-3966",
        "block_hash": "3bc618cebead720c506cbf61f702a49b",
        "content": "            # 🆕 实时请求券抵扣信息\n            if selected_codes and selected_codes[0]:  # 确保券号不为空\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3961-3965",
        "file2": "main_modular.py",
        "lines2": "3963-3967",
        "block_hash": "3bc618cebead720c506cbf61f702a49b",
        "content": "            if selected_codes and selected_codes[0]:  # 确保券号不为空\n                try:\n               ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "966-970",
        "file2": "main_modular.py",
        "lines2": "3971-3975",
        "block_hash": "ce61d0930635aa5ca1d0c67d7d0f342a",
        "content": "                        'groupid': '',\n                        'cinemaid': cinema_id,\n              ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "967-971",
        "file2": "main_modular.py",
        "lines2": "3972-3976",
        "block_hash": "bf2936e2f9678795508a9f6eaf4c3a20",
        "content": "                        'cinemaid': cinema_id,\n                        'cardno': account.get('cardno..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "main_modular.py",
        "lines2": "3973-3977",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                        'cardno': account.get('cardno', ''),\n                        'userid': accou..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "main_modular.py",
        "lines2": "3974-3978",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                        'userid': account['userid'],\n                        'openid': account['open..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "main_modular.py",
        "lines2": "3975-3979",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                        'openid': account['openid'],\n                        'CVersion': '3.9.12',\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "main_modular.py",
        "lines2": "3976-3980",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "                        'CVersion': '3.9.12',\n                        'OS': 'Windows',\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "main_modular.py",
        "lines2": "3977-3981",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "                        'OS': 'Windows',\n                        'token': account['token'],\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3982-3986",
        "file2": "main_modular.py",
        "lines2": "3983-3987",
        "block_hash": "115a2c399949968b6d9edc09e7e8f0ac",
        "content": "                    # 调用券价格查询API\n                    coupon_info = get_coupon_prepay_info(prepay_par..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3987-3991",
        "file2": "main_modular.py",
        "lines2": "3988-3992",
        "block_hash": "4fb85203d17265059696b1068a9273a4",
        "content": "                        self.current_coupon_info = coupon_info\n                        self.selected..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3992-3996",
        "file2": "main_modular.py",
        "lines2": "3993-3997",
        "block_hash": "ffe01b7d10823f1d95cc69a3fc854cb9",
        "content": "                        self._update_order_detail_with_coupon_info()\n\n                    else:\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3997-4001",
        "file2": "main_modular.py",
        "lines2": "3998-4002",
        "block_hash": "21ea3565ed6c2450b5465f1032384833",
        "content": "                        self.current_coupon_info = None\n                        self.selected_coupon..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4002-4006",
        "file2": "main_modular.py",
        "lines2": "4003-4007",
        "block_hash": "fc65e351027d42a27469f434f5d3f608",
        "content": "                        # 取消选择\n                        for item in selected_items:\n                 ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "4006-4010",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n\n                except Exception as e:\n                    import traceback\n                    tr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "4007-4011",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n                except Exception as e:\n                    import traceback\n                    tra..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4011-4015",
        "file2": "main_modular.py",
        "lines2": "4012-4016",
        "block_hash": "192b89c6e9d9f3ccd6a370c33c647080",
        "content": "                    self.current_coupon_info = None\n                    self.selected_coupons = []\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4016-4020",
        "file2": "main_modular.py",
        "lines2": "4017-4021",
        "block_hash": "dca59f8380784130b2ba66dc350663cf",
        "content": "                    for item in selected_items:\n                        item.setSelected(False)\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3995-3999",
        "file2": "main_modular.py",
        "lines2": "4019-4023",
        "block_hash": "9e1c31dcbac8df17d19bf8082b7fa7cc",
        "content": "            else:\n                pass\n                # 券号为空，清空券信息\n                self.current_cou..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "4027-4031",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "4038-4042",
        "file2": "main_modular.py",
        "lines2": "4039-4043",
        "block_hash": "6c5af5a3dfa524a2e8215048fb9a71ea",
        "content": "            print(f\"[调试-券抵扣更新] 开始更新订单详情\")\n            print(f\"[调试-券抵扣更新] current_order类型: {type(self..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4049-4053",
        "file2": "main_modular.py",
        "lines2": "4050-4054",
        "block_hash": "16b4d467726524af39210de4029479ac",
        "content": "            # 订单号\n            order_id = order_detail.get('orderno', order_detail.get('order_id', 'N..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4053-4057",
        "file2": "main_modular.py",
        "lines2": "4054-4058",
        "block_hash": "fad159a76f5b2ba4a1e2c68f2bf24627",
        "content": "            # 影片信息\n            movie = order_detail.get('movie', order_detail.get('film_name', 'N/A'..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4085-4089",
        "file2": "main_modular.py",
        "lines2": "4086-4090",
        "block_hash": "83c942b481211a7e1c0bcf519a93d99d",
        "content": "            # 🆕 票价和券抵扣信息\n            original_amount = order_detail.get('amount', 0)\n            sea..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4096-4100",
        "file2": "main_modular.py",
        "lines2": "4097-4101",
        "block_hash": "a76827ee9add9e8fb4d2c0c6cf3ccda9",
        "content": "            # 🆕 券抵扣信息\n            if self.current_coupon_info and self.selected_coupons:\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4100-4104",
        "file2": "main_modular.py",
        "lines2": "4101-4105",
        "block_hash": "d5771ee91961bd3eb7d580612c578364",
        "content": "                # 获取券抵扣金额（分）\n                discount_price_fen = int(coupon_data.get('discountprice..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4116-4120",
        "file2": "main_modular.py",
        "lines2": "4117-4121",
        "block_hash": "896dd22016f3afb0284b56064ff67da4",
        "content": "                # 显示券信息\n                coupon_count = len(self.selected_coupons)\n                in..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4116-4120",
        "file2": "main_modular.py",
        "lines2": "4118-4122",
        "block_hash": "896dd22016f3afb0284b56064ff67da4",
        "content": "                coupon_count = len(self.selected_coupons)\n                info_lines.append(f\"使用券: {..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4143-4147",
        "file2": "main_modular.py",
        "lines2": "4144-4148",
        "block_hash": "585666ffdfa1b2eca919b2c2857ee82b",
        "content": "            # 状态信息\n            status = order_detail.get('status', '待支付')\n            info_lines.app..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4150-4154",
        "file2": "main_modular.py",
        "lines2": "4151-4155",
        "block_hash": "0b22e93c06dfdc11a99dbc0d68c88429",
        "content": "            # 方法1: 从api_data获取\n            api_data = order_detail.get('api_data', {})\n            i..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4150-4154",
        "file2": "main_modular.py",
        "lines2": "4152-4156",
        "block_hash": "0b22e93c06dfdc11a99dbc0d68c88429",
        "content": "            api_data = order_detail.get('api_data', {})\n            if api_data and isinstance(api_d..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4155-4159",
        "file2": "main_modular.py",
        "lines2": "4156-4160",
        "block_hash": "3e3351fc38de4ecef874272220e4746e",
        "content": "            # 方法2: 直接从order_detail获取（如果api_data就是订单详情）\n            if enable_mempassword is None:\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "584-588",
        "file2": "main_modular.py",
        "lines2": "4179-4183",
        "block_hash": "7514823669350cb6c1db7f690a3af8f5",
        "content": "\n        except Exception as e:\n            import traceback\n            traceback.print_exc()\n"
      },
      {
        "file1": "main_modular.py",
        "lines1": "4189-4193",
        "file2": "main_modular.py",
        "lines2": "4190-4194",
        "block_hash": "f42a37c22dbeeb43682ef10767c03916",
        "content": "            # 创建券列表滚动区域\n            self.coupon_scroll_area = QScrollArea()\n            self.coupon_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4189-4193",
        "file2": "main_modular.py",
        "lines2": "4191-4195",
        "block_hash": "f42a37c22dbeeb43682ef10767c03916",
        "content": "            self.coupon_scroll_area = QScrollArea()\n            self.coupon_scroll_area.setWidgetRes..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4195-4199",
        "file2": "main_modular.py",
        "lines2": "4196-4200",
        "block_hash": "fb938015d96c305214a4a9dca91167ca",
        "content": "            self.coupon_list_widget = QWidget()\n            self.coupon_list_layout = QVBoxLayout(se..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4224-4228",
        "file2": "main_modular.py",
        "lines2": "4225-4229",
        "block_hash": "937282fa61b959798ea5a6ff4d329312",
        "content": "                coupon_title = QLabel(\"可用券列表:\")\n                coupon_title.setStyleSheet(\"font: bo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4235-4239",
        "file2": "main_modular.py",
        "lines2": "4236-4240",
        "block_hash": "53ab2bea32263de24eb00c2d91b27b90",
        "content": "                self.coupon_list_area = self.coupon_scroll_area\n                self.coupon_scroll_a..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4243-4247",
        "file2": "main_modular.py",
        "lines2": "4244-4248",
        "block_hash": "27ed68162aab46f1cf5190b0f23137df",
        "content": "    def _clear_coupon_list(self):\n        \"\"\"清空券列表\"\"\"\n        try:\n            if hasattr(self, 'cou..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4248-4252",
        "file2": "main_modular.py",
        "lines2": "4249-4253",
        "block_hash": "f5bca84b23ec560b4b0e6f8d3986ddd2",
        "content": "                while self.coupon_list_layout.count():\n                    child = self.coupon_list_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1431-1435",
        "file2": "main_modular.py",
        "lines2": "4251-4255",
        "block_hash": "dea90c414af04c17c7ed2ad16aa4f592",
        "content": "                    if child.widget():\n                        child.widget().deleteLater()\n\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4263-4267",
        "file2": "main_modular.py",
        "lines2": "4264-4268",
        "block_hash": "6a4d25298c6a6e34f2530466d9f214e2",
        "content": "            coupon_item = QWidget()\n            coupon_layout = QHBoxLayout(coupon_item)\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4268-4272",
        "file2": "main_modular.py",
        "lines2": "4269-4273",
        "block_hash": "961ef2211eb9244daaf7127f5e2eb505",
        "content": "            # 券类型标签\n            type_label = QLabel(coupon_type)\n            type_label.setFixedWidt..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4268-4272",
        "file2": "main_modular.py",
        "lines2": "4270-4274",
        "block_hash": "961ef2211eb9244daaf7127f5e2eb505",
        "content": "            type_label = QLabel(coupon_type)\n            type_label.setFixedWidth(50)\n            ty..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4273-4277",
        "file2": "main_modular.py",
        "lines2": "4274-4278",
        "block_hash": "28e9aeb572bc2f2c63b0664bb46c7ff7",
        "content": "            # 券信息标签\n            info_text = f\"{coupon_name} 有效期至 {expire_date} | 券号 {coupon_code}\"\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4273-4277",
        "file2": "main_modular.py",
        "lines2": "4275-4279",
        "block_hash": "28e9aeb572bc2f2c63b0664bb46c7ff7",
        "content": "            info_text = f\"{coupon_name} 有效期至 {expire_date} | 券号 {coupon_code}\"\n            info_labe..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4278-4282",
        "file2": "main_modular.py",
        "lines2": "4279-4283",
        "block_hash": "b2bab2b6810eaa769d771f4388bb7413",
        "content": "            # 添加到布局\n            coupon_layout.addWidget(type_label)\n            coupon_layout.addWid..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4278-4282",
        "file2": "main_modular.py",
        "lines2": "4280-4284",
        "block_hash": "b2bab2b6810eaa769d771f4388bb7413",
        "content": "            coupon_layout.addWidget(type_label)\n            coupon_layout.addWidget(info_label)\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4309-4313",
        "file2": "main_modular.py",
        "lines2": "4310-4314",
        "block_hash": "58b918f2c6f0172fac19f68ac5b7e386",
        "content": "            # 从订单详情中获取密码策略字段\n            enable_mempassword = order_detail.get('enable_mempassword',..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4309-4313",
        "file2": "main_modular.py",
        "lines2": "4311-4315",
        "block_hash": "58b918f2c6f0172fac19f68ac5b7e386",
        "content": "            enable_mempassword = order_detail.get('enable_mempassword', '1')\n\n            print(f\"[密..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4323-4327",
        "file2": "main_modular.py",
        "lines2": "4324-4328",
        "block_hash": "c544eef233e8b0a312dc3b735619d7cd",
        "content": "            if self.member_password_required:\n                print(\"[密码策略] ✅ 该影院需要会员卡密码\")\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4328-4332",
        "file2": "main_modular.py",
        "lines2": "4329-4333",
        "block_hash": "fccaa61ef23a2c3b507169af253200fc",
        "content": "            return self.member_password_required\n\n        except Exception as e:\n            print(f..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4336-4340",
        "file2": "main_modular.py",
        "lines2": "4337-4341",
        "block_hash": "d6bb65c2c49cee61f630fbf1874ac19b",
        "content": "    def get_member_password_input(self) -> str:\n        \"\"\"🆕 获取会员卡密码输入\"\"\"\n        try:\n            f..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4341-4345",
        "file2": "main_modular.py",
        "lines2": "4342-4346",
        "block_hash": "49091ac40b3d37da849aad2472fe4b99",
        "content": "            # 构建提示信息\n            policy_desc = \"需要会员卡密码验证\"\n            if hasattr(self, 'member_pass..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4341-4345",
        "file2": "main_modular.py",
        "lines2": "4343-4347",
        "block_hash": "49091ac40b3d37da849aad2472fe4b99",
        "content": "            policy_desc = \"需要会员卡密码验证\"\n            if hasattr(self, 'member_password_policy') and sel..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4364-4368",
        "file2": "main_modular.py",
        "lines2": "4365-4369",
        "block_hash": "8514e3134d3219590c7d43385810d0fc",
        "content": "    def validate_member_password_policy(self, order_id: str) -> dict:\n        \"\"\"🆕 验证会员卡密码策略 - 使用修复后..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4386-4390",
        "file2": "main_modular.py",
        "lines2": "4399-4403",
        "block_hash": "3f2b5fad1de92d3c1c1cdd88e58ea6ef",
        "content": "\n            return {\n                'success': True,\n                'requires_password': smart_po..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4387-4391",
        "file2": "main_modular.py",
        "lines2": "4400-4404",
        "block_hash": "0cafce1903a54717951b16eb3101c790",
        "content": "            return {\n                'success': True,\n                'requires_password': smart_pol..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4388-4392",
        "file2": "main_modular.py",
        "lines2": "4401-4405",
        "block_hash": "566507f0b54351507ff5b2d63f44cac2",
        "content": "                'success': True,\n                'requires_password': smart_policy.get('requires_pas..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4389-4393",
        "file2": "main_modular.py",
        "lines2": "4402-4406",
        "block_hash": "5086ea18f3ceaac9ad5b59cd0635b970",
        "content": "                'requires_password': smart_policy.get('requires_password', False),\n                '..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4406-4410",
        "file2": "main_modular.py",
        "lines2": "4407-4411",
        "block_hash": "fc9ca1aad73baeb92dc31dd4bf84543f",
        "content": "\ndef main():\n    \"\"\"启动模块化应用程序\"\"\"\n    app = QApplication(sys.argv)\n    "
      },
      {
        "file1": "main_modular.py",
        "lines1": "4406-4410",
        "file2": "main_modular.py",
        "lines2": "4408-4412",
        "block_hash": "fc9ca1aad73baeb92dc31dd4bf84543f",
        "content": "def main():\n    \"\"\"启动模块化应用程序\"\"\"\n    app = QApplication(sys.argv)\n    \n    # 创建主窗口"
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "40-44",
        "file2": "services\\account_api.py",
        "lines2": "41-45",
        "block_hash": "a13b18dfc8c8aa4e2cb8f86db289f89b",
        "content": "    result = api_get('MiniTicket/index.php/MiniMember/getMemcardList', cinemaid, params=params)\n    ..."
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "87-91",
        "file2": "services\\account_api.py",
        "lines2": "88-92",
        "block_hash": "a87ffbad1122a03f4c811adb3b2d9b44",
        "content": "def save_account(account):\n    \"\"\"保存账号\"\"\"\n    try:\n        accounts = get_account_list()\n        "
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "107-111",
        "file2": "services\\account_api.py",
        "lines2": "108-112",
        "block_hash": "7619670fb79060167e1d512164712192",
        "content": "        return True\n    except Exception as e:\n        print(f\"[账号API] 保存账号错误: {e}\")\n        return ..."
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "118-122",
        "file2": "services\\account_api.py",
        "lines2": "119-123",
        "block_hash": "347c7127869fbc4d3807edfe15f8379d",
        "content": "        # 保存到文件\n        accounts_file = os.path.join(os.path.dirname(__file__), '..', 'data', 'accou..."
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "105-109",
        "file2": "services\\account_api.py",
        "lines2": "121-125",
        "block_hash": "9026ae54ca4e60518c9ea8ab102882af",
        "content": "        with open(accounts_file, 'w', encoding='utf-8') as f:\n            json.dump(accounts, f, ens..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "11-15",
        "file2": "services\\admin_api.py",
        "lines2": "12-16",
        "block_hash": "181df023ce8724e741105d46c9daf4ea",
        "content": "class AdminAPIService:\n    \"\"\"管理API服务类\"\"\"\n    \n    def __init__(self):\n        # API服务器地址"
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "39-43",
        "file2": "services\\admin_api.py",
        "lines2": "40-44",
        "block_hash": "ed947e5ed2df83fbba57a7896cf43b2e",
        "content": "            print(f\"[管理API] 更新机器码请求: {phone} -> {new_machine_code}\")\n            \n            respon..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "47-51",
        "file2": "services\\admin_api.py",
        "lines2": "48-52",
        "block_hash": "7c2d14721bf6a041c239e42aeb5acccd",
        "content": "            if result.get(\"success\"):\n                return True, result.get(\"message\", \"机器码更新成功\")\n..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "35-39",
        "file2": "services\\admin_api.py",
        "lines2": "67-71",
        "block_hash": "07acf611b59ab1aadb78837ae724a519",
        "content": "            headers = {\n                'Content-Type': 'application/json',\n                'User-Ag..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "71-75",
        "file2": "services\\admin_api.py",
        "lines2": "72-76",
        "block_hash": "5af0ede0c0e568aca1589010d49affe5",
        "content": "            response = requests.get(url, headers=headers, timeout=10, verify=False)\n            resp..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "76-80",
        "file2": "services\\admin_api.py",
        "lines2": "77-81",
        "block_hash": "942945257d6fb836ffbe955fbe72f1d8",
        "content": "            if result.get(\"success\"):\n                return True, \"获取成功\", result.get(\"data\", [])\n  ..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "35-39",
        "file2": "services\\admin_api.py",
        "lines2": "104-108",
        "block_hash": "07acf611b59ab1aadb78837ae724a519",
        "content": "            headers = {\n                'Content-Type': 'application/json',\n                'User-Ag..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "41-45",
        "file2": "services\\admin_api.py",
        "lines2": "108-112",
        "block_hash": "db63026ee09cd4c97a068e9fec3dc0a9",
        "content": "            \n            response = requests.post(url, json=update_data, headers=headers, timeout=10..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "41-45",
        "file2": "services\\admin_api.py",
        "lines2": "109-113",
        "block_hash": "db63026ee09cd4c97a068e9fec3dc0a9",
        "content": "            response = requests.post(url, json=update_data, headers=headers, timeout=10, verify=Fals..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "73-77",
        "file2": "services\\admin_api.py",
        "lines2": "110-114",
        "block_hash": "001864dba5472f3affde70ef7d4524f6",
        "content": "            response.raise_for_status()\n            \n            result = response.json()\n          ..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "52-56",
        "file2": "services\\admin_api.py",
        "lines2": "119-123",
        "block_hash": "627c4af2dddab96ef95740f6e40ef7ce",
        "content": "                \n        except requests.exceptions.RequestException as e:\n            print(f\"[管理AP..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "53-57",
        "file2": "services\\admin_api.py",
        "lines2": "120-124",
        "block_hash": "ea75e31711b761fd1ef3a4f71d018734",
        "content": "        except requests.exceptions.RequestException as e:\n            print(f\"[管理API] 网络异常: {e}\")\n  ..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "54-58",
        "file2": "services\\admin_api.py",
        "lines2": "121-125",
        "block_hash": "1e989689929e415fa2cda7f3776bc3f3",
        "content": "            print(f\"[管理API] 网络异常: {e}\")\n            return False, f\"网络连接失败: {str(e)}\"\n        except..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "55-59",
        "file2": "services\\admin_api.py",
        "lines2": "122-126",
        "block_hash": "0fc78375771c7d5d5abb0003cf0115c5",
        "content": "            return False, f\"网络连接失败: {str(e)}\"\n        except Exception as e:\n            print(f\"[管理..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "94-98",
        "file2": "services\\admin_api.py",
        "lines2": "132-136",
        "block_hash": "e2c4ea638ac007c079d3abc4a9ce83ec",
        "content": "        :return: (是否成功, 消息)\n        \"\"\"\n        try:\n            update_data = {\n                \"ph..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "35-39",
        "file2": "services\\admin_api.py",
        "lines2": "142-146",
        "block_hash": "07acf611b59ab1aadb78837ae724a519",
        "content": "            headers = {\n                'Content-Type': 'application/json',\n                'User-Ag..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "105-109",
        "file2": "services\\admin_api.py",
        "lines2": "143-147",
        "block_hash": "06ff2e30f4c6ca87ac5f39c80044b41a",
        "content": "                'Content-Type': 'application/json',\n                'User-Agent': 'LeYing-Admin-Clie..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "106-110",
        "file2": "services\\admin_api.py",
        "lines2": "144-148",
        "block_hash": "1142d80d6622135baea40088f9104e09",
        "content": "                'User-Agent': 'LeYing-Admin-Client/1.0'\n            }\n            \n            respo..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "107-111",
        "file2": "services\\admin_api.py",
        "lines2": "145-149",
        "block_hash": "c5546bb572ee3380c4923c648c808dfb",
        "content": "            }\n            \n            response = requests.post(url, json=update_data, headers=heade..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "41-45",
        "file2": "services\\admin_api.py",
        "lines2": "146-150",
        "block_hash": "db63026ee09cd4c97a068e9fec3dc0a9",
        "content": "            \n            response = requests.post(url, json=update_data, headers=headers, timeout=10..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "41-45",
        "file2": "services\\admin_api.py",
        "lines2": "147-151",
        "block_hash": "db63026ee09cd4c97a068e9fec3dc0a9",
        "content": "            response = requests.post(url, json=update_data, headers=headers, timeout=10, verify=Fals..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "73-77",
        "file2": "services\\admin_api.py",
        "lines2": "148-152",
        "block_hash": "001864dba5472f3affde70ef7d4524f6",
        "content": "            response.raise_for_status()\n            \n            result = response.json()\n          ..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "151-155",
        "file2": "services\\admin_api.py",
        "lines2": "152-156",
        "block_hash": "0f85d3001e6937efeafad7da8d05f722",
        "content": "            if result.get(\"success\"):\n                return True, f\"用户积分已更新为{points}\"\n            e..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "52-56",
        "file2": "services\\admin_api.py",
        "lines2": "156-160",
        "block_hash": "627c4af2dddab96ef95740f6e40ef7ce",
        "content": "                \n        except requests.exceptions.RequestException as e:\n            print(f\"[管理AP..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "53-57",
        "file2": "services\\admin_api.py",
        "lines2": "157-161",
        "block_hash": "ea75e31711b761fd1ef3a4f71d018734",
        "content": "        except requests.exceptions.RequestException as e:\n            print(f\"[管理API] 网络异常: {e}\")\n  ..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "54-58",
        "file2": "services\\admin_api.py",
        "lines2": "158-162",
        "block_hash": "1e989689929e415fa2cda7f3776bc3f3",
        "content": "            print(f\"[管理API] 网络异常: {e}\")\n            return False, f\"网络连接失败: {str(e)}\"\n        except..."
      },
      {
        "file1": "services\\admin_api.py",
        "lines1": "55-59",
        "file2": "services\\admin_api.py",
        "lines2": "159-163",
        "block_hash": "0fc78375771c7d5d5abb0003cf0115c5",
        "content": "            return False, f\"网络连接失败: {str(e)}\"\n        except Exception as e:\n            print(f\"[管理..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "5-9",
        "file2": "services\\api_base.py",
        "lines2": "6-10",
        "block_hash": "9f3d4129f2ebbb57bc31443bd3c0b176",
        "content": "urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\nclass APIBase:\n    \"\"\"API基础服务类 ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "35-39",
        "file2": "services\\api_base.py",
        "lines2": "36-40",
        "block_hash": "2ce4c2697a56931b1d60d75f9dcfb68b",
        "content": "            for cinema in cinemas:\n                if cinema.get('cinemaid') == cinemaid:\n          ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "40-44",
        "file2": "services\\api_base.py",
        "lines2": "41-45",
        "block_hash": "f790334f4be6c298a619774d6bb37a89",
        "content": "                        base_url = cinema.get('baseUrl')\n                    if base_url:\n          ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "82-86",
        "file2": "services\\api_base.py",
        "lines2": "83-87",
        "block_hash": "9bfd70cd8385182da3c65e13d6a8e7df",
        "content": "        # 合并请求头\n        request_headers = self.default_headers.copy()\n        if headers:\n          ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "96-100",
        "file2": "services\\api_base.py",
        "lines2": "97-101",
        "block_hash": "fdb73e76e66075f662f0dd4708a44242",
        "content": "            print(f\"[API响应] 状态码: {response.status_code}\")\n            \n            if response.statu..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "98-102",
        "file2": "services\\api_base.py",
        "lines2": "99-103",
        "block_hash": "93e89e0327a37deedde77b24ad7b2c74",
        "content": "            if response.status_code == 200:\n                try:\n                    # 处理BOM编码\n     ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "107-111",
        "file2": "services\\api_base.py",
        "lines2": "108-112",
        "block_hash": "ae7e0a54fbd019c1d66b3e6b86468adb",
        "content": "                        first_end = content.find('}') + 1\n                        second_start = con..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "74-78",
        "file2": "services\\api_base.py",
        "lines2": "143-147",
        "block_hash": "55c08275bc9e91df70c038a8ce0e9af7",
        "content": "        params: GET参数\n        data: POST数据\n        headers: 自定义请求头\n        timeout: 超时时间\n    返回："
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "75-79",
        "file2": "services\\api_base.py",
        "lines2": "144-148",
        "block_hash": "f48fcfbe57d0109d75673b365ca160c7",
        "content": "        data: POST数据\n        headers: 自定义请求头\n        timeout: 超时时间\n    返回：\n        响应的JSON数据"
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "17-21",
        "file2": "services\\auth_service.py",
        "lines2": "18-22",
        "block_hash": "873bfd7904757219192b6bfdf898893b",
        "content": "class AuthService:\n    \"\"\"用户认证服务类\"\"\"\n    \n    def __init__(self):\n        # 云函数API地址（需要替换为实际地址）"
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "109-113",
        "file2": "services\\auth_service.py",
        "lines2": "110-114",
        "block_hash": "28c711641e2c2c698535a7997f94ca74",
        "content": "            sorted_keys = sorted(hardware_info.keys())\n            combined_parts = []\n            f..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "114-118",
        "file2": "services\\auth_service.py",
        "lines2": "115-119",
        "block_hash": "49f09e57d8f0404f4ac354f469f7bc3b",
        "content": "            combined_info = \"|\".join(combined_parts)\n            \n            # 7. 生成MD5哈希并取前16位作为机器..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "116-120",
        "file2": "services\\auth_service.py",
        "lines2": "117-121",
        "block_hash": "96cd982a2dc616ac640e27ab8cfdbf90",
        "content": "            # 7. 生成MD5哈希并取前16位作为机器码\n            machine_code = hashlib.md5(combined_info.encode('utf..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "168-172",
        "file2": "services\\auth_service.py",
        "lines2": "169-173",
        "block_hash": "bc1d1401c45e0386809be0402437a995",
        "content": "            response = self._call_api(\"login\", login_data)\n            \n            if response.get(..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "173-177",
        "file2": "services\\auth_service.py",
        "lines2": "174-178",
        "block_hash": "65409e0d32a47a3fa1068d5ac8236033",
        "content": "                # 确保用户信息包含username字段（兼容主窗口显示）\n                if \"username\" not in user_info:\n      ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "196-200",
        "file2": "services\\auth_service.py",
        "lines2": "197-201",
        "block_hash": "e1b79b4fd49579d6401993308d495313",
        "content": "        if not self.current_user:\n            return False, \"未登录\", None\n        \n        try:\n      ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "201-205",
        "file2": "services\\auth_service.py",
        "lines2": "202-206",
        "block_hash": "be5afde0d70a25c41ee99582eda0da17",
        "content": "            phone = self.current_user.get(\"phone\") or self.current_user.get(\"username\")\n            ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "157-161",
        "file2": "services\\auth_service.py",
        "lines2": "206-210",
        "block_hash": "30775047fe2c12c8f1407ec0237cc7d1",
        "content": "            # 获取当前机器码\n            machine_code = self.get_machine_code()\n            \n            # ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "158-162",
        "file2": "services\\auth_service.py",
        "lines2": "207-211",
        "block_hash": "ba2ee2d21982feabd975798f9cc202e6",
        "content": "            machine_code = self.get_machine_code()\n            \n            # 构建登录请求（与登录时相同的参数）\n    ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "159-163",
        "file2": "services\\auth_service.py",
        "lines2": "208-212",
        "block_hash": "79b2eff15da8304da0e3bb82b05fa6e2",
        "content": "            \n            # 构建登录请求（与登录时相同的参数）\n            login_data = {\n                \"phone\": pho..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "160-164",
        "file2": "services\\auth_service.py",
        "lines2": "209-213",
        "block_hash": "17aeaf715834005da4e84f5aaa15ca16",
        "content": "            # 构建登录请求（与登录时相同的参数）\n            login_data = {\n                \"phone\": phone,\n         ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "161-165",
        "file2": "services\\auth_service.py",
        "lines2": "210-214",
        "block_hash": "2270c7d26baafb8639e955c30647c345",
        "content": "            login_data = {\n                \"phone\": phone,\n                \"machineCode\": machine_co..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "162-166",
        "file2": "services\\auth_service.py",
        "lines2": "211-215",
        "block_hash": "80b59d2f0ac770890f219c2d2fcc9e63",
        "content": "                \"phone\": phone,\n                \"machineCode\": machine_code,\n                \"timest..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "163-167",
        "file2": "services\\auth_service.py",
        "lines2": "212-216",
        "block_hash": "b2fa5d2c77d90a15b3f4fce8cbc34657",
        "content": "                \"machineCode\": machine_code,\n                \"timestamp\": int(time.time())\n         ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "167-171",
        "file2": "services\\auth_service.py",
        "lines2": "216-220",
        "block_hash": "01f68e6b5c86ecd6de7ec13401945f1c",
        "content": "            \n            # 调用登录API进行验证\n            response = self._call_api(\"login\", login_data)\n  ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "167-171",
        "file2": "services\\auth_service.py",
        "lines2": "217-221",
        "block_hash": "01f68e6b5c86ecd6de7ec13401945f1c",
        "content": "            # 调用登录API进行验证\n            response = self._call_api(\"login\", login_data)\n            \n  ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "168-172",
        "file2": "services\\auth_service.py",
        "lines2": "218-222",
        "block_hash": "bc1d1401c45e0386809be0402437a995",
        "content": "            response = self._call_api(\"login\", login_data)\n            \n            if response.get(..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "170-174",
        "file2": "services\\auth_service.py",
        "lines2": "219-223",
        "block_hash": "0101234d13a479277e04b8f5a7d3888e",
        "content": "            \n            if response.get(\"success\"):\n                # 验证成功，更新用户信息\n                u..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "170-174",
        "file2": "services\\auth_service.py",
        "lines2": "220-224",
        "block_hash": "0101234d13a479277e04b8f5a7d3888e",
        "content": "            if response.get(\"success\"):\n                # 验证成功，更新用户信息\n                user_info = re..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "172-176",
        "file2": "services\\auth_service.py",
        "lines2": "222-226",
        "block_hash": "da9d900983945458f0fc9a54316f93e6",
        "content": "                user_info = response.get(\"data\", {})\n                \n                # 确保用户信息包含user..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "173-177",
        "file2": "services\\auth_service.py",
        "lines2": "223-227",
        "block_hash": "65409e0d32a47a3fa1068d5ac8236033",
        "content": "                \n                # 确保用户信息包含username字段\n                if \"username\" not in user_info..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "173-177",
        "file2": "services\\auth_service.py",
        "lines2": "224-228",
        "block_hash": "65409e0d32a47a3fa1068d5ac8236033",
        "content": "                # 确保用户信息包含username字段\n                if \"username\" not in user_info:\n               ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "175-179",
        "file2": "services\\auth_service.py",
        "lines2": "225-229",
        "block_hash": "43d78485f35241d8336fc92511cc21c9",
        "content": "                if \"username\" not in user_info:\n                    user_info[\"username\"] = user_inf..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "252-256",
        "file2": "services\\auth_service.py",
        "lines2": "253-257",
        "block_hash": "0f87ac865a1650d72028f96a44f27c4b",
        "content": "            # 检查积分是否足够\n            if current_points < points:\n                return False, f\"积分不足，..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "257-261",
        "file2": "services\\auth_service.py",
        "lines2": "258-262",
        "block_hash": "d64321e6de870113289e244a7a322191",
        "content": "            new_points = current_points - points\n            self.current_user[\"points\"] = new_point..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "260-264",
        "file2": "services\\auth_service.py",
        "lines2": "261-265",
        "block_hash": "f49b3dcd3ed1619ebd3cac54e77b2194",
        "content": "            return True, f\"扣除成功，剩余积分: {new_points}\"\n                \n        except Exception as e:\n..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "272-276",
        "file2": "services\\auth_service.py",
        "lines2": "273-277",
        "block_hash": "1de8f1129b804675c12aa17034e5cde4",
        "content": "    def logout(self):\n        \"\"\"用户登出\"\"\"\n        self.local_token = None\n        self.current_user =..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "294-298",
        "file2": "services\\auth_service.py",
        "lines2": "295-299",
        "block_hash": "5dd71926f32f1278c6fdd557fac17cb8",
        "content": "            response = requests.post(url, json=data, headers=headers, timeout=10, verify=False)\n\n   ..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "315-319",
        "file2": "services\\auth_service.py",
        "lines2": "316-320",
        "block_hash": "d321fc5e02bb96ce75b7363c6575ddfe",
        "content": "        except requests.exceptions.ConnectionError as e:\n            # 真正的连接错误\n            return {\"..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "327-331",
        "file2": "services\\auth_service.py",
        "lines2": "328-332",
        "block_hash": "b50a34e40768db9869b7d676022e9526",
        "content": "    def _mock_api_response(self, endpoint: str, data: Dict) -> Dict:\n        \"\"\"\n        模拟API响应（开发阶..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "332-336",
        "file2": "services\\auth_service.py",
        "lines2": "333-337",
        "block_hash": "deebcdee31c87ecfa9f38157d0d6db69",
        "content": "        if endpoint == \"login\":\n            username = data.get(\"username\")  # 云函数参数名\n            ma..."
      },
      {
        "file1": "services\\auth_service.py",
        "lines1": "412-416",
        "file2": "services\\auth_service.py",
        "lines2": "413-417",
        "block_hash": "7b374b38952b165d8f76eef2307d301b",
        "content": "        elif endpoint == \"use_points\":\n            points = data.get(\"points\", 0)\n            operat..."
      },
      {
        "file1": "services\\cinema_id_helper.py",
        "lines1": "17-21",
        "file2": "services\\cinema_id_helper.py",
        "lines2": "18-22",
        "block_hash": "8fd11da5f92db7257bb5df55063fc2df",
        "content": "    if len(clean_id) < 8:\n        return False, clean_id, f\"影院ID长度太短（{len(clean_id)}位），通常应为8-16位\"\n  ..."
      },
      {
        "file1": "services\\cinema_id_helper.py",
        "lines1": "23-27",
        "file2": "services\\cinema_id_helper.py",
        "lines2": "24-28",
        "block_hash": "340b71698c2969952eb85a19195e8f7d",
        "content": "    if re.match(r'^[0-9a-fA-F]+$', clean_id):\n        # 十六进制格式\n        return True, clean_id.lower()..."
      },
      {
        "file1": "services\\cinema_id_helper.py",
        "lines1": "77-81",
        "file2": "services\\cinema_id_helper.py",
        "lines2": "78-82",
        "block_hash": "47e2efd6f2381481862ddb53c5f18e72",
        "content": "    # 添加填充建议\n    if len(input_id) < 12:\n        padded = input_id.zfill(12)\n        suggestions.appe..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "74-78",
        "file2": "services\\cinema_info_api.py",
        "lines2": "75-79",
        "block_hash": "8f515524acbf98bada6994d7460a36f6",
        "content": "        if response.status_code == 200:\n            try:\n                data = response.json()\n    ..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "79-83",
        "file2": "services\\cinema_info_api.py",
        "lines2": "80-84",
        "block_hash": "160f3fb3407201341c702a1e8873cbc2",
        "content": "                # 分析响应\n                result_code = data.get('resultCode')\n                result_d..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "79-83",
        "file2": "services\\cinema_info_api.py",
        "lines2": "81-85",
        "block_hash": "160f3fb3407201341c702a1e8873cbc2",
        "content": "                result_code = data.get('resultCode')\n                result_desc = data.get('resultD..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "84-88",
        "file2": "services\\cinema_info_api.py",
        "lines2": "85-89",
        "block_hash": "be7c7eccc81ae953133c8603316d121b",
        "content": "                # 检查成功条件\n                if result_code == \"0\" and result_data is not None:\n        ..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "96-100",
        "file2": "services\\cinema_info_api.py",
        "lines2": "97-101",
        "block_hash": "03db46eec85595a87dbe70c62fd28aa3",
        "content": "                    if isinstance(result_data, dict):\n                        cinema_name = (result_..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "101-105",
        "file2": "services\\cinema_info_api.py",
        "lines2": "102-106",
        "block_hash": "2eaf9f7fd77be119f8e16b95be770453",
        "content": "                        if cinema_name:\n                            print(f\"[影院信息API] ✓ 影院名称: {cinem..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "106-110",
        "file2": "services\\cinema_info_api.py",
        "lines2": "107-111",
        "block_hash": "5de087b35f2cbfc3ee2a4b30071e033c",
        "content": "                            # 这种情况下会在format_cinema_data中生成默认名称\n                            print(f\"[..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "110-114",
        "file2": "services\\cinema_info_api.py",
        "lines2": "111-115",
        "block_hash": "fd8fd065540d457c1c7a70e2b5d9fed7",
        "content": "                    # 如果是列表，取第一个\n                    elif isinstance(result_data, list) and len(resu..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "115-119",
        "file2": "services\\cinema_info_api.py",
        "lines2": "116-120",
        "block_hash": "21f1f3a7dc3109130cc39b4ee5d541d8",
        "content": "                    return result_data\n                else:\n                    print(f\"[影院信息API] ✗..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "152-156",
        "file2": "services\\cinema_info_api.py",
        "lines2": "153-157",
        "block_hash": "a91402af896f8a377f2e0146aa6462fb",
        "content": "        ]\n    \n    print(f\"[影院验证] 开始验证影院ID: {cinemaid}\")\n    print(f\"[影院验证] 将尝试 {len(base_urls)} 个域名..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "179-183",
        "file2": "services\\cinema_info_api.py",
        "lines2": "180-184",
        "block_hash": "c255775a33ac673081cd4596244cc94f",
        "content": "    Args:\n        cinema_info (dict): API返回的影院信息\n        base_url (str): API域名（不包含协议）\n        origin..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "190-194",
        "file2": "services\\cinema_info_api.py",
        "lines2": "191-195",
        "block_hash": "50dbf9d89a41bc253f226ef9210c18e4",
        "content": "    # 提取影院名称（尝试多个可能的字段）\n    cinema_name = (cinema_info.get('cinemaShortName') or\n                   ..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "190-194",
        "file2": "services\\cinema_info_api.py",
        "lines2": "192-196",
        "block_hash": "50dbf9d89a41bc253f226ef9210c18e4",
        "content": "    cinema_name = (cinema_info.get('cinemaShortName') or\n                   cinema_info.get('cinemaN..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "196-200",
        "file2": "services\\cinema_info_api.py",
        "lines2": "197-201",
        "block_hash": "9dfd2c8b9ccfcf46938cdbf56cc3f969",
        "content": "    if not cinema_name:\n        # 从域名提取可能的影院品牌名\n        domain_parts = base_url.split('.')\n        b..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "222-226",
        "file2": "services\\cinema_info_api.py",
        "lines2": "223-227",
        "block_hash": "62241895bd3d82b0facf6ff94888ed8f",
        "content": "        if brand_hint:\n            cinema_name = f\"{brand_hint}({cinema_id[:8]})\"\n        else:\n    ..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "228-232",
        "file2": "services\\cinema_info_api.py",
        "lines2": "229-233",
        "block_hash": "77936400d822803c6f224e42f316cf47",
        "content": "    city_name = (cinema_info.get('cityName') or\n                 cinema_info.get('city') or\n        ..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "234-238",
        "file2": "services\\cinema_info_api.py",
        "lines2": "235-239",
        "block_hash": "cd109ed4f7328c889abc962986654988",
        "content": "    address = (cinema_info.get('cinemaAddress') or\n               cinema_info.get('address') or\n    ..."
      },
      {
        "file1": "services\\cinema_info_api.py",
        "lines1": "240-244",
        "file2": "services\\cinema_info_api.py",
        "lines2": "241-245",
        "block_hash": "35c10a03a17505009755377b03bd7e70",
        "content": "    phone = (cinema_info.get('cinemaPhone') or\n             cinema_info.get('phone') or\n            ..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "64-68",
        "file2": "services\\cinema_manager.py",
        "lines2": "65-69",
        "block_hash": "166a24cb6d6054fc32aec61ad1965948",
        "content": "        is_valid, cinema_info, base_url = validate_cinema(cinemaid)\n        \n        if not is_valid..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "70-74",
        "file2": "services\\cinema_manager.py",
        "lines2": "71-75",
        "block_hash": "690b40c5d798f4fbabef39e4b8bfdb29",
        "content": "        cinema_data = format_cinema_data(cinema_info, base_url, cinemaid)\n        \n        # 加载现有影院列..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "75-79",
        "file2": "services\\cinema_manager.py",
        "lines2": "76-80",
        "block_hash": "7087e9c0f0f40daa8a64161d39351e7c",
        "content": "        # 检查是否已存在\n        for existing_cinema in cinemas:\n            if existing_cinema.get('cinema..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "75-79",
        "file2": "services\\cinema_manager.py",
        "lines2": "77-81",
        "block_hash": "7087e9c0f0f40daa8a64161d39351e7c",
        "content": "        for existing_cinema in cinemas:\n            if existing_cinema.get('cinemaid') == cinemaid:\n..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "84-88",
        "file2": "services\\cinema_manager.py",
        "lines2": "85-89",
        "block_hash": "f0fd78902ad53a6ee376d1bff9258fcc",
        "content": "        if self.save_cinema_list(cinemas):\n            return True, cinema_data\n        else:\n      ..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "107-111",
        "file2": "services\\cinema_manager.py",
        "lines2": "108-112",
        "block_hash": "4dd4e72aebd62104ad6d73694ce32cc8",
        "content": "        if self.save_cinema_list(cinemas):\n            return True, \"删除成功\"\n        else:\n           ..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "123-127",
        "file2": "services\\cinema_manager.py",
        "lines2": "124-128",
        "block_hash": "659eecce82ca782c3a8e721ff9a314db",
        "content": "        # 查找并更新影院\n        for i, cinema in enumerate(cinemas):\n            if cinema.get('cinemaid')..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "123-127",
        "file2": "services\\cinema_manager.py",
        "lines2": "125-129",
        "block_hash": "659eecce82ca782c3a8e721ff9a314db",
        "content": "        for i, cinema in enumerate(cinemas):\n            if cinema.get('cinemaid') == cinemaid:\n    ..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "129-133",
        "file2": "services\\cinema_manager.py",
        "lines2": "130-134",
        "block_hash": "b0f1c4cfc520736d489758cfedf14b2c",
        "content": "                if self.save_cinema_list(cinemas):\n                    return True, cinemas[i]\n     ..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "161-165",
        "file2": "services\\cinema_manager.py",
        "lines2": "162-166",
        "block_hash": "4719090eadb252d3b7ba2e616abed861",
        "content": "        existing_cinema = self.get_cinema_by_id(cinemaid)\n        if not existing_cinema:\n          ..."
      },
      {
        "file1": "services\\cinema_manager.py",
        "lines1": "169-173",
        "file2": "services\\cinema_manager.py",
        "lines2": "170-174",
        "block_hash": "129e9377e5fb41cc464e483c8a8c94c6",
        "content": "            from .cinema_info_api import get_cinema_info\n            cinema_info = get_cinema_info(b..."
      },
      {
        "file1": "services\\film_service.py",
        "lines1": "75-79",
        "file2": "services\\film_service.py",
        "lines2": "76-80",
        "block_hash": "813afaa5d441095d4dee04ac795ba644",
        "content": "            from .cinema_manager import cinema_manager\n            migrated_cinemas = []\n           ..."
      },
      {
        "file1": "services\\film_service.py",
        "lines1": "93-97",
        "file2": "services\\film_service.py",
        "lines2": "94-98",
        "block_hash": "0417b67894183654a4c1a19997863fe3",
        "content": "            # 保存到新的管理器\n            if cinema_manager.save_cinema_list(migrated_cinemas):\n           ..."
      },
      {
        "file1": "services\\film_service.py",
        "lines1": "97-101",
        "file2": "services\\film_service.py",
        "lines2": "98-102",
        "block_hash": "d3dbef65bc9c6bd87f017ad7b5dfca4b",
        "content": "                # 迁移成功后，重命名旧文件作为备份\n                backup_path = old_path + '.backup'\n              ..."
      },
      {
        "file1": "services\\film_service.py",
        "lines1": "132-136",
        "file2": "services\\film_service.py",
        "lines2": "133-137",
        "block_hash": "a3b161bc4bbfe5a0d410f0869c4aa4fd",
        "content": "        name = film.get('fn') or film.get('film_name')\n        key = film.get('fc') or film.get('fil..."
      },
      {
        "file1": "services\\film_service.py",
        "lines1": "188-192",
        "file2": "services\\film_service.py",
        "lines2": "189-193",
        "block_hash": "f524692bacc15d29ac2bf9ecd99cc916",
        "content": "        return json.loads(response.content.decode('utf-8-sig'))\n    except Exception:\n        return..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "31-35",
        "file2": "services\\member_service.py",
        "lines2": "32-36",
        "block_hash": "c1c94d1db11c2ea8f3e0f21f82a6703c",
        "content": "        print(f\"[会员服务] 用户ID: {account.get('userid')}\")\n        \n        # 调用会员卡列表接口\n        result =..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "34-38",
        "file2": "services\\member_service.py",
        "lines2": "35-39",
        "block_hash": "bc2fb5d6b22ab26b49985629e25ce1f1",
        "content": "        result = api_get('MiniTicket/index.php/MiniMember/getMemcardList', cinemaid, params=params)\n..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "57-61",
        "file2": "services\\member_service.py",
        "lines2": "67-71",
        "block_hash": "29fb69d3721e267346f113f48085b955",
        "content": "        # 返回基础信息\n        return {\n            'userid': account.get('userid', ''),\n            'card..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "58-62",
        "file2": "services\\member_service.py",
        "lines2": "68-72",
        "block_hash": "0c16a0eafd417403ab50cc23179ac297",
        "content": "        return {\n            'userid': account.get('userid', ''),\n            'cardno': account.get(..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "59-63",
        "file2": "services\\member_service.py",
        "lines2": "69-73",
        "block_hash": "b559b278fef03d3047c29d53229cc9e9",
        "content": "            'userid': account.get('userid', ''),\n            'cardno': account.get('cardno', ''),\n  ..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "60-64",
        "file2": "services\\member_service.py",
        "lines2": "70-74",
        "block_hash": "6d6a0f5c91688e68dd47370fbf1583db",
        "content": "            'cardno': account.get('cardno', ''),\n            'balance': account.get('balance', 0),\n ..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "61-65",
        "file2": "services\\member_service.py",
        "lines2": "71-75",
        "block_hash": "3abe70f1aa8c8e866e05a1fbb1d619c3",
        "content": "            'balance': account.get('balance', 0),\n            'score': account.get('score', 0),\n    ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "24-28",
        "file2": "services\\order_api.py",
        "lines2": "25-29",
        "block_hash": "c65aa1ec7065f3a26fa426b8587002c5",
        "content": "        cinema_name = cinema_name_map.get(cinema_id, \"未知影院\")\n\n        # 🎯 生成日期字符串 (MMDD格式)\n        c..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "27-31",
        "file2": "services\\order_api.py",
        "lines2": "28-32",
        "block_hash": "fa4029101d7a2db03b37dc69547600fb",
        "content": "        current_date = datetime.now().strftime(\"%m%d\")\n\n        # 🎯 构建文件名：影院+日期+订单号.png\n        file..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "32-36",
        "file2": "services\\order_api.py",
        "lines2": "33-37",
        "block_hash": "188ee73cd0ebcb3369c210a5a244353d",
        "content": "        # 🎯 确保data/img目录存在\n        img_dir = os.path.join(\"data\", \"img\")\n        os.makedirs(img_dir..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "86-90",
        "file2": "services\\order_api.py",
        "lines2": "87-91",
        "block_hash": "5dc9a5e72775e4218f76e65b5b0f9810",
        "content": "    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        print(\"[优惠券API] 缺少影院ID参数\")\n      ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "91-95",
        "file2": "services\\order_api.py",
        "lines2": "92-96",
        "block_hash": "01bb8a38f0fe933a99aa725e46ea075b",
        "content": "    # 特殊的headers for 券接口\n    special_headers = {\n        'referer': 'https://servicewechat.com/wx03a..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "91-95",
        "file2": "services\\order_api.py",
        "lines2": "93-97",
        "block_hash": "01bb8a38f0fe933a99aa725e46ea075b",
        "content": "    special_headers = {\n        'referer': 'https://servicewechat.com/wx03aeb42bd6a3580e/1/page-fram..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "96-100",
        "file2": "services\\order_api.py",
        "lines2": "97-101",
        "block_hash": "68de3d94b98bfba54ac31b3f909b9dde",
        "content": "    # 打印请求信息\n    import urllib.parse\n    print(f\"[优惠券API请求] 影院ID: {cinemaid}\")\n    print(f\"[优惠券API请求..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "101-105",
        "file2": "services\\order_api.py",
        "lines2": "102-106",
        "block_hash": "9711b2b05ec166db11d2b4076e2cb333",
        "content": "    try:\n        # 调用API\n        result = api_get('MiniTicket/index.php/MiniCoupon/getCouponByOrder'..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "105-109",
        "file2": "services\\order_api.py",
        "lines2": "106-110",
        "block_hash": "3aac215ac03b8ab6e75594f3487075ce",
        "content": "        # 🔧 修复：确保返回值不为None\n        if result is None:\n            print(\"[优惠券API] API返回None，可能是网络异常\"..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "105-109",
        "file2": "services\\order_api.py",
        "lines2": "107-111",
        "block_hash": "3aac215ac03b8ab6e75594f3487075ce",
        "content": "        if result is None:\n            print(\"[优惠券API] API返回None，可能是网络异常\")\n            return {\"resu..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "110-114",
        "file2": "services\\order_api.py",
        "lines2": "111-115",
        "block_hash": "bb62f34334118edfd9d90be197f6a593",
        "content": "        # 🔧 修复：确保返回值是字典类型\n        if not isinstance(result, dict):\n            print(f\"[优惠券API] API返..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "139-143",
        "file2": "services\\order_api.py",
        "lines2": "140-144",
        "block_hash": "c56067f3f9db905d650287244412696f",
        "content": "    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        print(\"[券列表API] 缺少影院ID参数\")\n      ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "148-152",
        "file2": "services\\order_api.py",
        "lines2": "149-153",
        "block_hash": "c99acbfe39c69c2e5508340946c04878",
        "content": "    try:\n        # 调用API\n        result = api_get('MiniTicket/index.php/MiniCoupon/getCouponList', c..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "152-156",
        "file2": "services\\order_api.py",
        "lines2": "153-157",
        "block_hash": "0766c071fb3e3c1367cd25a1d7f01f33",
        "content": "        # 🔧 修复：确保返回值不为None\n        if result is None:\n            print(\"[券列表API] API返回None，可能是网络异常\"..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "152-156",
        "file2": "services\\order_api.py",
        "lines2": "154-158",
        "block_hash": "0766c071fb3e3c1367cd25a1d7f01f33",
        "content": "        if result is None:\n            print(\"[券列表API] API返回None，可能是网络异常\")\n            return {\"resu..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "157-161",
        "file2": "services\\order_api.py",
        "lines2": "158-162",
        "block_hash": "1b4cb2abbfbdaf26e99d15db5d8d0a58",
        "content": "        # 🔧 修复：确保返回值是字典类型\n        if not isinstance(result, dict):\n            print(f\"[券列表API] API返..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "176-180",
        "file2": "services\\order_api.py",
        "lines2": "233-237",
        "block_hash": "a40ef2112be966b84820cf495dd1d7d6",
        "content": "    :return: dict，接口返回的json\n    \"\"\"\n    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n     ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "177-181",
        "file2": "services\\order_api.py",
        "lines2": "234-238",
        "block_hash": "7e3a3f324f9db6a6a462b17e13a11cf7",
        "content": "    \"\"\"\n    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "254-258",
        "file2": "services\\order_api.py",
        "lines2": "255-259",
        "block_hash": "f1034ddea2e4cc907439bddc2a02130a",
        "content": "    base_url = api_base.get_base_url_for_cinema(cinemaid)\n\n    # 🔧 修复：构建带认证参数的URL\n    if account:\n  ..."
      },
      {
        "file1": "services\\member_service.py",
        "lines1": "27-31",
        "file2": "services\\order_api.py",
        "lines2": "265-269",
        "block_hash": "f33ac0582ebd49472d8e29f2d52d7671",
        "content": "            'CVersion': '3.9.12',\n            'OS': 'Windows',\n            'source': '2'\n        }\n"
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "301-305",
        "file2": "services\\order_api.py",
        "lines2": "302-306",
        "block_hash": "817923fa97380eec75d1b8c55212086a",
        "content": "        if resp.status_code == 200:\n            # 检查响应内容类型\n            content_type = resp.headers.g..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "177-181",
        "file2": "services\\order_api.py",
        "lines2": "357-361",
        "block_hash": "7e3a3f324f9db6a6a462b17e13a11cf7",
        "content": "    \"\"\"\n    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "356-360",
        "file2": "services\\order_api.py",
        "lines2": "369-373",
        "block_hash": "d6e86d41a68465d696ec087492be2457",
        "content": "    :return: dict，接口返回的json，异常时resultCode=-1\n    \"\"\"\n    cinemaid = params.get('cinemaid')\n    if no..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "177-181",
        "file2": "services\\order_api.py",
        "lines2": "370-374",
        "block_hash": "7e3a3f324f9db6a6a462b17e13a11cf7",
        "content": "    \"\"\"\n    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "178-182",
        "file2": "services\\order_api.py",
        "lines2": "371-375",
        "block_hash": "abbcef7a28b643e7e822e625e26f2c91",
        "content": "    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1\", \"resu..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "388-392",
        "file2": "services\\order_api.py",
        "lines2": "389-393",
        "block_hash": "318a8db2a95084e3a8b70b5cabca7d07",
        "content": "    print(f\"[取消订单API] 订单号: {request_params['orderno']}\")\n    print(f\"[取消订单API] 影院ID: {request_params..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "services\\order_api.py",
        "lines2": "413-417",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "        'cardno': account.get('cardno', ''),\n        'userid': account['userid'],\n        'openid': ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "services\\order_api.py",
        "lines2": "414-418",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "        'userid': account['userid'],\n        'openid': account['openid'],\n        'CVersion': '3.9.1..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "services\\order_api.py",
        "lines2": "415-419",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "        'openid': account['openid'],\n        'CVersion': '3.9.12',\n        'OS': 'Windows',\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "services\\order_api.py",
        "lines2": "416-420",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "        'CVersion': '3.9.12',\n        'OS': 'Windows',\n        'token': account['token'],\n        's..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "services\\order_api.py",
        "lines2": "417-421",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "        'OS': 'Windows',\n        'token': account['token'],\n        'source': '2'\n    }\n    "
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "421-425",
        "file2": "services\\order_api.py",
        "lines2": "422-426",
        "block_hash": "2003a630ee3d5e1156aed0abfca51873",
        "content": "    order_list_result = get_order_list(list_params)\n    if order_list_result.get('resultCode') != '0..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "426-430",
        "file2": "services\\order_api.py",
        "lines2": "427-431",
        "block_hash": "47c900fefb7744a8c7f6c2c709a068eb",
        "content": "    orders = order_list_result.get('resultData', {}).get('orders', [])\n    unpaid_orders = [order fo..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "411-415",
        "file2": "services\\order_api.py",
        "lines2": "438-442",
        "block_hash": "6484fc762c2ead10f5334d9f67ea20d4",
        "content": "                'groupid': '',\n                'cinemaid': cinemaid,\n                'cardno': accou..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "412-416",
        "file2": "services\\order_api.py",
        "lines2": "439-443",
        "block_hash": "bd1e56a5b722de8294dc126da6b9ddb1",
        "content": "                'cinemaid': cinemaid,\n                'cardno': account.get('cardno', ''),\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "services\\order_api.py",
        "lines2": "440-444",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                'cardno': account.get('cardno', ''),\n                'userid': account['userid'],\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "services\\order_api.py",
        "lines2": "441-445",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                'userid': account['userid'],\n                'openid': account['openid'],\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "services\\order_api.py",
        "lines2": "442-446",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                'openid': account['openid'],\n                'CVersion': '3.9.12',\n                '..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "472-476",
        "file2": "services\\order_api.py",
        "lines2": "473-477",
        "block_hash": "8f6d3262ebba4f5cfbc443832fa5700c",
        "content": "    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        print(\"[券价格API] 缺少影院ID参数\")\n      ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "477-481",
        "file2": "services\\order_api.py",
        "lines2": "478-482",
        "block_hash": "08d3b7f82f6769483894a17c365cdefb",
        "content": "    try:\n        # 调用API\n        result = api_get('MiniTicket/index.php/MiniOrder/ordercouponPrepay'..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "481-485",
        "file2": "services\\order_api.py",
        "lines2": "482-486",
        "block_hash": "6746ccdbfd32fc6d4ed3fa322db8c9ee",
        "content": "        # 🔧 修复：确保返回值不为None\n        if result is None:\n            print(\"[券价格API] API返回None，可能是网络异常\"..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "481-485",
        "file2": "services\\order_api.py",
        "lines2": "483-487",
        "block_hash": "6746ccdbfd32fc6d4ed3fa322db8c9ee",
        "content": "        if result is None:\n            print(\"[券价格API] API返回None，可能是网络异常\")\n            return {\"resu..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "486-490",
        "file2": "services\\order_api.py",
        "lines2": "487-491",
        "block_hash": "a11e1829fe22b342f8be08ac66b5665a",
        "content": "        # 🔧 修复：确保返回值是字典类型\n        if not isinstance(result, dict):\n            print(f\"[券价格API] API返..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "177-181",
        "file2": "services\\order_api.py",
        "lines2": "504-508",
        "block_hash": "7e3a3f324f9db6a6a462b17e13a11cf7",
        "content": "    \"\"\"\n    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "178-182",
        "file2": "services\\order_api.py",
        "lines2": "505-509",
        "block_hash": "abbcef7a28b643e7e822e625e26f2c91",
        "content": "    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1\", \"resu..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "17-21",
        "file2": "services\\order_api.py",
        "lines2": "511-515",
        "block_hash": "4ea6513d0f0150a829c21e8111596055",
        "content": "        'Sec-Fetch-Site': 'cross-site',\n        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Dest': ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "18-22",
        "file2": "services\\order_api.py",
        "lines2": "512-516",
        "block_hash": "949ee2ed83f5277cfdcd38b58f5547f7",
        "content": "        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Dest': 'empty',\n        'Referer': 'https://ser..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "19-23",
        "file2": "services\\order_api.py",
        "lines2": "513-517",
        "block_hash": "1b036e70713244a535705e90141a1491",
        "content": "        'Sec-Fetch-Dest': 'empty',\n        'Referer': 'https://servicewechat.com/wx03aeb42bd6a3580e/..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "517-521",
        "file2": "services\\order_api.py",
        "lines2": "518-522",
        "block_hash": "a9778b592246b066c8ff007df0ed14bd",
        "content": "    try:\n        # 🆕 构建会员卡支付参数\n        couponcodes = params.get('couponcodes', '')\n        payprice ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "541-545",
        "file2": "services\\order_api.py",
        "lines2": "542-546",
        "block_hash": "93b3c930e3723eb14b87e94cf8a6b07c",
        "content": "            'totalprice': payprice,  # 总支付金额\n            'couponcodes': couponcodes,  # 券码（空字符串表示纯会员..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "546-550",
        "file2": "services\\order_api.py",
        "lines2": "547-551",
        "block_hash": "43e0a583cb6de851aa83534b60b7e3e9",
        "content": "            # 🆕 会员信息和密码\n            'memberinfo': params.get('memberinfo', '{}'),  # 会员信息JSON\n      ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "563-567",
        "file2": "services\\order_api.py",
        "lines2": "564-568",
        "block_hash": "da71384d3bcdaf7cfac570ab159d3d38",
        "content": "        result = api_post('MiniTicket/index.php/MiniPay/memcardPay', cinemaid, data=member_pay_param..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "177-181",
        "file2": "services\\order_api.py",
        "lines2": "578-582",
        "block_hash": "7e3a3f324f9db6a6a462b17e13a11cf7",
        "content": "    \"\"\"\n    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "178-182",
        "file2": "services\\order_api.py",
        "lines2": "579-583",
        "block_hash": "abbcef7a28b643e7e822e625e26f2c91",
        "content": "    cinemaid = params.get('cinemaid')\n    if not cinemaid:\n        return {\"resultCode\": \"-1\", \"resu..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "506-510",
        "file2": "services\\order_api.py",
        "lines2": "580-584",
        "block_hash": "c90b6f0919e07da71f70cc1ffb52f603",
        "content": "    if not cinemaid:\n        return {\"resultCode\": \"-1\", \"resultDesc\": \"缺少影院ID参数\", \"resultData\": Non..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "507-511",
        "file2": "services\\order_api.py",
        "lines2": "581-585",
        "block_hash": "c958c3d59d0d00c7c0bd1df6e2aeefcd",
        "content": "        return {\"resultCode\": \"-1\", \"resultDesc\": \"缺少影院ID参数\", \"resultData\": None}\n\n    # 特殊的headers ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "508-512",
        "file2": "services\\order_api.py",
        "lines2": "582-586",
        "block_hash": "c9119988bf4e40e1a54919ff89a65ba8",
        "content": "\n    # 特殊的headers for 支付接口\n    special_headers = {\n        'Sec-Fetch-Site': 'cross-site',\n        '..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "509-513",
        "file2": "services\\order_api.py",
        "lines2": "583-587",
        "block_hash": "273d200019bb99c8d9c01dee2b61d014",
        "content": "    # 特殊的headers for 支付接口\n    special_headers = {\n        'Sec-Fetch-Site': 'cross-site',\n        'S..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "510-514",
        "file2": "services\\order_api.py",
        "lines2": "584-588",
        "block_hash": "c09464bdfd206f1c2d0bb0c28e3eebff",
        "content": "    special_headers = {\n        'Sec-Fetch-Site': 'cross-site',\n        'Sec-Fetch-Mode': 'cors',\n  ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "17-21",
        "file2": "services\\order_api.py",
        "lines2": "585-589",
        "block_hash": "4ea6513d0f0150a829c21e8111596055",
        "content": "        'Sec-Fetch-Site': 'cross-site',\n        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Dest': ..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "18-22",
        "file2": "services\\order_api.py",
        "lines2": "586-590",
        "block_hash": "949ee2ed83f5277cfdcd38b58f5547f7",
        "content": "        'Sec-Fetch-Mode': 'cors',\n        'Sec-Fetch-Dest': 'empty',\n        'Referer': 'https://ser..."
      },
      {
        "file1": "services\\api_base.py",
        "lines1": "19-23",
        "file2": "services\\order_api.py",
        "lines2": "587-591",
        "block_hash": "1b036e70713244a535705e90141a1491",
        "content": "        'Sec-Fetch-Dest': 'empty',\n        'Referer': 'https://servicewechat.com/wx03aeb42bd6a3580e/..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "514-518",
        "file2": "services\\order_api.py",
        "lines2": "588-592",
        "block_hash": "5534b7eae6ef9f16f53425f802075ee9",
        "content": "        'Referer': 'https://servicewechat.com/wx03aeb42bd6a3580e/1/page-frame.html',\n        'Accept..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "598-602",
        "file2": "services\\order_api.py",
        "lines2": "599-603",
        "block_hash": "3ea5e55c4fb1a027852ce9ae7b5ad40c",
        "content": "        result = api_post('MiniTicket/index.php/MiniPay/couponPay', cinemaid, data=params, headers=s..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "178-182",
        "file2": "services\\order_api.py",
        "lines2": "613-617",
        "block_hash": "abbcef7a28b643e7e822e625e26f2c91",
        "content": "        cinemaid = params.get('cinemaid')\n        if not cinemaid:\n            return {\"resultCode\":..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "620-624",
        "file2": "services\\order_api.py",
        "lines2": "621-625",
        "block_hash": "cdc7c91aeec89fc00dd0842c29c2689a",
        "content": "        print(f\"[智能支付] 开始支付方式判断\")\n        print(f\"[智能支付] 券码: '{couponcodes}'\")\n        print(f\"[智能支付..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "625-629",
        "file2": "services\\order_api.py",
        "lines2": "626-630",
        "block_hash": "3c68587d3b393d7051a23d77f46c887c",
        "content": "        if not couponcodes or couponcodes.strip() == '':\n            # 情况1: 纯会员卡支付 - couponcodes为空\n ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "627-631",
        "file2": "services\\order_api.py",
        "lines2": "628-632",
        "block_hash": "72206ae1eb5ee18e57c7cf170b2cbb10",
        "content": "            print(f\"[智能支付] ✅ 选择支付方式: 纯会员卡支付 (memcardPay)\")\n            return member_card_pay(params..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "632-636",
        "file2": "services\\order_api.py",
        "lines2": "633-637",
        "block_hash": "ec2264e3045056ebce627d2980821dde",
        "content": "            try:\n                pay_amount = int(payprice) if payprice.isdigit() else 0\n           ..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "21-25",
        "file2": "services\\ui_utils.py",
        "lines2": "22-26",
        "block_hash": "7daf01903a13fa75522ec537b7361af6",
        "content": "        # 设置字体\n        font = QFont(\"Microsoft YaHei\", 10)\n        msg_box.setFont(font)\n        \n  ..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "26-30",
        "file2": "services\\ui_utils.py",
        "lines2": "27-31",
        "block_hash": "185ba89cdef9eda5853da24a9d1a3e3f",
        "content": "        msg_box.setWindowFlags(Qt.Dialog | Qt.WindowTitleHint | Qt.WindowCloseButtonHint)\n        \n ..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "47-51",
        "file2": "services\\ui_utils.py",
        "lines2": "48-52",
        "block_hash": "a16f75ccc39b1209f6b5e376f3229879",
        "content": "    @staticmethod\n    def show_success(parent, title, message, auto_close=True):\n        \"\"\"显示成功消息 -..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "62-66",
        "file2": "services\\ui_utils.py",
        "lines2": "63-67",
        "block_hash": "0bdb9e5b95e1439555c8bad332c317ec",
        "content": "    @staticmethod\n    def show_error(parent, title, message, auto_close=False):\n        \"\"\"显示错误消息 - ..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "52-56",
        "file2": "services\\ui_utils.py",
        "lines2": "67-71",
        "block_hash": "ab72a25f4f3ec2b2dcd342108d879882",
        "content": "        \n        if auto_close:\n            # 1秒后自动关闭\n            timer = QTimer()\n            timer..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "53-57",
        "file2": "services\\ui_utils.py",
        "lines2": "68-72",
        "block_hash": "84bbfa1d8799bebb438f62484d9782f6",
        "content": "        if auto_close:\n            # 1秒后自动关闭\n            timer = QTimer()\n            timer.timeout...."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "54-58",
        "file2": "services\\ui_utils.py",
        "lines2": "69-73",
        "block_hash": "583573cbbb5d3b86d4dfa0a9ff972b45",
        "content": "            # 1秒后自动关闭\n            timer = QTimer()\n            timer.timeout.connect(msg_box.accept)..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "55-59",
        "file2": "services\\ui_utils.py",
        "lines2": "70-74",
        "block_hash": "460c1e9f39d549346b6bbbf3f771d923",
        "content": "            timer = QTimer()\n            timer.timeout.connect(msg_box.accept)\n            timer.sta..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "56-60",
        "file2": "services\\ui_utils.py",
        "lines2": "71-75",
        "block_hash": "b43aca21fcaa3cf274b21abcafbc54eb",
        "content": "            timer.timeout.connect(msg_box.accept)\n            timer.start(1000)  # 1秒\n            ms..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "57-61",
        "file2": "services\\ui_utils.py",
        "lines2": "72-76",
        "block_hash": "b80eac5563b68401da7dfca5404c16d8",
        "content": "            timer.start(1000)  # 1秒\n            msg_box.exec_()\n            timer.stop()\n        els..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "58-62",
        "file2": "services\\ui_utils.py",
        "lines2": "73-77",
        "block_hash": "0a764d13fd60c0f8e009bf26e780907f",
        "content": "            msg_box.exec_()\n            timer.stop()\n        else:\n            msg_box.exec_()\n    "
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "77-81",
        "file2": "services\\ui_utils.py",
        "lines2": "78-82",
        "block_hash": "d38acea3b4a1b89aefcf50893714933e",
        "content": "    @staticmethod\n    def show_warning(parent, title, message, auto_close=False):\n        \"\"\"显示警告消息 ..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "52-56",
        "file2": "services\\ui_utils.py",
        "lines2": "82-86",
        "block_hash": "ab72a25f4f3ec2b2dcd342108d879882",
        "content": "        \n        if auto_close:\n            # 1秒后自动关闭\n            timer = QTimer()\n            timer..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "53-57",
        "file2": "services\\ui_utils.py",
        "lines2": "83-87",
        "block_hash": "84bbfa1d8799bebb438f62484d9782f6",
        "content": "        if auto_close:\n            # 1秒后自动关闭\n            timer = QTimer()\n            timer.timeout...."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "54-58",
        "file2": "services\\ui_utils.py",
        "lines2": "84-88",
        "block_hash": "583573cbbb5d3b86d4dfa0a9ff972b45",
        "content": "            # 1秒后自动关闭\n            timer = QTimer()\n            timer.timeout.connect(msg_box.accept)..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "55-59",
        "file2": "services\\ui_utils.py",
        "lines2": "85-89",
        "block_hash": "460c1e9f39d549346b6bbbf3f771d923",
        "content": "            timer = QTimer()\n            timer.timeout.connect(msg_box.accept)\n            timer.sta..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "56-60",
        "file2": "services\\ui_utils.py",
        "lines2": "86-90",
        "block_hash": "b43aca21fcaa3cf274b21abcafbc54eb",
        "content": "            timer.timeout.connect(msg_box.accept)\n            timer.start(1000)  # 1秒\n            ms..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "57-61",
        "file2": "services\\ui_utils.py",
        "lines2": "87-91",
        "block_hash": "b80eac5563b68401da7dfca5404c16d8",
        "content": "            timer.start(1000)  # 1秒\n            msg_box.exec_()\n            timer.stop()\n        els..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "58-62",
        "file2": "services\\ui_utils.py",
        "lines2": "88-92",
        "block_hash": "0a764d13fd60c0f8e009bf26e780907f",
        "content": "            msg_box.exec_()\n            timer.stop()\n        else:\n            msg_box.exec_()\n    "
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "92-96",
        "file2": "services\\ui_utils.py",
        "lines2": "93-97",
        "block_hash": "3859e9b6a85f3aa11e8c32f0ae0a4a99",
        "content": "    @staticmethod\n    def show_info(parent, title, message, auto_close=True):\n        \"\"\"显示信息消息 - 默认..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "51-55",
        "file2": "services\\ui_utils.py",
        "lines2": "96-100",
        "block_hash": "a1cdc3d7be599c944ea7bd945d22dc32",
        "content": "        msg_box = MessageManager._create_message_box(parent, title, message, QMessageBox.Information..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "52-56",
        "file2": "services\\ui_utils.py",
        "lines2": "97-101",
        "block_hash": "ab72a25f4f3ec2b2dcd342108d879882",
        "content": "        \n        if auto_close:\n            # 1秒后自动关闭\n            timer = QTimer()\n            timer..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "53-57",
        "file2": "services\\ui_utils.py",
        "lines2": "98-102",
        "block_hash": "84bbfa1d8799bebb438f62484d9782f6",
        "content": "        if auto_close:\n            # 1秒后自动关闭\n            timer = QTimer()\n            timer.timeout...."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "54-58",
        "file2": "services\\ui_utils.py",
        "lines2": "99-103",
        "block_hash": "583573cbbb5d3b86d4dfa0a9ff972b45",
        "content": "            # 1秒后自动关闭\n            timer = QTimer()\n            timer.timeout.connect(msg_box.accept)..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "55-59",
        "file2": "services\\ui_utils.py",
        "lines2": "100-104",
        "block_hash": "460c1e9f39d549346b6bbbf3f771d923",
        "content": "            timer = QTimer()\n            timer.timeout.connect(msg_box.accept)\n            timer.sta..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "56-60",
        "file2": "services\\ui_utils.py",
        "lines2": "101-105",
        "block_hash": "b43aca21fcaa3cf274b21abcafbc54eb",
        "content": "            timer.timeout.connect(msg_box.accept)\n            timer.start(1000)  # 1秒\n            ms..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "57-61",
        "file2": "services\\ui_utils.py",
        "lines2": "102-106",
        "block_hash": "b80eac5563b68401da7dfca5404c16d8",
        "content": "            timer.start(1000)  # 1秒\n            msg_box.exec_()\n            timer.stop()\n        els..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "58-62",
        "file2": "services\\ui_utils.py",
        "lines2": "103-107",
        "block_hash": "0a764d13fd60c0f8e009bf26e780907f",
        "content": "            msg_box.exec_()\n            timer.stop()\n        else:\n            msg_box.exec_()\n"
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "110-114",
        "file2": "services\\ui_utils.py",
        "lines2": "111-115",
        "block_hash": "841c6861852be09a7cd173d49af56c5f",
        "content": "    @staticmethod\n    def should_show_coupons(ui_state: str) -> bool:\n        \"\"\"\n        判断是否应该显示优惠..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "124-128",
        "file2": "services\\ui_utils.py",
        "lines2": "125-129",
        "block_hash": "646f0f340ea13254a39dae5cb901f270",
        "content": "    @staticmethod\n    def clear_coupons_if_needed(ui_state: str, clear_callback) -> None:\n        \"\"..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "167-171",
        "file2": "services\\ui_utils.py",
        "lines2": "168-172",
        "block_hash": "3478c9b3fc055587999e30c0d39b1b6a",
        "content": "    @staticmethod\n    def should_show_success_popup(event_name: str) -> bool:\n        \"\"\"\n        判断..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "175-179",
        "file2": "services\\ui_utils.py",
        "lines2": "176-180",
        "block_hash": "fd2e5fe674fd38aecdca29a8ea00181d",
        "content": "        Returns:\n            bool: 是否显示弹窗\n        \"\"\"\n        return UIConstants.SUCCESS_POPUP_EVENT..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "183-187",
        "file2": "services\\ui_utils.py",
        "lines2": "184-188",
        "block_hash": "9f5e8e50ea1f56cc15830ea811867f53",
        "content": "    @staticmethod\n    def center_window(window, width: int = 400, height: int = 300) -> None:\n      ..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "197-201",
        "file2": "services\\ui_utils.py",
        "lines2": "198-202",
        "block_hash": "6eb777aa19d66f2dbe5f4532c22408e9",
        "content": "            window.resize(width, height)\n\n            # 获取屏幕尺寸\n            screen = QDesktopWidget()..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "202-206",
        "file2": "services\\ui_utils.py",
        "lines2": "203-207",
        "block_hash": "db8117cbd76176741186cba23f82804a",
        "content": "            # 计算居中位置\n            x = (screen.width() - width) // 2\n            y = (screen.height() ..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "206-210",
        "file2": "services\\ui_utils.py",
        "lines2": "207-211",
        "block_hash": "873d64f1eb061c6bba86c030caeb8296",
        "content": "            # 设置窗口位置\n            window.move(x, y)\n        except Exception as e:\n            print(..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "211-215",
        "file2": "services\\ui_utils.py",
        "lines2": "212-216",
        "block_hash": "63b21662492b76e884652e62bcf92672",
        "content": "    @staticmethod\n    def apply_button_style(button, style='primary'):\n        \"\"\"\n        为PyQt5按钮应..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "252-256",
        "file2": "services\\ui_utils.py",
        "lines2": "253-257",
        "block_hash": "54c6eaed51db8fd1b442463684700efb",
        "content": "# 模块级便捷函数\ndef show_info(parent, title, message):\n    \"\"\"便捷的信息提示函数\"\"\"\n    MessageManager.show_info(pa..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "273-277",
        "file2": "services\\ui_utils.py",
        "lines2": "274-278",
        "block_hash": "c5d5436224f860b2bf630aae561e4c5a",
        "content": "    # 测试常量\n    print(f\"主色调: {UIConstants.COLORS['PRIMARY']}\")\n    print(f\"是否显示登录成功弹窗: {UIConstants.s..."
      },
      {
        "file1": "services\\ui_utils.py",
        "lines1": "273-277",
        "file2": "services\\ui_utils.py",
        "lines2": "275-279",
        "block_hash": "c5d5436224f860b2bf630aae561e4c5a",
        "content": "    print(f\"主色调: {UIConstants.COLORS['PRIMARY']}\")\n    print(f\"是否显示登录成功弹窗: {UIConstants.should_show_..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "16-20",
        "file2": "ui\\login_window.py",
        "lines2": "17-21",
        "block_hash": "c3109e2438b286868e2d0c2c370b6e07",
        "content": "sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom services.auth_ser..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "61-65",
        "file2": "ui\\login_window.py",
        "lines2": "40-44",
        "block_hash": "887f91a5ba992c770bb7ba19b9af3b0f",
        "content": "    \n    # 信号定义\n    login_success = pyqtSignal(dict)  # 登录成功信号，传递用户信息\n    \n    def __init__(self):"
      },
      {
        "file1": "main_modular.py",
        "lines1": "62-66",
        "file2": "ui\\login_window.py",
        "lines2": "41-45",
        "block_hash": "f5a8f62bb05a49844e8424bfc9c2347b",
        "content": "    # 信号定义\n    login_success = pyqtSignal(dict)  # 登录成功信号，传递用户信息\n    \n    def __init__(self):\n      ..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "58-62",
        "file2": "ui\\login_window.py",
        "lines2": "59-63",
        "block_hash": "fddb202bf4cc17a47a843c7f559e392f",
        "content": "    def _safe_login(self):\n        \"\"\"安全登录方法 - 防止意外触发\"\"\"\n        print(\"[登录窗口] _safe_login() 被调用\")\n\n..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "66-70",
        "file2": "ui\\login_window.py",
        "lines2": "67-71",
        "block_hash": "fb0d88a3397313ab76928499d5fdf858",
        "content": "        if not self.login_button.isEnabled():\n            return\n\n        self.login()\n"
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "80-84",
        "file2": "ui\\login_window.py",
        "lines2": "81-85",
        "block_hash": "d796b8ada0ea4e488d826bd2cf2550ae",
        "content": "        # 创建主布局\n        main_layout = QVBoxLayout()\n        main_layout.setSpacing(18)  # 进一步减少间距\n  ..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "80-84",
        "file2": "ui\\login_window.py",
        "lines2": "82-86",
        "block_hash": "d796b8ada0ea4e488d826bd2cf2550ae",
        "content": "        main_layout = QVBoxLayout()\n        main_layout.setSpacing(18)  # 进一步减少间距\n        main_layou..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "123-127",
        "file2": "ui\\login_window.py",
        "lines2": "124-128",
        "block_hash": "8f2f3ba6efa05a6d8b6c3bef33c9c638",
        "content": "        # 回车键登录 - 延迟连接，防止自动触发\n        # self.phone_input.returnPressed.connect(self.login)  # 暂时禁用\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "268-272",
        "file2": "ui\\login_window.py",
        "lines2": "141-145",
        "block_hash": "10fafcf495a24b8ff488793da8f7a7b2",
        "content": "            }\n            QPushButton:hover {\n                background-color: #2980b9;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "269-273",
        "file2": "ui\\login_window.py",
        "lines2": "142-146",
        "block_hash": "606922a82d919620c6f634ef053de3e7",
        "content": "            QPushButton:hover {\n                background-color: #2980b9;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "270-274",
        "file2": "ui\\login_window.py",
        "lines2": "143-147",
        "block_hash": "8ca4c9a0a244159c95622da30c1646da",
        "content": "                background-color: #2980b9;\n            }\n            QPushButton:pressed {\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "377-381",
        "file2": "ui\\login_window.py",
        "lines2": "144-148",
        "block_hash": "60d79e098548f48645eb1d3dc7110055",
        "content": "            }\n            QPushButton:pressed {\n                background-color: #21618c;\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "378-382",
        "file2": "ui\\login_window.py",
        "lines2": "145-149",
        "block_hash": "005022cf582f937432aaba34c1727937",
        "content": "            QPushButton:pressed {\n                background-color: #21618c;\n            }\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "379-383",
        "file2": "ui\\login_window.py",
        "lines2": "146-150",
        "block_hash": "fb018814293230b515d46f9d5d32f776",
        "content": "                background-color: #21618c;\n            }\n            QPushButton:disabled {\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "380-384",
        "file2": "ui\\login_window.py",
        "lines2": "147-151",
        "block_hash": "21600f8931c6a9aaf03f7d862879586e",
        "content": "            }\n            QPushButton:disabled {\n                background-color: #bdc3c7;\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "381-385",
        "file2": "ui\\login_window.py",
        "lines2": "148-152",
        "block_hash": "fdf1ccdd570e0cbf755b138995cc8bb5",
        "content": "            QPushButton:disabled {\n                background-color: #bdc3c7;\n                color:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "268-272",
        "file2": "ui\\login_window.py",
        "lines2": "234-238",
        "block_hash": "10fafcf495a24b8ff488793da8f7a7b2",
        "content": "            }\n            QPushButton:hover {\n                background-color: #5a6268;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "269-273",
        "file2": "ui\\login_window.py",
        "lines2": "235-239",
        "block_hash": "606922a82d919620c6f634ef053de3e7",
        "content": "            QPushButton:hover {\n                background-color: #5a6268;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "270-274",
        "file2": "ui\\login_window.py",
        "lines2": "236-240",
        "block_hash": "8ca4c9a0a244159c95622da30c1646da",
        "content": "                background-color: #5a6268;\n            }\n            QPushButton:pressed {\n         ..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "254-258",
        "file2": "ui\\login_window.py",
        "lines2": "255-259",
        "block_hash": "320c7b28c3bfa6306e3cc4bd9c55a94b",
        "content": "        self.setLayout(main_layout)\n        \n        # 设置默认焦点到手机号输入框\n        QTimer.singleShot(100, ..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "291-295",
        "file2": "ui\\login_window.py",
        "lines2": "292-296",
        "block_hash": "5b3756e78c544d87873110c4de7b0357",
        "content": "            history = {\n                'last_phone': phone,\n                'last_login_time': curr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "651-655",
        "file2": "ui\\login_window.py",
        "lines2": "299-303",
        "block_hash": "ef71fe70af4219aa81c58074db044260",
        "content": "            \n        except Exception as e:\n            pass\n\n    def center_window(self):"
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "312-316",
        "file2": "ui\\login_window.py",
        "lines2": "313-317",
        "block_hash": "1707b4f654a00561db12c36a441977b1",
        "content": "            # 计算中央位置\n            x = screen_rect.x() + (screen_rect.width() - window_size.width()) /..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "320-324",
        "file2": "ui\\login_window.py",
        "lines2": "321-325",
        "block_hash": "41e4558f0bc30149e7dbdf59a0d54dcd",
        "content": "            self.move(x, y)\n            print(f\"[登录窗口] 窗口已居中到主屏幕: ({x}, {y})\")\n\n        except Excep..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "327-331",
        "file2": "ui\\login_window.py",
        "lines2": "328-332",
        "block_hash": "ca855c1bc2f6a523735a2e4586303f77",
        "content": "    def copy_machine_code(self):\n        \"\"\"复制机器码到剪贴板\"\"\"\n        clipboard = QApplication.clipboard(..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "332-336",
        "file2": "ui\\login_window.py",
        "lines2": "333-337",
        "block_hash": "da8f6d4063c3fdc19ddce697fda646c0",
        "content": "        # 临时改变按钮文本提示复制成功\n        copy_button = self.sender()\n        original_text = copy_button.tex..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "332-336",
        "file2": "ui\\login_window.py",
        "lines2": "334-338",
        "block_hash": "da8f6d4063c3fdc19ddce697fda646c0",
        "content": "        copy_button = self.sender()\n        original_text = copy_button.text()\n        original_styl..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "337-341",
        "file2": "ui\\login_window.py",
        "lines2": "338-342",
        "block_hash": "99e8951f58179b07045b9cb5566b050f",
        "content": "        # 设置成功状态\n        copy_button.setText(\"✅ 已复制!\")\n        success_style = original_style.replac..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "342-346",
        "file2": "ui\\login_window.py",
        "lines2": "343-347",
        "block_hash": "2641a337b17cfeff4018a289f2cbdf02",
        "content": "        QTimer.singleShot(2500, lambda: [\n            copy_button.setText(original_text),\n          ..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "350-354",
        "file2": "ui\\login_window.py",
        "lines2": "351-355",
        "block_hash": "849e951589c931599efe50930a2ce9e8",
        "content": "        if not self.auto_login_prevented:\n            return\n\n        phone = self.phone_input.text(..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "355-359",
        "file2": "ui\\login_window.py",
        "lines2": "356-360",
        "block_hash": "025f15346f4fb1ae2105101b65414ac5",
        "content": "        if not phone:\n            MessageManager.show_warning(self, \"输入错误\", \"请输入手机号\")\n            se..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "360-364",
        "file2": "ui\\login_window.py",
        "lines2": "361-365",
        "block_hash": "cec3f4c383c9ec929b796cba192cb63b",
        "content": "        if len(phone) != 11 or not phone.isdigit():\n            MessageManager.show_warning(self, \"输..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "367-371",
        "file2": "ui\\login_window.py",
        "lines2": "368-372",
        "block_hash": "64500b47776920515eac719d0bd07b71",
        "content": "        # 启动登录线程\n        self.login_thread = LoginThread(phone)\n        self.login_thread.login_resu..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "372-376",
        "file2": "ui\\login_window.py",
        "lines2": "373-377",
        "block_hash": "55f03f2de010b915b10a10e2e76f361b",
        "content": "    @pyqtSlot(bool, str, object)\n    def on_login_result(self, success: bool, message: str, user_inf..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "377-381",
        "file2": "ui\\login_window.py",
        "lines2": "378-382",
        "block_hash": "8dcdc506450051cfdc6106bf03d0d9b1",
        "content": "        if success:\n            # 登录成功 - 保存登录历史\n            phone = self.phone_input.text().strip()\n..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "383-387",
        "file2": "ui\\login_window.py",
        "lines2": "384-388",
        "block_hash": "552a7660aecf55fbc53e7ac6d0046826",
        "content": "            if UIConstants.should_show_success_popup(\"login_success\"):\n                user_name = u..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "404-408",
        "file2": "ui\\login_window.py",
        "lines2": "405-409",
        "block_hash": "c22318eaf37911a08ec5416346c028ae",
        "content": "            user_friendly_message = self._get_user_friendly_error_message(message)\n            Messa..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "409-413",
        "file2": "ui\\login_window.py",
        "lines2": "410-414",
        "block_hash": "03e687a5e8c3901a009ee132f96a53b3",
        "content": "    def _get_user_friendly_error_message(self, server_message: str) -> str:\n        \"\"\"将服务器错误信息转换为用户..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "439-443",
        "file2": "ui\\login_window.py",
        "lines2": "440-444",
        "block_hash": "0799c7180c443351dc97897cacddfcee",
        "content": "        elif \"timeout\" in message_lower or \"超时\" in server_message:\n            return \"连接超时\\n\\n请检查网络..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "446-450",
        "file2": "ui\\login_window.py",
        "lines2": "447-451",
        "block_hash": "83afaae9ce5e9c3a6fb64dc4426924da",
        "content": "    def set_login_state(self, is_logging: bool):\n        \"\"\"设置登录状态\"\"\"\n        self.login_button.setE..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "468-472",
        "file2": "ui\\login_window.py",
        "lines2": "469-473",
        "block_hash": "73a0fbce12de03d8557f799a297258ee",
        "content": "def main():\n    \"\"\"测试登录窗口\"\"\"\n    app = QApplication(sys.argv)\n    \n    # 设置应用程序图标和样式"
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "473-477",
        "file2": "ui\\login_window.py",
        "lines2": "474-478",
        "block_hash": "2d5cd2b85c2b4b89439fd5218c89a7c1",
        "content": "    app.setApplicationName(\"乐影票务系统\")\n    app.setApplicationVersion(\"1.0.0\")\n    \n    login_window = ..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "476-480",
        "file2": "ui\\login_window.py",
        "lines2": "477-481",
        "block_hash": "77965dbe874a486fc2875e308c317555",
        "content": "    login_window = LoginWindow()\n    \n    def on_login_success(user_info):\n        app.quit()\n    "
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "481-485",
        "file2": "ui\\login_window.py",
        "lines2": "482-486",
        "block_hash": "98875be9103ec5a68331f0ddc243b8bd",
        "content": "    login_window.login_success.connect(on_login_success)\n    login_window.show()\n    \n    sys.exit(a..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "22-26",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "23-27",
        "block_hash": "049944b85651ed6540e40e7c57175497",
        "content": "    def __init__(self, parent=None, on_account_selected=None, on_set_main=None, \n                 on..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "27-31",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "28-32",
        "block_hash": "07c9204b1337ea4ebb89248673086ef4",
        "content": "        self.on_account_selected = on_account_selected\n        self.on_set_main = on_set_main\n      ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "45-49",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "46-50",
        "block_hash": "b6f958add0996fc491e01b3e2f8c81ff",
        "content": "        # 账号树形列表\n        self.account_tree = QTreeWidget()\n        self.account_tree.setHeaderLabels..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "45-49",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "47-51",
        "block_hash": "b6f958add0996fc491e01b3e2f8c81ff",
        "content": "        self.account_tree = QTreeWidget()\n        self.account_tree.setHeaderLabels([\"手机号\", \"状态\", \"主..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "51-55",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "52-56",
        "block_hash": "276327c0fe3a6a5a9ad184af009de38d",
        "content": "        header = self.account_tree.header()\n        header.setSectionResizeMode(0, QHeaderView.Resiz..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "59-63",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "60-64",
        "block_hash": "95c0bbd36dab7a05f569a58831a12153",
        "content": "        # 绑定事件\n        self.account_tree.itemClicked.connect(self._on_item_clicked)\n        self.acc..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "59-63",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "61-65",
        "block_hash": "95c0bbd36dab7a05f569a58831a12153",
        "content": "        self.account_tree.itemClicked.connect(self._on_item_clicked)\n        self.account_tree.setCo..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "94-98",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "95-99",
        "block_hash": "aa63b44381999c2d27a5cfa8b99863ba",
        "content": "        layout.addWidget(self.account_tree)\n        \n        # 按钮区域\n        button_layout = QHBoxLay..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "124-128",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "125-129",
        "block_hash": "4279bb06b327140351706c5d4994cde5",
        "content": "        self.status_label = QLabel(\"请选择账号\")\n        self.status_label.setFont(QFont(\"微软雅黑\", 9))\n    ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "171-175",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "172-176",
        "block_hash": "6bb2e541721fdd37a8c2ae0f9545a1cd",
        "content": "        except Exception as e:\n            print(f\"加载账号数据失败: {e}\")\n            self.accounts_data = ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "183-187",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "184-188",
        "block_hash": "e25a90f669009cef0befa3a3d57b114f",
        "content": "            # 手机号\n            phone = account.get('phone', 'Unknown')\n            item.setText(0, ph..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "187-191",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "188-192",
        "block_hash": "df8407592282b27c18d80eeff1674a8c",
        "content": "            # 状态\n            status = \"在线\" if account.get('token') else \"离线\"\n            item.setTex..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "191-195",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "192-196",
        "block_hash": "15cc502054b789dfbc424d2e43e4964c",
        "content": "            # 主账号标记\n            is_main = account.get('is_main', False)\n            main_text = \"是\" ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "191-195",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "193-197",
        "block_hash": "15cc502054b789dfbc424d2e43e4964c",
        "content": "            is_main = account.get('is_main', False)\n            main_text = \"是\" if is_main else \"\"\n ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "199-203",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "200-204",
        "block_hash": "6171c29af5ea196035b9dbc236e547b4",
        "content": "            # 设置样式\n            if is_main:\n                item.setFont(0, QFont(\"微软雅黑\", 10, QFont.B..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "240-244",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "241-245",
        "block_hash": "53a7c2d9aee808bd22fccf02ad121554",
        "content": "        # 设置为主账号\n        set_main_action = menu.addAction(\"设置为主账号\")\n        set_main_action.triggere..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "244-248",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "245-249",
        "block_hash": "491bd80a71b0599e0bc0d23e2e546fdf",
        "content": "        # 删除账号\n        delete_action = menu.addAction(\"删除账号\")\n        delete_action.triggered.connec..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "249-253",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "250-254",
        "block_hash": "b4aa5c734476ee3391ccc24afcf5c838",
        "content": "        copy_phone_action = menu.addAction(\"复制手机号\")\n        copy_phone_action.triggered.connect(lamb..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "278-282",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "279-283",
        "block_hash": "74bba4d80c549258ec65a9a86619c0d5",
        "content": "            if reply == QMessageBox.Yes:\n                # 从数据中移除\n                self.accounts_data..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "286-290",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "287-291",
        "block_hash": "cb4a6b782f5b37caabeae29813c2ace0",
        "content": "                # 刷新显示\n                self._refresh_tree()\n                \n                QMessag..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "295-299",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "296-300",
        "block_hash": "f7cb8594772df8f7a03c29c9ec3f1939",
        "content": "    def _copy_phone(self, account: Dict):\n        \"\"\"复制手机号到剪贴板\"\"\"\n        try:\n            from PyQt..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "304-308",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "305-309",
        "block_hash": "da33f5531408186551bb34138e7fe1d2",
        "content": "            self.status_label.setText(f\"已复制手机号: {phone}\")\n            \n        except Exception as e..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "309-313",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "310-314",
        "block_hash": "b46d4e984d124b6fbcf70f3564e2f91f",
        "content": "    def _save_accounts(self):\n        \"\"\"保存账号数据到文件\"\"\"\n        try:\n            accounts_file = \"data..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "337-341",
        "file2": "ui\\components\\account_list_panel_pyqt5.py",
        "lines2": "338-342",
        "block_hash": "9650c24ca05231b3ced55508efd92d9f",
        "content": "    def refresh_account_list(self):\n        \"\"\"刷新账号列表\"\"\"\n        self._load_accounts()\n        self...."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "22-26",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "29-33",
        "block_hash": "0f92d4e60c3e26b0f0affe06abce4bed",
        "content": "    WEBENGINE_AVAILABLE = False\n    QWebEngineView = None\n    QWebEnginePage = None\n    QWebEnginePr..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "36-40",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "37-41",
        "block_hash": "b21d6b883ef6bdb28a96b73c7953d352",
        "content": "# 只有在WebEngine可用时才定义NetworkInterceptor\nif WEBENGINE_AVAILABLE and QWebEngineUrlRequestInterceptor:\n ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "41-45",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "42-46",
        "block_hash": "84fc6f015f896e16b69dfcf216a4e521",
        "content": "        def __init__(self, callback):\n            super().__init__()\n            self.callback = cal..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "101-105",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "102-106",
        "block_hash": "8a1f0ae825c27be20f156d59ce3c4150",
        "content": "    @staticmethod\n    def extract_auth_params(url):\n        \"\"\"提取认证参数\"\"\"\n        auth_params = {}\n  ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "107-111",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "108-112",
        "block_hash": "2480331eea093be08418e8bad19cbb31",
        "content": "        parsed = urlparse(url)\n        query_params = parse_qs(parsed.query)\n        \n        auth_f..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "131-135",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "132-136",
        "block_hash": "e6b5f335648becf3f872cf3dae578796",
        "content": "    @staticmethod\n    def extract_all_params(url):\n        \"\"\"提取所有参数\"\"\"\n        params = {}\n        "
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "136-140",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "137-141",
        "block_hash": "fe23bafe612728d03ab89ab6e205d869",
        "content": "        # 检查是否为影院API\n        if not ParameterExtractor.is_cinema_api(url):\n            return params..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "140-144",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "141-145",
        "block_hash": "d7998d6dc7c6d400d6690aa84647b3a1",
        "content": "        # 提取基础URL\n        base_url = ParameterExtractor.extract_base_url(url)\n        if base_url:\n ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "140-144",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "142-146",
        "block_hash": "d7998d6dc7c6d400d6690aa84647b3a1",
        "content": "        base_url = ParameterExtractor.extract_base_url(url)\n        if base_url:\n            params[..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "145-149",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "146-150",
        "block_hash": "057b8994b4f3295a607b0e6931d402a1",
        "content": "        # 提取影院ID\n        cinema_id = ParameterExtractor.extract_cinema_id(url)\n        if cinema_id:..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "145-149",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "147-151",
        "block_hash": "057b8994b4f3295a607b0e6931d402a1",
        "content": "        cinema_id = ParameterExtractor.extract_cinema_id(url)\n        if cinema_id:\n            para..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "151-155",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "152-156",
        "block_hash": "f92d08eb7f0991dec7690ce9211f5d18",
        "content": "        auth_params = ParameterExtractor.extract_auth_params(url)\n        params.update(auth_params)..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "172-176",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "173-177",
        "block_hash": "34d7aedcc41a1d839165ffbc7fe7ac9f",
        "content": "    def setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        \n        # 控..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "226-230",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "183-187",
        "block_hash": "3f958ec2cc3f38cc1a2f96cdf658e6ca",
        "content": "            QPushButton {\n                background-color: #4CAF50;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "226-230",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "201-205",
        "block_hash": "3f958ec2cc3f38cc1a2f96cdf658e6ca",
        "content": "            QPushButton {\n                background-color: #f44336;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "184-188",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "202-206",
        "block_hash": "cad8e1a1187704513cbc3f2c6818ae62",
        "content": "                background-color: #f44336;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "185-189",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "203-207",
        "block_hash": "664ed7c5f2ed3065de6b485eaaa69287",
        "content": "                color: white;\n                border: none;\n                padding: 10px 20px;\n    ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "186-190",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "204-208",
        "block_hash": "1a620682309904e0fe9e443d53b650f0",
        "content": "                border: none;\n                padding: 10px 20px;\n                border-radius: 5px..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "187-191",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "205-209",
        "block_hash": "24c8f424fdedf64e9a629c5f73a2d421",
        "content": "                padding: 10px 20px;\n                border-radius: 5px;\n                font-weight:..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "188-192",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "206-210",
        "block_hash": "06cb0b151ae9ccd5da67566ae6b7c9b8",
        "content": "                border-radius: 5px;\n                font-weight: bold;\n                font-size: 14..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "189-193",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "207-211",
        "block_hash": "acef3764b1977791d00a326985e0f636",
        "content": "                font-weight: bold;\n                font-size: 14px;\n            }\n            QPushB..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "190-194",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "208-212",
        "block_hash": "3e2311286e8eb5159217cdb62abb846b",
        "content": "                font-size: 14px;\n            }\n            QPushButton:hover {\n                backg..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "379-383",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "211-215",
        "block_hash": "fb018814293230b515d46f9d5d32f776",
        "content": "                background-color: #da190b;\n            }\n            QPushButton:disabled {\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "380-384",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "212-216",
        "block_hash": "21600f8931c6a9aaf03f7d862879586e",
        "content": "            }\n            QPushButton:disabled {\n                background-color: #cccccc;\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "381-385",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "213-217",
        "block_hash": "fdf1ccdd570e0cbf755b138995cc8bb5",
        "content": "            QPushButton:disabled {\n                background-color: #cccccc;\n                color:..."
      },
      {
        "file1": "ui\\login_window.py",
        "lines1": "226-230",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "222-226",
        "block_hash": "3f958ec2cc3f38cc1a2f96cdf658e6ca",
        "content": "            QPushButton {\n                background-color: #757575;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "184-188",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "223-227",
        "block_hash": "cad8e1a1187704513cbc3f2c6818ae62",
        "content": "                background-color: #757575;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "233-237",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "234-238",
        "block_hash": "17d75cd16226b73022a33e7888f803d3",
        "content": "        control_layout.addWidget(self.start_button)\n        control_layout.addWidget(self.stop_butto..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "238-242",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "239-243",
        "block_hash": "c22faccc2fd99fd06aeeb2c5794d21e1",
        "content": "        # 状态显示\n        self.status_label = QLabel(\"准备就绪 - 点击'开始监听'启动自动参数采集\")\n        self.status_lab..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "281-285",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "282-286",
        "block_hash": "2cbe0bddb53680afb65c9158f27fe9e0",
        "content": "            # 设置网络拦截器\n            self.interceptor = NetworkInterceptor(self.on_request_intercepted)..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "285-289",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "286-290",
        "block_hash": "af707213dd8761c950d1295dfbc7e5fa",
        "content": "            # 创建自定义页面\n            if hasattr(self, 'web_view') and QWebEnginePage:\n                s..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "290-294",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "291-295",
        "block_hash": "551fc0fae0fdd31ab8203ae95c153600",
        "content": "            print(\"[自动浏览器] ✅ 浏览器和网络拦截设置完成\")\n\n        except Exception as e:\n            print(f\"[自动浏..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "302-306",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "303-307",
        "block_hash": "5838a5d495638a300dfdfe8d23fa4311",
        "content": "        self.is_monitoring = True\n        self.request_count = 0\n        self.extracted_params.clear..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "306-310",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "307-311",
        "block_hash": "0d463c6c5b4883364406823f0164d7ee",
        "content": "        # 更新按钮状态\n        self.start_button.setEnabled(False)\n        self.stop_button.setEnabled(Tru..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "360-364",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "361-365",
        "block_hash": "59ece28cc4dbcd9170b6de03976496ed",
        "content": "                    <div style=\"background: #fff3cd; padding: 15px; border-radius: 5px; margin-top: ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "375-379",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "376-380",
        "block_hash": "be9d8a8b5cb4ae6b1ef076b1838f60af",
        "content": "            self.web_view.setHtml(guide_html)\n\n            self.status_changed.emit(\"🎯 监听已启动 - 请参考指南..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "386-390",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "387-391",
        "block_hash": "e6811ff4ed369f9214a792ab33ed7617",
        "content": "    def stop_monitoring(self):\n        \"\"\"停止监听\"\"\"\n        self.is_monitoring = False\n        \n      ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "390-394",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "391-395",
        "block_hash": "8148b7835145a7fddbbf57a45e5f041a",
        "content": "        # 更新按钮状态\n        self.start_button.setEnabled(True)\n        self.stop_button.setEnabled(Fals..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "405-409",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "406-410",
        "block_hash": "32a1c3a386fcc0d68e98146bff7ec3e6",
        "content": "    def on_request_intercepted(self, url, method, count):\n        \"\"\"处理拦截到的网络请求\"\"\"\n        if not se..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "412-416",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "413-417",
        "block_hash": "86145386ace06cc9bff79208c8661866",
        "content": "            self.request_count = count\n            \n            # 提取参数\n            params = Paramete..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "414-418",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "415-419",
        "block_hash": "d6f26799d177767b82afe8fabf4500c0",
        "content": "            # 提取参数\n            params = ParameterExtractor.extract_all_params(url)\n            \n    ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "419-423",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "420-424",
        "block_hash": "062b2d0b38c9517971e6fdbc89d56db2",
        "content": "                self.extracted_params.update(params)\n                \n                # 更新显示\n       ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "425-429",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "426-430",
        "block_hash": "df98ee64c7af499f63b0f20923bff483",
        "content": "                for key, value in params.items():\n                    self.parameter_extracted.emit(..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "430-434",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "431-435",
        "block_hash": "7ddd4b5b717819c47609ef3c57d9cf91",
        "content": "            # 更新状态（每10个请求更新一次，避免频繁更新）\n            if count % 10 == 0:\n                param_count = ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "438-442",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "439-443",
        "block_hash": "6da9b9e71ab07d233907edca086526ea",
        "content": "    def update_params_display(self):\n        \"\"\"更新参数显示\"\"\"\n        if not self.extracted_params:\n    ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "447-451",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "448-452",
        "block_hash": "73caa47884c0b0906e6eefcd774d5a31",
        "content": "            if key in ['token', 'openid'] and len(value) > 12:\n                display_value = value..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "452-456",
        "file2": "ui\\components\\auto_browser.py",
        "lines2": "453-457",
        "block_hash": "ba3cdec2a94371a87ee2caa4521e3368",
        "content": "            display_text += f\"✅ {key}: {display_value}\\n\"\n        \n        self.params_display.clear..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "39-43",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "46-50",
        "block_hash": "48fac530c969e993a9eccf7ebde8108f",
        "content": "    \n    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "52-56",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "53-57",
        "block_hash": "866a62eccee8fb527138c653ddc122ec",
        "content": "        # 字体设置\n        combo_font = QFont(\"微软雅黑\", 10)\n        btn_font = QFont(\"微软雅黑\", 10, QFont.Bol..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "52-56",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "54-58",
        "block_hash": "866a62eccee8fb527138c653ddc122ec",
        "content": "        combo_font = QFont(\"微软雅黑\", 10)\n        btn_font = QFont(\"微软雅黑\", 10, QFont.Bold)\n        labe..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "58-62",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "59-63",
        "block_hash": "6590c83372308af0cf82619f05cdfe4f",
        "content": "        row1 = QFrame()\n        row1_layout = QHBoxLayout(row1)\n        row1_layout.setContentsMargi..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "76-80",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "77-81",
        "block_hash": "241c49651a427f7b6215cb401bc3fd92",
        "content": "        row2 = QFrame()\n        row2_layout = QHBoxLayout(row2)\n        row2_layout.setContentsMargi..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "94-98",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "95-99",
        "block_hash": "8f29e37bf9c9a64cfb098d30a3a11868",
        "content": "        row3 = QFrame()\n        row3_layout = QHBoxLayout(row3)\n        row3_layout.setContentsMargi..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "112-116",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "113-117",
        "block_hash": "3d38a69f414f6c74e389e0d573670e88",
        "content": "        row4 = QFrame()\n        row4_layout = QVBoxLayout(row4)\n        row4_layout.setContentsMargi..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "129-133",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "130-134",
        "block_hash": "375556ca9b6663887b8d71bb9fa5cd50",
        "content": "        # 行5: 操作按钮\n        row5 = QFrame()\n        row5_layout = QHBoxLayout(row5)\n        row5_layo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "268-272",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "201-205",
        "block_hash": "10fafcf495a24b8ff488793da8f7a7b2",
        "content": "            }\n            QPushButton:hover {\n                background-color: #005a99;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "269-273",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "202-206",
        "block_hash": "606922a82d919620c6f634ef053de3e7",
        "content": "            QPushButton:hover {\n                background-color: #005a99;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "270-274",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "203-207",
        "block_hash": "8ca4c9a0a244159c95622da30c1646da",
        "content": "                background-color: #005a99;\n            }\n            QPushButton:pressed {\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "377-381",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "204-208",
        "block_hash": "60d79e098548f48645eb1d3dc7110055",
        "content": "            }\n            QPushButton:pressed {\n                background-color: #004d7a;\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "378-382",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "205-209",
        "block_hash": "005022cf582f937432aaba34c1727937",
        "content": "            QPushButton:pressed {\n                background-color: #004d7a;\n            }\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "379-383",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "206-210",
        "block_hash": "fb018814293230b515d46f9d5d32f776",
        "content": "                background-color: #004d7a;\n            }\n            QPushButton:disabled {\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "380-384",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "207-211",
        "block_hash": "21600f8931c6a9aaf03f7d862879586e",
        "content": "            }\n            QPushButton:disabled {\n                background-color: #bdc3c7;\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "381-385",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "208-212",
        "block_hash": "fdf1ccdd570e0cbf755b138995cc8bb5",
        "content": "            QPushButton:disabled {\n                background-color: #bdc3c7;\n                color:..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "219-223",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "220-224",
        "block_hash": "e65dd5a57afff32c006f0ba72aa52b59",
        "content": "            self.cinema_combo.clear()\n            self.cinema_combo.addItems(cinema_names)\n         ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "258-262",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "259-263",
        "block_hash": "5fbba14eb7a5da46bd84cbae4b0a3f5e",
        "content": "    def refresh_cinema_dropdown(self):\n        \"\"\"刷新影院下拉框\"\"\"\n        self._load_cinemas()\n    \n    #..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "266-270",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "267-271",
        "block_hash": "347714defd92e988209d176fa34d8c49",
        "content": "    def on_cinema_select(self, cinema_name: str):\n        \"\"\"影院下拉框选中事件，加载对应影院的影片和场次数据\"\"\"\n        if ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "277-281",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "278-282",
        "block_hash": "c728325b92d236f80f66e6ba163e2c91",
        "content": "        current_index = self.cinema_combo.currentIndex()\n        if current_index < 0 or current_ind..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "282-286",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "283-287",
        "block_hash": "04aa3f4093743558d440ce9bada7f367",
        "content": "        selected = self.cinemas[current_index]\n        base_url = selected['base_url']\n        cinem..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "287-291",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "288-292",
        "block_hash": "d35d1a7f334f2485ab86929ab52ba726",
        "content": "        # 获取当前账号\n        print(\"[DEBUG] 正在调用 get_current_account()...\")\n        current_account = se..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "292-296",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "293-297",
        "block_hash": "7433a7a74889d097aff6236edd47c957",
        "content": "        if not current_account:\n            print(\"[DEBUG] current_account为空，显示登录提示\")\n            QM..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "297-301",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "298-302",
        "block_hash": "eaa36987d41856bd5ee0e20b455631bf",
        "content": "        print(\"[DEBUG] 账号验证通过，继续执行...\")\n        openid = current_account.get('openid', '')\n        t..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "318-322",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "319-323",
        "block_hash": "9e3d23a801a572886956e8688ad9fc9a",
        "content": "            # 自动联动：选中第一个影片，触发影片选择事件\n            if film_names:\n                self.movie_combo.setC..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "318-322",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "320-324",
        "block_hash": "9e3d23a801a572886956e8688ad9fc9a",
        "content": "            if film_names:\n                self.movie_combo.setCurrentIndex(0)\n                # on_..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "322-326",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "323-327",
        "block_hash": "5d9da1115b06d7e54b159880b5ee1ab7",
        "content": "            \n            # 触发影院变化回调\n            if self.on_cinema_changed:\n                self.on_c..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "331-335",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "332-336",
        "block_hash": "40e89eb36bf11a08b15fd40a8b729abb",
        "content": "    def on_movie_select(self, film_name: str):\n        \"\"\"影片下拉框选中事件，加载对应影片的日期和场次数据\"\"\"\n        if not..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "273-277",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "338-342",
        "block_hash": "1a954a09ef77d1ea87eb63972f1cd949",
        "content": "        \n        # 清空券列表\n        if hasattr(self.main_window, '_clear_coupons_impl'):\n            se..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "350-354",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "351-355",
        "block_hash": "68cd56687586d87af436588de46afafb",
        "content": "        # 更新日期下拉框\n        self.date_combo.clear()\n        self.date_combo.addItems(date_list)\n      ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "354-358",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "355-359",
        "block_hash": "76c58a0e41e7751912367534ce17ee11",
        "content": "        # 清空场次下拉框\n        self.session_combo.clear()\n        self.current_film_key = film_key\n      ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "363-367",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "364-368",
        "block_hash": "b7033fc7c3fe8cca954a1ab74fd65412",
        "content": "    def on_date_select(self, date_str: str):\n        \"\"\"日期下拉框选中事件，加载对应日期的场次数据\"\"\"\n        if not date..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "273-277",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "370-374",
        "block_hash": "1a954a09ef77d1ea87eb63972f1cd949",
        "content": "        \n        # 清空券列表\n        if hasattr(self.main_window, '_clear_coupons_impl'):\n            se..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "378-382",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "379-383",
        "block_hash": "d5ecc288684b9c3c16c2d0c460327ad5",
        "content": "        sessions = self.shows[self.current_film_key][date_str]\n        session_list = []\n        \n  ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "383-387",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "384-388",
        "block_hash": "3fd7459ae1079cc64f3111cdcb8e02ba",
        "content": "            start_time = session.get('q', '')  # 开始时间\n            hall_name = session.get('t', '')  ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "388-392",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "389-393",
        "block_hash": "eed371ebb87f5eaf324062dd782366e0",
        "content": "            # 构建显示格式：时间 厅名 厅信息 票价:价格\n            session_display = f\"{start_time} {hall_name} {hall_..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "392-396",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "393-397",
        "block_hash": "2269e1b2b80ebb3c25f956e1ffadbefe",
        "content": "        # 更新场次下拉框\n        self.session_combo.clear()\n        self.session_combo.addItems(session_lis..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "396-400",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "397-401",
        "block_hash": "4d03a0649614f8e86d83f919d726c678",
        "content": "        # 自动选中第一个场次\n        if session_list:\n            self.session_combo.setCurrentIndex(0)\n     ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "401-405",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "402-406",
        "block_hash": "59695b7208cc0033e82e6d29877d4406",
        "content": "    def on_session_select(self, session_str: str):\n        \"\"\"场次下拉框选中事件，加载座位图\"\"\"\n        if not sess..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "273-277",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "408-412",
        "block_hash": "1a954a09ef77d1ea87eb63972f1cd949",
        "content": "        \n        # 清空券列表\n        if hasattr(self.main_window, '_clear_coupons_impl'):\n            se..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "420-424",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "421-425",
        "block_hash": "5a55f93c95a3364cff3dddff6c8d8d9d",
        "content": "        try:\n            sessions = self.shows[self.current_film_key][current_date]\n            if s..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "428-432",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "429-433",
        "block_hash": "ebbee38963ae333fc2ced9277d56f80c",
        "content": "            current_account = self.get_current_account()\n            if current_account:\n           ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "434-438",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "435-439",
        "block_hash": "656ad1cf024063ca2ea6bb022303100f",
        "content": "            self._load_seat_info(selected_session)\n            \n        except Exception as e:\n     ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "454-458",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "455-459",
        "block_hash": "fe74106970dee0a19cd904e5ae9ead5c",
        "content": "            openid = current_account.get('openid', '')\n            token = current_account.get('toke..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "465-469",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "466-470",
        "block_hash": "65a8b6afb9abe8cd5a09e8b4f50cefee",
        "content": "            # 获取影片No\n            filmNo = ''\n            if self.current_film_key and self.current_f..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "474-478",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "475-479",
        "block_hash": "d52dc5fc0c33fa5e96361485f8a7e5c5",
        "content": "            print(f\"[DEBUG] 获取座位信息参数:\")\n            print(f\"  showCode={showCode}, hallCode={hallCod..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "480-484",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "481-485",
        "block_hash": "90807976fc71cbfb87b65c16ca015d01",
        "content": "            seat_data = get_plan_seat_info(\n                base_url, showCode, hallCode, filmCode, ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "518-522",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "519-523",
        "block_hash": "ad00c5524e20197b71d1ad0919daf9dd",
        "content": "        if not self.session_combo.currentText():\n            QMessageBox.warning(self, \"场次提示\", \"请先选择..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "522-526",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "523-527",
        "block_hash": "6dca17be05613c3ba3ab860479e418a3",
        "content": "        # 重新加载当前场次的座位信息\n        print(f\"[影院面板] 用户点击选座按钮，刷新座位图\")\n        self.on_session_select(self...."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "537-541",
        "file2": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines2": "538-542",
        "block_hash": "fbf278943f577bf1bb06c3e42d489dfc",
        "content": "    def get_current_session_info(self):\n        \"\"\"获取当前选中的场次信息\"\"\"\n        if not self.current_film_k..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "7-11",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "8-12",
        "block_hash": "f5440d2457e54c8e28150435d57c58b1",
        "content": "import re\nimport json\nfrom urllib.parse import urlparse, parse_qs\nfrom typing import Dict, Optional,..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "15-19",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "16-20",
        "block_hash": "f9a8372e0b6e477ea1a67d161fda8019",
        "content": "    @staticmethod\n    def parse_curl_command(curl_command: str) -> Dict[str, str]:\n        \"\"\"\n     ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "28-32",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "29-33",
        "block_hash": "db298d3cfee40c005219a676f2e7927c",
        "content": "        try:\n            # 1. 提取URL\n            url = CurlParser.extract_url(curl_command)\n         ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "33-37",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "34-38",
        "block_hash": "62c8452f1bed7901da51b6b50089fbc8",
        "content": "                parsed_url = urlparse(url)\n                if parsed_url.scheme and parsed_url.netlo..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "37-41",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "38-42",
        "block_hash": "21180b9e2fe6427b66d381dc5c2d8c24",
        "content": "                # 提取URL参数\n                url_params = CurlParser.extract_url_params(url)\n          ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "41-45",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "42-46",
        "block_hash": "98fba0a9fc43270740de96082444ab26",
        "content": "            # 2. 提取请求头中的参数\n            header_params = CurlParser.extract_header_params(curl_command..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "46-50",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "47-51",
        "block_hash": "e5fbd1fcd52e62558be5e7cbbfacdfa3",
        "content": "            params = CurlParser.validate_and_clean_params(params)\n            \n        except Except..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "48-52",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "49-53",
        "block_hash": "936fdf9a113cb9f3f70593d54ca97fc3",
        "content": "        except Exception as e:\n            print(f\"[curl解析] 解析错误: {e}\")\n        \n        return para..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "64-68",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "65-69",
        "block_hash": "e1bbca5a29abb07ae84010f55dd5e9d0",
        "content": "        for pattern in patterns:\n            match = re.search(pattern, curl_command, re.IGNORECASE)..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "71-75",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "72-76",
        "block_hash": "a43e9c06642d8863886b29786186035a",
        "content": "    @staticmethod\n    def extract_url_params(url: str) -> Dict[str, str]:\n        \"\"\"从URL中提取参数\"\"\"\n  ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "76-80",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "77-81",
        "block_hash": "3e48726cc779144915302ce33252f90c",
        "content": "        try:\n            parsed_url = urlparse(url)\n            query_params = parse_qs(parsed_url.q..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "97-101",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "98-102",
        "block_hash": "f1aa875521f22011c8d7519a7f4df42d",
        "content": "            for key, values in query_params.items():\n                if values and values[0]:  # 确保有..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "101-105",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "102-106",
        "block_hash": "5ec26a3841f94f657b52212e64de0796",
        "content": "                    # 映射参数名\n                    mapped_key = param_mapping.get(key.lower(), key)\n   ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "109-113",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "110-114",
        "block_hash": "2e998ad4c6f5f7f85304253ae8022c39",
        "content": "        except Exception as e:\n            print(f\"[curl解析] URL参数提取错误: {e}\")\n        \n        return..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "114-118",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "115-119",
        "block_hash": "121e28e5932b951103731476da41710d",
        "content": "    @staticmethod\n    def extract_header_params(curl_command: str) -> Dict[str, str]:\n        \"\"\"从请求..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "119-123",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "120-124",
        "block_hash": "948fa5da85661b780cb7e73d16e3d8de",
        "content": "        try:\n            # 提取所有-H参数\n            header_pattern = r\"-H\\s+['\\\"]([^'\\\"]+)['\\\"]\"\n       ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "133-137",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "134-138",
        "block_hash": "cb9ae7055cc4ce0cee607dfac3e96428",
        "content": "                        if 'bearer' in value.lower():\n                            token = value.repl..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "150-154",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "151-155",
        "block_hash": "9d0d441982f569cc151cc90337f2b9f2",
        "content": "        except Exception as e:\n            print(f\"[curl解析] 请求头参数提取错误: {e}\")\n        \n        return..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "155-159",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "156-160",
        "block_hash": "e9216f0b66dfcedab45ea36f2a571866",
        "content": "    @staticmethod\n    def validate_and_clean_params(params: Dict[str, str]) -> Dict[str, str]:\n     ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "167-171",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "168-172",
        "block_hash": "1b69f6257d18bcec86c5c780c9d0bf29",
        "content": "            if key == 'cinema_id':\n                # 影院ID应该是字母数字组合，长度3-20\n                if re.matc..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "169-173",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "170-174",
        "block_hash": "0fad52eb0a7a249d05657d15b0fa27a4",
        "content": "                if re.match(r'^[a-zA-Z0-9]{3,20}$', value):\n                    cleaned_params[key] ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "172-176",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "173-177",
        "block_hash": "6c4050ef4b1f407ff5119cd23ab7a45e",
        "content": "            elif key == 'openid':\n                # OpenID通常以特定前缀开始，长度较长\n                if len(valu..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "174-178",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "175-179",
        "block_hash": "fc28c948472703604358b049ca54999d",
        "content": "                if len(value) > 15 and re.match(r'^[a-zA-Z0-9_-]+$', value):\n                    cle..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "177-181",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "178-182",
        "block_hash": "ef916800efaea2f1250fd88511e551c1",
        "content": "            elif key == 'token':\n                # Token通常是长字符串\n                if len(value) > 10 a..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "179-183",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "180-184",
        "block_hash": "4b6f66df708574379ef10ec219e80989",
        "content": "                if len(value) > 10 and re.match(r'^[a-zA-Z0-9_-]+$', value):\n                    cle..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "182-186",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "183-187",
        "block_hash": "3d02744b3ca12e00c883d6921d5debd4",
        "content": "            elif key == 'user_id':\n                # 用户ID可能是数字或字符串\n                if len(value) > 3..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "184-188",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "185-189",
        "block_hash": "461cb4981c66a2e7634278be6ef63594",
        "content": "                if len(value) > 3:\n                    cleaned_params[key] = value\n            \n    ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "187-191",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "188-192",
        "block_hash": "f03dfa409067a6e8266cc05ff9c564f4",
        "content": "            elif key == 'base_url':\n                # 验证URL格式\n                if value.startswith(('..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "189-193",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "190-194",
        "block_hash": "f9312289e2b46a3f0877481069d47d21",
        "content": "                if value.startswith(('http://', 'https://')):\n                    cleaned_params[key..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "198-202",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "199-203",
        "block_hash": "2d346579cb38e3483089413b2a6fb62d",
        "content": "    @staticmethod\n    def analyze_curl_example(curl_command: str) -> Tuple[Dict[str, str], str]:\n   ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "203-207",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "204-208",
        "block_hash": "6f09deafa799a2e9a926369951e3f423",
        "content": "        Returns:\n            (参数字典, 分析报告)\n        \"\"\"\n        params = CurlParser.parse_curl_command..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "211-215",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "212-216",
        "block_hash": "e732f159ffc96555180486e990e5c5d9",
        "content": "        if params:\n            report += \"✅ 成功提取的参数:\\n\"\n            for key, value in params.items()..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "447-451",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "215-219",
        "block_hash": "73caa47884c0b0906e6eefcd774d5a31",
        "content": "                if key in ['token', 'openid'] and len(value) > 12:\n                    # 敏感信息部分隐藏\n  ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "216-220",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "217-221",
        "block_hash": "507ccbe8364767abd31d9a0fb3f02094",
        "content": "                    display_value = value[:8] + \"...\" + value[-4:]\n                else:\n           ..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "225-229",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "226-230",
        "block_hash": "d511ba82f5429eb6c31abba3343e3656",
        "content": "            if missing_params:\n                report += f\"\\n⚠️ 缺少必要参数: {', '.join(missing_params)}\\..."
      },
      {
        "file1": "ui\\components\\curl_parser.py",
        "lines1": "236-240",
        "file2": "ui\\components\\curl_parser.py",
        "lines2": "237-241",
        "block_hash": "0101c0fe53d26d4a5a95745153a361aa",
        "content": "\ndef test_curl_parser():\n    \"\"\"测试curl解析器\"\"\"\n    test_curl = \"\"\"curl -X GET 'https://www.heibaiyingy..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "19-23",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "20-24",
        "block_hash": "ecbcfd16636cd5a1177bc636343d83f2",
        "content": "    seat_selected = pyqtSignal(list)  # 选座变化信号\n    \n    def __init__(self, parent=None, seat_data=No..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "35-39",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "36-40",
        "block_hash": "144a3256ac3eb9b7c369c6281998287d",
        "content": "        # 🆕 拖拽滚动相关属性\n        self.is_dragging = False\n        self.last_mouse_pos = QPoint()\n       ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "39-43",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "43-47",
        "block_hash": "48fac530c969e993a9eccf7ebde8108f",
        "content": "    \n    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "50-54",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "51-55",
        "block_hash": "71e214bdcc05097d32e3a9b589e135c0",
        "content": "        self.scroll_area = QScrollArea()\n        self.scroll_area.setWidgetResizable(True)\n        s..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "56-60",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "57-61",
        "block_hash": "87d078c3c1618727452521cf4cdf7f5d",
        "content": "        self.scroll_area.setMouseTracking(True)\n        self.scroll_area.mousePressEvent = self._scr..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "61-65",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "62-66",
        "block_hash": "78ac641a62e543e307f7d1c14b3b68e1",
        "content": "        # 座位网格容器\n        self.seat_widget = QWidget()\n        self.seat_layout = QGridLayout(self.se..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "61-65",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "63-67",
        "block_hash": "78ac641a62e543e307f7d1c14b3b68e1",
        "content": "        self.seat_widget = QWidget()\n        self.seat_layout = QGridLayout(self.seat_widget)\n      ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "67-71",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "68-72",
        "block_hash": "9688c7d2a8ca3a77a5a6f540b4c86264",
        "content": "        self.seat_layout.setAlignment(Qt.AlignCenter)\n\n        self.scroll_area.setWidget(self.seat_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "268-272",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "114-118",
        "block_hash": "10fafcf495a24b8ff488793da8f7a7b2",
        "content": "            }\n            QPushButton:hover {\n                background-color: #0056b3;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "269-273",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "115-119",
        "block_hash": "606922a82d919620c6f634ef053de3e7",
        "content": "            QPushButton:hover {\n                background-color: #0056b3;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "270-274",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "116-120",
        "block_hash": "8ca4c9a0a244159c95622da30c1646da",
        "content": "                background-color: #0056b3;\n            }\n            QPushButton:pressed {\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "377-381",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "117-121",
        "block_hash": "60d79e098548f48645eb1d3dc7110055",
        "content": "            }\n            QPushButton:pressed {\n                background-color: #004085;\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "378-382",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "118-122",
        "block_hash": "005022cf582f937432aaba34c1727937",
        "content": "            QPushButton:pressed {\n                background-color: #004085;\n            }\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "379-383",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "119-123",
        "block_hash": "fb018814293230b515d46f9d5d32f776",
        "content": "                background-color: #004085;\n            }\n            QPushButton:disabled {\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "380-384",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "120-124",
        "block_hash": "21600f8931c6a9aaf03f7d862879586e",
        "content": "            }\n            QPushButton:disabled {\n                background-color: #6c757d;\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "381-385",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "121-125",
        "block_hash": "fdf1ccdd570e0cbf755b138995cc8bb5",
        "content": "            QPushButton:disabled {\n                background-color: #6c757d;\n                color:..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "129-133",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "130-134",
        "block_hash": "d55233a06fd3ee7cd306c1893a2d760f",
        "content": "        for i in reversed(range(self.seat_layout.count())):\n            child = self.seat_layout.ite..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "156-160",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "157-161",
        "block_hash": "0c6d61dc1963c323f6063c0951b4e55c",
        "content": "        # 绘制每一行\n        for r, row in enumerate(self.seat_data):\n            if not row:\n           ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "156-160",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "158-162",
        "block_hash": "0c6d61dc1963c323f6063c0951b4e55c",
        "content": "        for r, row in enumerate(self.seat_data):\n            if not row:\n                continue\n  ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "202-206",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "203-207",
        "block_hash": "bdfed7d773a02336a27471d815ebac1f",
        "content": "                col_num = seat.get('col', c + 1)\n\n                status = seat.get('status', 'avail..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "195-199",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "207-211",
        "block_hash": "85f9fa069430e9532c5203c318c33518",
        "content": "                    # 🆕 为empty状态也创建占位符\n                    spacer = QLabel(\"\")\n                    s..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "196-200",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "208-212",
        "block_hash": "b4e16e05008347daf8b0d93ebfdebc20",
        "content": "                    spacer = QLabel(\"\")\n                    spacer.setFixedSize(36, 36)\n            ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "197-201",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "209-213",
        "block_hash": "0f6e17e7e84229377385d66895cfcd23",
        "content": "                    spacer.setFixedSize(36, 36)\n                    spacer.setStyleSheet(\"background..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "198-202",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "210-214",
        "block_hash": "e0ded1f351cfb5487c6bf2a271bb545a",
        "content": "                    spacer.setStyleSheet(\"background-color: transparent; border: none;\")\n           ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "213-217",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "214-218",
        "block_hash": "535c211e05f1b3766824647e540e5f5c",
        "content": "                # 创建座位按钮 - 更现代化的样式\n                seat_btn = QPushButton()\n                seat_btn..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "213-217",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "215-219",
        "block_hash": "535c211e05f1b3766824647e540e5f5c",
        "content": "                seat_btn = QPushButton()\n                seat_btn.setFixedSize(36, 36)  # 稍微增大尺寸\n   ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "218-222",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "219-223",
        "block_hash": "609474923104b96d1010c56a43593c90",
        "content": "                # 物理座位号（rn, cn）用于构建座位图布局\n                # 真实座位号（r, n）用于显示和提交\n                real_s..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "220-224",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "221-225",
        "block_hash": "292143c75919546d35fa7e946fcf35d3",
        "content": "                real_seat_num = seat.get('num', '')  # 这里的num已经是处理过的真实座位号n\n                if not re..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "223-227",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "224-228",
        "block_hash": "99a05fffc6dd64f4dd45ed3bfa56034a",
        "content": "                    real_seat_num = str(seat.get('col', col_num))\n\n                seat_btn.setText(..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "225-229",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "226-230",
        "block_hash": "404103c509b3db42876da60100841b83",
        "content": "                seat_btn.setText(real_seat_num)\n                \n                # 设置样式\n            ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "228-232",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "229-233",
        "block_hash": "8606311fcfab1db9cc0e295eb009ce99",
        "content": "                self._update_seat_button_style(seat_btn, status)\n                \n                # ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "231-235",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "232-236",
        "block_hash": "b8442eccb55f6fd40c846a03e51322d1",
        "content": "                if status == \"available\":\n                    # 🆕 使用自定义的座位按钮点击处理，支持拖拽滚动\n            ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "244-248",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "245-249",
        "block_hash": "704b5ed10c8f7828fa2355df44a0f173",
        "content": "                self.seat_layout.addWidget(seat_btn, r, grid_col)\n                \n                #..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "246-250",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "247-251",
        "block_hash": "752a6103c859d9c610f92557b299d6f7",
        "content": "                # 保存引用\n                self.seat_buttons[(r, c)] = seat_btn\n        \n        print(f..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "246-250",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "248-252",
        "block_hash": "752a6103c859d9c610f92557b299d6f7",
        "content": "                self.seat_buttons[(r, c)] = seat_btn\n        \n        print(f\"[座位面板] 座位图绘制完成，共{len(s..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "249-253",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "250-254",
        "block_hash": "9c5baa954b2b4ce01340757f5fd1dc37",
        "content": "        print(f\"[座位面板] 座位图绘制完成，共{len(self.seat_buttons)}个座位\")\n\n        # 初始化按钮文字\n        self._updat..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "258-262",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "276-280",
        "block_hash": "3c2cf6d9b9957c9b9bf189b7b6535764",
        "content": "            # 已售座位 - 温和的灰色\n            button.setStyleSheet(\"\"\"\n                QPushButton {\n      ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "259-263",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "277-281",
        "block_hash": "04196476ce89325b9efcb61cbd13ba84",
        "content": "            button.setStyleSheet(\"\"\"\n                QPushButton {\n                    background-co..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "258-262",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "287-291",
        "block_hash": "3c2cf6d9b9957c9b9bf189b7b6535764",
        "content": "            # 选中座位 - 鲜明的绿色\n            button.setStyleSheet(\"\"\"\n                QPushButton {\n      ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "259-263",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "288-292",
        "block_hash": "04196476ce89325b9efcb61cbd13ba84",
        "content": "            button.setStyleSheet(\"\"\"\n                QPushButton {\n                    background-co..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "260-264",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "289-293",
        "block_hash": "16e5e40e1751d28ffcc63f76ab8c578b",
        "content": "                QPushButton {\n                    background-color: #4caf50;\n                    bor..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "261-265",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "290-294",
        "block_hash": "e4067d6bbd6361da0b3bed7ad18ba976",
        "content": "                    background-color: #4caf50;\n                    border: 2px solid #388e3c;\n      ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "262-266",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "291-295",
        "block_hash": "bf204045d5e90ff91546a49d0bcaf6bd",
        "content": "                    border: 2px solid #388e3c;\n                    color: #fff;\n                    ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "258-262",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "298-302",
        "block_hash": "3c2cf6d9b9957c9b9bf189b7b6535764",
        "content": "            # 其他状态 - 默认样式\n            button.setStyleSheet(\"\"\"\n                QPushButton {\n       ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "259-263",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "299-303",
        "block_hash": "04196476ce89325b9efcb61cbd13ba84",
        "content": "            button.setStyleSheet(\"\"\"\n                QPushButton {\n                    background-co..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "278-282",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "300-304",
        "block_hash": "e4eee004cfbd34a625409d651f280a3f",
        "content": "                QPushButton {\n                    background-color: #fafafa;\n                    bor..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "279-283",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "301-305",
        "block_hash": "f002a6877363f99ef45c149a46cb0369",
        "content": "                    background-color: #fafafa;\n                    border: 2px solid #e0e0e0;\n      ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "280-284",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "302-306",
        "block_hash": "b72d65b7ddb30e119c0dda6eab474844",
        "content": "                    border: 2px solid #e0e0e0;\n                    color: #bdbdbd;\n                 ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "281-285",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "303-307",
        "block_hash": "c187114dbc0bfb5ecdaa572767df8901",
        "content": "                    color: #bdbdbd;\n                    font: 10px \"Microsoft YaHei\";\n              ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "308-312",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "309-313",
        "block_hash": "355afd55635b75d7ec0d1338cad1aefa",
        "content": "    def toggle_seat(self, r: int, c: int):\n        \"\"\"切换座位选中状态\"\"\"\n        if (r, c) not in self.seat..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "313-317",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "314-318",
        "block_hash": "1b8e005889aed9965c3fb2e43f1e1bb4",
        "content": "        seat = self.seat_data[r][c]\n        key = (r, c)\n        \n        if key in self.selected_se..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "333-337",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "334-338",
        "block_hash": "20102f1a63e3469c627f793f9694e37c",
        "content": "        # 更新按钮样式\n        seat_btn = self.seat_buttons[key]\n        self._update_seat_button_style(se..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "337-341",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "338-342",
        "block_hash": "b9176f4e4488565dc955d24689e4bfcc",
        "content": "        # 触发选座回调\n        if self.on_seat_selected:\n            selected = [self.seat_data[r][c] for ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "337-341",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "339-343",
        "block_hash": "b9176f4e4488565dc955d24689e4bfcc",
        "content": "        if self.on_seat_selected:\n            selected = [self.seat_data[r][c] for (r, c) in self.se..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "382-386",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "383-387",
        "block_hash": "36da8167c584ea22dccb8d3230e83250",
        "content": "                row_num = seat.get('row', r + 1)\n                col_num = seat.get('col', c + 1)\n  ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "388-392",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "389-393",
        "block_hash": "0041e4d28b2d906cf959a1996a32ec9f",
        "content": "            seats_text = \" \".join(selected_seats_info)\n            self.submit_btn.setText(f\"提交订单 {s..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "422-426",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "423-427",
        "block_hash": "c0ee87a6dc5d9a1b109c6b1dfba051af",
        "content": "    def clear_selection(self):\n        \"\"\"清空选择\"\"\"\n        for (r, c) in list(self.selected_seats):\n ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "320-324",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "427-431",
        "block_hash": "0e210046833068640c4411d93b09aeb5",
        "content": "            # 恢复原始状态\n            original_data = seat.get('original_data', {})\n            original_..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "321-325",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "428-432",
        "block_hash": "1e2b6bc48f17a6dde869c56bad814361",
        "content": "            original_data = seat.get('original_data', {})\n            original_state = original_data..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "322-326",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "429-433",
        "block_hash": "62192a0de3d3cde057e8fa912b1d632e",
        "content": "            original_state = original_data.get('s', 'F')\n            if original_state == 'B':\n     ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "323-327",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "430-434",
        "block_hash": "bb2daf1677a67e3035911ec119c0b9a4",
        "content": "            if original_state == 'B':\n                seat['status'] = 'sold'\n            elif origi..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "324-328",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "431-435",
        "block_hash": "07e321a1e570d7506994293260127e56",
        "content": "                seat['status'] = 'sold'\n            elif original_state == 'F':\n                seat..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "446-450",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "447-451",
        "block_hash": "b90196bfd58455434017031c1eacd338",
        "content": "    def set_enabled(self, enabled: bool):\n        \"\"\"设置是否可用\"\"\"\n        self.scroll_area.setEnabled(e..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "492-496",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "493-497",
        "block_hash": "17c48833ecd86911c8ee9f0114042bd1",
        "content": "            # 获取滚动条\n            h_scrollbar = self.scroll_area.horizontalScrollBar()\n            v_s..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "492-496",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "494-498",
        "block_hash": "17c48833ecd86911c8ee9f0114042bd1",
        "content": "            h_scrollbar = self.scroll_area.horizontalScrollBar()\n            v_scrollbar = self.scro..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "497-501",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "498-502",
        "block_hash": "ecad2688b0be94c25a66fcfc9c18ce94",
        "content": "            # 注意：鼠标向右移动时，我们希望内容向右移动（即滚动条向左移动）\n            # 所以滚动值的变化方向与鼠标移动方向相反\n            new_h_va..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "497-501",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "499-503",
        "block_hash": "ecad2688b0be94c25a66fcfc9c18ce94",
        "content": "            # 所以滚动值的变化方向与鼠标移动方向相反\n            new_h_value = h_scrollbar.value() - delta.x()\n        ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "502-506",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "503-507",
        "block_hash": "c1574447724673d11869ca9aa2808786",
        "content": "            # 限制滚动范围\n            new_h_value = max(h_scrollbar.minimum(), min(h_scrollbar.maximum(),..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "506-510",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "507-511",
        "block_hash": "1a5afcfed0c4a148a29de45cb17ec15c",
        "content": "            # 设置新的滚动位置\n            h_scrollbar.setValue(new_h_value)\n            v_scrollbar.setValu..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "516-520",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "517-521",
        "block_hash": "3678dadc2acc1ec7badbc06cf46735ad",
        "content": "    def _scroll_area_mouse_release(self, event: QMouseEvent):\n        \"\"\"滚动区域鼠标释放事件\"\"\"\n        if ev..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "523-527",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "524-528",
        "block_hash": "de229cc01bb47b975fc81614d7b89e74",
        "content": "            # 计算总的拖拽距离\n            total_delta = event.pos() - self.drag_start_pos\n            print..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "527-531",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "528-532",
        "block_hash": "b798855e62ed6b25460bc2f12fa83304",
        "content": "            # 重置位置\n            self.last_mouse_pos = QPoint()\n            self.drag_start_pos = QPoi..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "531-535",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "532-536",
        "block_hash": "236a5bc970df054e011743e216ff018d",
        "content": "    # 🆕 座位按钮鼠标事件处理（支持拖拽滚动）\n    def _seat_button_mouse_press(self, event: QMouseEvent, r: int, c: int..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "539-543",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "540-544",
        "block_hash": "e3efe1ca412f7148dd04c232a6062e06",
        "content": "\n    def _seat_button_mouse_move(self, event: QMouseEvent, r: int, c: int):\n        \"\"\"座位按钮鼠标移动事件\"\"\"..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "547-551",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "548-552",
        "block_hash": "61c6edb8d3d87e1b5169617e5c1c02b5",
        "content": "            if move_distance > 5 and not self.is_dragging:  # 5像素的拖拽阈值\n                self.is_dragg..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "552-556",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "553-557",
        "block_hash": "ee876b41a9d16e43ec63000e57a5cdf2",
        "content": "            # 如果正在拖拽，执行滚动\n            if self.is_dragging:\n                # 计算鼠标移动的距离\n             ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "552-556",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "554-558",
        "block_hash": "ee876b41a9d16e43ec63000e57a5cdf2",
        "content": "            if self.is_dragging:\n                # 计算鼠标移动的距离\n                delta = event.globalPos..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "492-496",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "557-561",
        "block_hash": "17c48833ecd86911c8ee9f0114042bd1",
        "content": "\n                # 获取滚动条\n                h_scrollbar = self.scroll_area.horizontalScrollBar()\n      ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "492-496",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "558-562",
        "block_hash": "17c48833ecd86911c8ee9f0114042bd1",
        "content": "                # 获取滚动条\n                h_scrollbar = self.scroll_area.horizontalScrollBar()\n       ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "497-501",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "561-565",
        "block_hash": "ecad2688b0be94c25a66fcfc9c18ce94",
        "content": "\n                # 根据鼠标移动方向调整滚动位置\n                new_h_value = h_scrollbar.value() - delta.x()\n    ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "497-501",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "562-566",
        "block_hash": "ecad2688b0be94c25a66fcfc9c18ce94",
        "content": "                # 根据鼠标移动方向调整滚动位置\n                new_h_value = h_scrollbar.value() - delta.x()\n     ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "500-504",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "563-567",
        "block_hash": "b79e3de112eaf74bba19cd21edb64fb8",
        "content": "                new_h_value = h_scrollbar.value() - delta.x()\n                new_v_value = v_scroll..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "501-505",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "564-568",
        "block_hash": "88641dde59691bc8632a8b4cf18dade8",
        "content": "                new_v_value = v_scrollbar.value() - delta.y()\n\n                # 限制滚动范围\n            ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "502-506",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "565-569",
        "block_hash": "c1574447724673d11869ca9aa2808786",
        "content": "\n                # 限制滚动范围\n                new_h_value = max(h_scrollbar.minimum(), min(h_scrollbar.m..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "502-506",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "566-570",
        "block_hash": "c1574447724673d11869ca9aa2808786",
        "content": "                # 限制滚动范围\n                new_h_value = max(h_scrollbar.minimum(), min(h_scrollbar.ma..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "504-508",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "567-571",
        "block_hash": "99a7efeb9246cb01369d9c1538b1d524",
        "content": "                new_h_value = max(h_scrollbar.minimum(), min(h_scrollbar.maximum(), new_h_value))\n  ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "505-509",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "568-572",
        "block_hash": "aa6ea08ddea8513919e4a7b77d967823",
        "content": "                new_v_value = max(v_scrollbar.minimum(), min(v_scrollbar.maximum(), new_v_value))\n\n ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "506-510",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "569-573",
        "block_hash": "1a5afcfed0c4a148a29de45cb17ec15c",
        "content": "\n                # 设置新的滚动位置\n                h_scrollbar.setValue(new_h_value)\n                v_scro..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "506-510",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "570-574",
        "block_hash": "1a5afcfed0c4a148a29de45cb17ec15c",
        "content": "                # 设置新的滚动位置\n                h_scrollbar.setValue(new_h_value)\n                v_scrol..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "576-580",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "577-581",
        "block_hash": "8b18a7009f3f28193837f6412d5bf5c1",
        "content": "    def _seat_button_mouse_release(self, event: QMouseEvent, r: int, c: int):\n        \"\"\"座位按钮鼠标释放事件\"..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "581-585",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "582-586",
        "block_hash": "c921450069ed056c5a2c369d79900fcf",
        "content": "                self.is_dragging = False\n                self.scroll_area.setCursor(Qt.ArrowCursor)\n..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "585-589",
        "file2": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines2": "586-590",
        "block_hash": "34ad7a7a03b31d8cb65839281fbe2bc1",
        "content": "                # 重置位置\n                self.last_mouse_pos = QPoint()\n                self.drag_star..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "33-37",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "34-38",
        "block_hash": "6058544a964d99e229b84e39e3eb51e2",
        "content": "    @staticmethod\n    def extract_from_text(text):\n        \"\"\"从文本中提取参数\"\"\"\n        extracted_params =..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "54-58",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "55-59",
        "block_hash": "9292a247ac97dca145a4a31f68ea797b",
        "content": "                    if 'base_url' not in extracted_params:\n                        extracted_params[..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "103-107",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "104-108",
        "block_hash": "a81864712d65c97d71ceb42690a98e44",
        "content": "        except Exception as e:\n            print(f\"[参数提取] 文本分析错误: {e}\")\n\n        return extracted_pa..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "116-120",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "117-121",
        "block_hash": "3bee67b45cc16486895a8bfbc63b652e",
        "content": "class AutoParameterExtractor(QDialog):\n    \"\"\"完全自动化参数采集器\"\"\"\n\n    parameter_extracted = pyqtSignal(st..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "133-137",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "134-138",
        "block_hash": "c800cc9c7b6a802cbf4a14086623120c",
        "content": "    def setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setSp..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "139-143",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "140-144",
        "block_hash": "e676d56825c11522ef46a8d83461b438",
        "content": "        self.create_instruction_area(layout)\n\n        # 创建Tab界面\n        self.tab_widget = QTabWidget..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "144-148",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "145-149",
        "block_hash": "882a4e96ee652703e23997bb5a3ea6f0",
        "content": "        # curl解析Tab\n        self.curl_tab = QWidget()\n        self.setup_curl_tab()\n        self.tab..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "144-148",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "146-150",
        "block_hash": "882a4e96ee652703e23997bb5a3ea6f0",
        "content": "        self.curl_tab = QWidget()\n        self.setup_curl_tab()\n        self.tab_widget.addTab(self...."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "149-153",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "150-154",
        "block_hash": "2f331b31f599ccc732adc123032731a0",
        "content": "        # 手动输入Tab\n        self.manual_tab = QWidget()\n        self.setup_manual_tab()\n        self.t..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "154-158",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "155-159",
        "block_hash": "864a3c6b6bc910e011d16c5a79226a5c",
        "content": "        layout.addWidget(self.tab_widget)\n\n        # 底部控制区域\n        self.create_control_area(layout)..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "157-161",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "158-162",
        "block_hash": "8b801e0c4fdcf223253c85c125e98751",
        "content": "        self.create_control_area(layout)\n\n        # 连接Tab切换信号\n        self.tab_widget.currentChanged..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "176-180",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "177-181",
        "block_hash": "e0c5fdb4cf75c5374c8e41ef8c198f59",
        "content": "        title = QLabel(\"🎬 curl命令参数采集器\")\n        title.setStyleSheet(\"font-size: 16px; font-weight: b..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "188-192",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "189-193",
        "block_hash": "3d328bf63c93f778297a4ed42ca66fc5",
        "content": "✏️ 手动输入模式：\n1. 点击\"手动输入\"Tab页面\n2. 粘贴抓包数据或直接输入参数\n3. 点击\"分析参数\"按钮提取参数\n"
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "204-208",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "205-209",
        "block_hash": "9e501527273d86f49e8af2570ef29850",
        "content": "    def setup_curl_tab(self):\n        \"\"\"设置curl解析Tab\"\"\"\n        layout = QVBoxLayout(self.curl_tab)\n..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "218-222",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "219-223",
        "block_hash": "3c2d7bc22789b1fe62010156f92d17a8",
        "content": "获取curl命令的方法：\n1. 浏览器开发者工具 → Network → 右键请求 → Copy as cURL\n2. Fiddler → 右键请求 → Copy → Copy as cURL\n3. ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "262-266",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "238-242",
        "block_hash": "8b5ee7424a602c0b63db67bb5d4e7b4c",
        "content": "            QTextEdit {\n                background-color: #f8f9fa;\n                border: 1px solid..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "263-267",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "239-243",
        "block_hash": "49028d2e119e7c608697ed668de06b82",
        "content": "                background-color: #f8f9fa;\n                border: 1px solid #dee2e6;\n              ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "264-268",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "240-244",
        "block_hash": "be8ea8dd17472a0365faff3e4880867d",
        "content": "                border: 1px solid #dee2e6;\n                border-radius: 3px;\n                font-..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "265-269",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "241-245",
        "block_hash": "d82e18732dcb2ad125c4634802195e5f",
        "content": "                border-radius: 3px;\n                font-family: 'Consolas', 'Monaco', monospace;\n  ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "247-251",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "248-252",
        "block_hash": "bf7af26e3b9802eb30333b90355499a4",
        "content": "        layout.addWidget(curl_label)\n        layout.addWidget(self.curl_input)\n        layout.addWid..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "254-258",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "255-259",
        "block_hash": "cf5462827e8dc809bbc13915f4b190cf",
        "content": "    def setup_manual_tab(self):\n        \"\"\"设置手动输入Tab\"\"\"\n        layout = QVBoxLayout(self.manual_tab..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "269-273",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "270-274",
        "block_hash": "c82b59bafea9bbd15d10a43c9bb38251",
        "content": "2. JSON响应数据：\n   {\"cinemaid\": \"12345\", \"base_url\": \"https://api.example.com\", \"openid\": \"xxx\"}\n\n3. 抓包..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "277-281",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "278-282",
        "block_hash": "6b1ab53cb208257062fde812cbe06c6a",
        "content": "        manual_label = QLabel(\"✏️ 或手动输入参数:\")\n        manual_label.setStyleSheet(\"font-weight: bold; ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "324-328",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "325-329",
        "block_hash": "13d7d69df203bce2dc7fdeeae64c0d94",
        "content": "    def on_tab_changed(self, index):\n        \"\"\"Tab切换事件处理\"\"\"\n        tab_text = self.tab_widget.tabT..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "329-333",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "330-334",
        "block_hash": "5de7f1f83662651c6df2bbcee3b49b2d",
        "content": "        if self.auto_mode:\n            print(\"[参数采集] 切换到curl解析模式\")\n        else:\n            print(\"..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "343-347",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "344-348",
        "block_hash": "71587464ca3c6faeab5554a74566dcaa",
        "content": "    def on_status_changed(self, status: str):\n        \"\"\"处理状态变化\"\"\"\n        print(f\"[参数采集] 状态更新: {sta..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "258-262",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "355-359",
        "block_hash": "28167b647edb5f37cfbb8272ef0e8c2c",
        "content": "\n        # 文本输入区域\n        text_label = QLabel(\"📝 粘贴抓包数据或网络请求内容:\")\n        text_label.setStyleSheet(\"..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "259-263",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "356-360",
        "block_hash": "26dc309659973ea4e9770dddfa352936",
        "content": "        # 文本输入区域\n        text_label = QLabel(\"📝 粘贴抓包数据或网络请求内容:\")\n        text_label.setStyleSheet(\"f..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "260-264",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "357-361",
        "block_hash": "3eb6db67152f467208e68c2a52caa58d",
        "content": "        text_label = QLabel(\"📝 粘贴抓包数据或网络请求内容:\")\n        text_label.setStyleSheet(\"font-weight: bold;..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "261-265",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "358-362",
        "block_hash": "05d61518dd59254c849c585e26675e75",
        "content": "        text_label.setStyleSheet(\"font-weight: bold; margin-bottom: 5px;\")\n\n        self.text_input ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "262-266",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "359-363",
        "block_hash": "077513a2e69bac37cfd8c32d044f541a",
        "content": "\n        self.text_input = QTextEdit()\n        self.text_input.setMinimumHeight(200)\n        self.te..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "263-267",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "360-364",
        "block_hash": "626497e77ecbbd6936093bcf61dbdfef",
        "content": "        self.text_input = QTextEdit()\n        self.text_input.setMinimumHeight(200)\n        self.tex..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "264-268",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "361-365",
        "block_hash": "7081fb194dcb957393099b5217421b3a",
        "content": "        self.text_input.setMinimumHeight(200)\n        self.text_input.setPlaceholderText(\"\"\"请粘贴包含影院A..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "265-269",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "362-366",
        "block_hash": "2414f073fed544c33b529258321e6cf9",
        "content": "        self.text_input.setPlaceholderText(\"\"\"请粘贴包含影院API参数的文本内容，例如：\n\n1. 网络请求URL：\n   https://api.exam..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "266-270",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "363-367",
        "block_hash": "0615b553214a1b54fcfcec351b7b6978",
        "content": "\n1. 网络请求URL：\n   https://api.example.com/cinema/12345?openid=xxx&token=yyy\n\n2. JSON响应数据："
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "267-271",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "364-368",
        "block_hash": "24491b325565a7aa0c2e0df462c326a0",
        "content": "1. 网络请求URL：\n   https://api.example.com/cinema/12345?openid=xxx&token=yyy\n\n2. JSON响应数据：\n   {\"cinemaid..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "268-272",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "365-369",
        "block_hash": "27be842d173e8a562517fc2c3f13373b",
        "content": "   https://api.example.com/cinema/12345?openid=xxx&token=yyy\n\n2. JSON响应数据：\n   {\"cinemaid\": \"12345\", ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "269-273",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "366-370",
        "block_hash": "c82b59bafea9bbd15d10a43c9bb38251",
        "content": "\n2. JSON响应数据：\n   {\"cinemaid\": \"12345\", \"base_url\": \"https://api.example.com\", \"openid\": \"xxx\"}\n\n3. 抓..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "269-273",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "367-371",
        "block_hash": "c82b59bafea9bbd15d10a43c9bb38251",
        "content": "2. JSON响应数据：\n   {\"cinemaid\": \"12345\", \"base_url\": \"https://api.example.com\", \"openid\": \"xxx\"}\n\n3. 抓包..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "271-275",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "368-372",
        "block_hash": "a871d1274f1c3e8dde17898ea5d119bc",
        "content": "   {\"cinemaid\": \"12345\", \"base_url\": \"https://api.example.com\", \"openid\": \"xxx\"}\n\n3. 抓包工具的请求详情...\n\n支..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "274-278",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "371-375",
        "block_hash": "f398b8a423fbfbcd93673199f6218a9d",
        "content": "\n支持多种格式，工具会自动识别和提取参数。\"\"\")\n\n        # 手动输入区域\n        manual_label = QLabel(\"✏️ 或手动输入参数:\")"
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "275-279",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "372-376",
        "block_hash": "68e636d6caaab427e5da81da8122213c",
        "content": "支持多种格式，工具会自动识别和提取参数。\"\"\")\n\n        # 手动输入区域\n        manual_label = QLabel(\"✏️ 或手动输入参数:\")\n        manu..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "276-280",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "373-377",
        "block_hash": "a445433f7a3a4d593d9918b98d066e32",
        "content": "\n        # 手动输入区域\n        manual_label = QLabel(\"✏️ 或手动输入参数:\")\n        manual_label.setStyleSheet(\"f..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "277-281",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "374-378",
        "block_hash": "6b1ab53cb208257062fde812cbe06c6a",
        "content": "        # 手动输入区域\n        manual_label = QLabel(\"✏️ 或手动输入参数:\")\n        manual_label.setStyleSheet(\"fo..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "277-281",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "375-379",
        "block_hash": "6b1ab53cb208257062fde812cbe06c6a",
        "content": "        manual_label = QLabel(\"✏️ 或手动输入参数:\")\n        manual_label.setStyleSheet(\"font-weight: bold; ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "279-283",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "376-380",
        "block_hash": "16a94bd65cdc44921cec05f0badf033d",
        "content": "        manual_label.setStyleSheet(\"font-weight: bold; margin-top: 10px; margin-bottom: 5px;\")\n\n    ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "280-284",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "377-381",
        "block_hash": "3c5d3ab267ca85db147bffda7b1ea563",
        "content": "\n        manual_layout = QHBoxLayout()\n\n        # API域名输入\n        api_layout = QVBoxLayout()"
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "281-285",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "378-382",
        "block_hash": "4907198b767878e27373475294fbdd2c",
        "content": "        manual_layout = QHBoxLayout()\n\n        # API域名输入\n        api_layout = QVBoxLayout()\n        ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "282-286",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "379-383",
        "block_hash": "10bf830dfb2156c52bae3e84e195c63a",
        "content": "\n        # API域名输入\n        api_layout = QVBoxLayout()\n        api_layout.addWidget(QLabel(\"API域名 (必填..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "283-287",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "380-384",
        "block_hash": "6d6e5f137ace83778238a58ff6d44580",
        "content": "        # API域名输入\n        api_layout = QVBoxLayout()\n        api_layout.addWidget(QLabel(\"API域名 (必填)..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "284-288",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "381-385",
        "block_hash": "41a64d2db63924741b65c9d00d302fe2",
        "content": "        api_layout = QVBoxLayout()\n        api_layout.addWidget(QLabel(\"API域名 (必填):\"))\n        self...."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "285-289",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "382-386",
        "block_hash": "6ea1e5a3e964c5e59c2b708aa3fa67bc",
        "content": "        api_layout.addWidget(QLabel(\"API域名 (必填):\"))\n        self.api_input = QLineEdit()\n        sel..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "286-290",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "383-387",
        "block_hash": "8a4abef1979900ef3952b6a1cb2e7453",
        "content": "        self.api_input = QLineEdit()\n        self.api_input.setPlaceholderText(\"https://api.example...."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "287-291",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "384-388",
        "block_hash": "69fcd1afa4536694b3e2453bd73a89bc",
        "content": "        self.api_input.setPlaceholderText(\"https://api.example.com\")\n        api_layout.addWidget(se..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "288-292",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "385-389",
        "block_hash": "f71d1aee112fba16bc8aa621eb1298d3",
        "content": "        api_layout.addWidget(self.api_input)\n\n        # 影院ID输入\n        cinema_layout = QVBoxLayout()..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "289-293",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "386-390",
        "block_hash": "74a80b7524b2829d4de1ee52b80241db",
        "content": "\n        # 影院ID输入\n        cinema_layout = QVBoxLayout()\n        cinema_layout.addWidget(QLabel(\"影院ID..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "290-294",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "387-391",
        "block_hash": "03399ba791009eb099ac3cb0bdfdf7c5",
        "content": "        # 影院ID输入\n        cinema_layout = QVBoxLayout()\n        cinema_layout.addWidget(QLabel(\"影院ID ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "291-295",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "388-392",
        "block_hash": "888f0d1cf5606a1c98bf5177a9729d6b",
        "content": "        cinema_layout = QVBoxLayout()\n        cinema_layout.addWidget(QLabel(\"影院ID (必填):\"))\n        ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "292-296",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "389-393",
        "block_hash": "e22e9a81c1beaa18e62dbcae7f515312",
        "content": "        cinema_layout.addWidget(QLabel(\"影院ID (必填):\"))\n        self.cinema_input = QLineEdit()\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "293-297",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "390-394",
        "block_hash": "976e8a02c93dc0bd4e68ba2449aba696",
        "content": "        self.cinema_input = QLineEdit()\n        self.cinema_input.setPlaceholderText(\"12345\")\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "294-298",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "391-395",
        "block_hash": "4e3cd4d7c81a25f8497cd78306c60fa7",
        "content": "        self.cinema_input.setPlaceholderText(\"12345\")\n        cinema_layout.addWidget(self.cinema_in..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "295-299",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "392-396",
        "block_hash": "48ace790a89f2f7aaf90a8ff1cfc6f14",
        "content": "        cinema_layout.addWidget(self.cinema_input)\n\n        manual_layout.addLayout(api_layout)\n    ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "296-300",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "393-397",
        "block_hash": "e930794aba2fd7287812ef09466c7336",
        "content": "\n        manual_layout.addLayout(api_layout)\n        manual_layout.addLayout(cinema_layout)\n\n       ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "297-301",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "394-398",
        "block_hash": "a530c35562dee6fe8cbc0da4b344ca0a",
        "content": "        manual_layout.addLayout(api_layout)\n        manual_layout.addLayout(cinema_layout)\n\n        ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "298-302",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "395-399",
        "block_hash": "dadba2b55a7b3bb9fa404dbd43c67d9b",
        "content": "        manual_layout.addLayout(cinema_layout)\n\n        # 认证信息输入\n        auth_layout = QHBoxLayout()..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "299-303",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "396-400",
        "block_hash": "74400e77673502f69b36d64991578493",
        "content": "\n        # 认证信息输入\n        auth_layout = QHBoxLayout()\n\n        openid_layout = QVBoxLayout()"
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "300-304",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "397-401",
        "block_hash": "ae0103584367b38d4b59cbebb1ee2a90",
        "content": "        # 认证信息输入\n        auth_layout = QHBoxLayout()\n\n        openid_layout = QVBoxLayout()\n        ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "301-305",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "398-402",
        "block_hash": "652e4f385122fdef42c80aeb20e18372",
        "content": "        auth_layout = QHBoxLayout()\n\n        openid_layout = QVBoxLayout()\n        openid_layout.add..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "302-306",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "399-403",
        "block_hash": "2079714b93798ad328af533bc788b3ab",
        "content": "\n        openid_layout = QVBoxLayout()\n        openid_layout.addWidget(QLabel(\"OpenID (可选):\"))\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "303-307",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "400-404",
        "block_hash": "f91c35e052efd023c17de61142686e70",
        "content": "        openid_layout = QVBoxLayout()\n        openid_layout.addWidget(QLabel(\"OpenID (可选):\"))\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "304-308",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "401-405",
        "block_hash": "bb7e93251a8902a9a101a17a5cc6a134",
        "content": "        openid_layout.addWidget(QLabel(\"OpenID (可选):\"))\n        self.openid_input = QLineEdit()\n    ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "305-309",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "402-406",
        "block_hash": "a6ca60ff8a3a93702483954ec94740fa",
        "content": "        self.openid_input = QLineEdit()\n        self.openid_input.setPlaceholderText(\"用户OpenID\")\n   ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "306-310",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "403-407",
        "block_hash": "8aae659e9c50118fcbebde03d247c847",
        "content": "        self.openid_input.setPlaceholderText(\"用户OpenID\")\n        openid_layout.addWidget(self.openid..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "307-311",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "404-408",
        "block_hash": "77bdde0609e6bbcee5b2cd15b803b7aa",
        "content": "        openid_layout.addWidget(self.openid_input)\n\n        token_layout = QVBoxLayout()\n        tok..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "308-312",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "405-409",
        "block_hash": "8918521fa19b7116bdcd35fd8f9a3abb",
        "content": "\n        token_layout = QVBoxLayout()\n        token_layout.addWidget(QLabel(\"Token (可选):\"))\n        ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "309-313",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "406-410",
        "block_hash": "814a67e7e46926e8a3366902f12f3e27",
        "content": "        token_layout = QVBoxLayout()\n        token_layout.addWidget(QLabel(\"Token (可选):\"))\n        s..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "310-314",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "407-411",
        "block_hash": "e08105c5455af4cf831cbba5643f47b7",
        "content": "        token_layout.addWidget(QLabel(\"Token (可选):\"))\n        self.token_input = QLineEdit()\n       ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "311-315",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "408-412",
        "block_hash": "4710f33ff81b8d57ba31545d4da54855",
        "content": "        self.token_input = QLineEdit()\n        self.token_input.setPlaceholderText(\"访问Token\")\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "312-316",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "409-413",
        "block_hash": "02b18cd7032d077e3e858a0dc6db9f91",
        "content": "        self.token_input.setPlaceholderText(\"访问Token\")\n        token_layout.addWidget(self.token_inp..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "313-317",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "410-414",
        "block_hash": "6627ff65011d5e526bd118f5293820fc",
        "content": "        token_layout.addWidget(self.token_input)\n\n        auth_layout.addLayout(openid_layout)\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "314-318",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "411-415",
        "block_hash": "4d4754cee7889603e1115156b19a44b1",
        "content": "\n        auth_layout.addLayout(openid_layout)\n        auth_layout.addLayout(token_layout)\n\n        #..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "423-427",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "424-428",
        "block_hash": "343861ede79c28bae38f858d5f8dbe12",
        "content": "    def create_control_area(self, layout):\n        \"\"\"创建控制区域\"\"\"\n        control_frame = QFrame()\n   ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "260-264",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "435-439",
        "block_hash": "3eab24032d505c66c8ec21042c0f788f",
        "content": "        self.params_display.setPlaceholderText(\"提取到的参数将显示在这里...\")\n        self.params_display.setSty..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "261-265",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "436-440",
        "block_hash": "03c69f3b85a893decb32b77879d5f203",
        "content": "        self.params_display.setStyleSheet(\"\"\"\n            QTextEdit {\n                background-col..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "262-266",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "437-441",
        "block_hash": "8b5ee7424a602c0b63db67bb5d4e7b4c",
        "content": "            QTextEdit {\n                background-color: #f8f9fa;\n                border: 1px solid..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "263-267",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "438-442",
        "block_hash": "49028d2e119e7c608697ed668de06b82",
        "content": "                background-color: #f8f9fa;\n                border: 1px solid #dee2e6;\n              ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "264-268",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "439-443",
        "block_hash": "be8ea8dd17472a0365faff3e4880867d",
        "content": "                border: 1px solid #dee2e6;\n                border-radius: 3px;\n                font-..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "265-269",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "440-444",
        "block_hash": "d82e18732dcb2ad125c4634802195e5f",
        "content": "                border-radius: 3px;\n                font-family: 'Consolas', 'Monaco', monospace;\n  ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "242-246",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "441-445",
        "block_hash": "11557079cd3ce409e10a199b2a62ac76",
        "content": "                font-family: 'Consolas', 'Monaco', monospace;\n                font-size: 11px;\n     ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "221-225",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "467-471",
        "block_hash": "2356a77d0f21d7f61ac4a9c443bd64a8",
        "content": "        self.clear_button.setStyleSheet(\"\"\"\n            QPushButton {\n                background-col..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "452-456",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "468-472",
        "block_hash": "23d5cdec9af599badc53e844a0539296",
        "content": "            QPushButton {\n                background-color: #757575;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "453-457",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "469-473",
        "block_hash": "919cd9ffd02225ad5199fcc94bf9426f",
        "content": "                background-color: #757575;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "452-456",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "484-488",
        "block_hash": "23d5cdec9af599badc53e844a0539296",
        "content": "            QPushButton {\n                background-color: #4CAF50;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "453-457",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "485-489",
        "block_hash": "919cd9ffd02225ad5199fcc94bf9426f",
        "content": "                background-color: #4CAF50;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "454-458",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "486-490",
        "block_hash": "70b35b822ff24d0192c2c052fd31f3dc",
        "content": "                color: white;\n                border: none;\n                padding: 8px 16px;\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "455-459",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "487-491",
        "block_hash": "60e69c30abc61befc379a3beaadac8c2",
        "content": "                border: none;\n                padding: 8px 16px;\n                border-radius: 4px;..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "456-460",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "488-492",
        "block_hash": "066bec9b2ae8cac938947f9406e87ef5",
        "content": "                padding: 8px 16px;\n                border-radius: 4px;\n                font-weight: ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "457-461",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "489-493",
        "block_hash": "fd592ab579ff4b31c19cd1a5b3e2a6b5",
        "content": "                border-radius: 4px;\n                font-weight: bold;\n            }\n            QPu..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "458-462",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "490-494",
        "block_hash": "6b299abefc7721d521053fa219fcf381",
        "content": "                font-weight: bold;\n            }\n            QPushButton:hover {\n                bac..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "209-213",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "491-495",
        "block_hash": "13fa2cee39ba01bd62291b7222d89019",
        "content": "            }\n            QPushButton:hover {\n                background-color: #45a049;\n           ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "210-214",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "492-496",
        "block_hash": "a74a5d0bcef5713d3e271842616f6954",
        "content": "            QPushButton:hover {\n                background-color: #45a049;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "379-383",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "493-497",
        "block_hash": "fb018814293230b515d46f9d5d32f776",
        "content": "                background-color: #45a049;\n            }\n            QPushButton:disabled {\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "380-384",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "494-498",
        "block_hash": "21600f8931c6a9aaf03f7d862879586e",
        "content": "            }\n            QPushButton:disabled {\n                background-color: #cccccc;\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "381-385",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "495-499",
        "block_hash": "fdf1ccdd570e0cbf755b138995cc8bb5",
        "content": "            QPushButton:disabled {\n                background-color: #cccccc;\n                color:..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "452-456",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "504-508",
        "block_hash": "23d5cdec9af599badc53e844a0539296",
        "content": "            QPushButton {\n                background-color: #f44336;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "453-457",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "505-509",
        "block_hash": "919cd9ffd02225ad5199fcc94bf9426f",
        "content": "                background-color: #f44336;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "470-474",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "506-510",
        "block_hash": "f04ec3760eaba91463ac78e51c6b8a91",
        "content": "                color: white;\n                border: none;\n                padding: 8px 16px;\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "471-475",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "507-511",
        "block_hash": "21acc4ee412a5761d2ae2c885d04079a",
        "content": "                border: none;\n                padding: 8px 16px;\n                border-radius: 4px;..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "472-476",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "508-512",
        "block_hash": "59d7dbecda76b32f9ebb60416bcfbb05",
        "content": "                padding: 8px 16px;\n                border-radius: 4px;\n            }\n            QPu..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "473-477",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "509-513",
        "block_hash": "f778fe84a3ddca7daf638c5ee69d82a5",
        "content": "                border-radius: 4px;\n            }\n            QPushButton:hover {\n                ba..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "452-456",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "520-524",
        "block_hash": "23d5cdec9af599badc53e844a0539296",
        "content": "            QPushButton {\n                background-color: #FF9800;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "453-457",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "521-525",
        "block_hash": "919cd9ffd02225ad5199fcc94bf9426f",
        "content": "                background-color: #FF9800;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "470-474",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "522-526",
        "block_hash": "f04ec3760eaba91463ac78e51c6b8a91",
        "content": "                color: white;\n                border: none;\n                padding: 8px 16px;\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "471-475",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "523-527",
        "block_hash": "21acc4ee412a5761d2ae2c885d04079a",
        "content": "                border: none;\n                padding: 8px 16px;\n                border-radius: 4px;..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "472-476",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "524-528",
        "block_hash": "59d7dbecda76b32f9ebb60416bcfbb05",
        "content": "                padding: 8px 16px;\n                border-radius: 4px;\n            }\n            QPu..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "473-477",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "525-529",
        "block_hash": "f778fe84a3ddca7daf638c5ee69d82a5",
        "content": "                border-radius: 4px;\n            }\n            QPushButton:hover {\n                ba..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "452-456",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "536-540",
        "block_hash": "23d5cdec9af599badc53e844a0539296",
        "content": "            QPushButton {\n                background-color: #9C27B0;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "453-457",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "537-541",
        "block_hash": "919cd9ffd02225ad5199fcc94bf9426f",
        "content": "                background-color: #9C27B0;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "470-474",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "538-542",
        "block_hash": "f04ec3760eaba91463ac78e51c6b8a91",
        "content": "                color: white;\n                border: none;\n                padding: 8px 16px;\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "471-475",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "539-543",
        "block_hash": "21acc4ee412a5761d2ae2c885d04079a",
        "content": "                border: none;\n                padding: 8px 16px;\n                border-radius: 4px;..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "472-476",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "540-544",
        "block_hash": "59d7dbecda76b32f9ebb60416bcfbb05",
        "content": "                padding: 8px 16px;\n                border-radius: 4px;\n            }\n            QPu..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "473-477",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "541-545",
        "block_hash": "f778fe84a3ddca7daf638c5ee69d82a5",
        "content": "                border-radius: 4px;\n            }\n            QPushButton:hover {\n                ba..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "452-456",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "552-556",
        "block_hash": "23d5cdec9af599badc53e844a0539296",
        "content": "            QPushButton {\n                background-color: #2196F3;\n                color: white;\n ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "453-457",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "553-557",
        "block_hash": "919cd9ffd02225ad5199fcc94bf9426f",
        "content": "                background-color: #2196F3;\n                color: white;\n                border: non..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "454-458",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "554-558",
        "block_hash": "70b35b822ff24d0192c2c052fd31f3dc",
        "content": "                color: white;\n                border: none;\n                padding: 8px 16px;\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "455-459",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "555-559",
        "block_hash": "60e69c30abc61befc379a3beaadac8c2",
        "content": "                border: none;\n                padding: 8px 16px;\n                border-radius: 4px;..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "456-460",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "556-560",
        "block_hash": "066bec9b2ae8cac938947f9406e87ef5",
        "content": "                padding: 8px 16px;\n                border-radius: 4px;\n                font-weight: ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "457-461",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "557-561",
        "block_hash": "fd592ab579ff4b31c19cd1a5b3e2a6b5",
        "content": "                border-radius: 4px;\n                font-weight: bold;\n            }\n            QPu..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "458-462",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "558-562",
        "block_hash": "6b299abefc7721d521053fa219fcf381",
        "content": "                font-weight: bold;\n            }\n            QPushButton:hover {\n                bac..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "577-581",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "578-582",
        "block_hash": "00f2c76ee8bbc7897fc6b8d0b3dd4875",
        "content": "        # 状态标签\n        self.status_label = QLabel(\"请输入参数或粘贴抓包数据\")\n        self.status_label.setStyle..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "582-586",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "583-587",
        "block_hash": "cea01c71a24acec617556e7ba348c4f5",
        "content": "        control_layout.addWidget(params_label)\n        control_layout.addWidget(self.params_display)..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "596-600",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "597-601",
        "block_hash": "46150be83b58c4b04219854e277ad398",
        "content": "            text_content = self.text_input.toPlainText().strip()\n            if text_content:\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "601-605",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "602-606",
        "block_hash": "b3b04bd0b2dfe9616ce66466d5c0d9a9",
        "content": "            # 从手动输入中获取参数\n            manual_params = self.get_manual_params()\n            self.extra..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "606-610",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "607-611",
        "block_hash": "4f4e45f8f8ac2e42bbfbffef72eb6671",
        "content": "            self.update_params_display()\n\n            # 验证参数\n            is_valid, missing = Paramet..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "622-626",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "623-627",
        "block_hash": "a3604ff1e682ebadc1b2bc035279a292",
        "content": "    def get_manual_params(self):\n        \"\"\"获取手动输入的参数\"\"\"\n        params = {}\n\n        # API域名"
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "633-637",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "634-638",
        "block_hash": "b14727239d8fb61a1d1a2d14a503796a",
        "content": "        # 影院ID\n        cinema_id = self.cinema_input.text().strip()\n        if cinema_id:\n          ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "633-637",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "635-639",
        "block_hash": "b14727239d8fb61a1d1a2d14a503796a",
        "content": "        cinema_id = self.cinema_input.text().strip()\n        if cinema_id:\n            params['cinem..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "638-642",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "639-643",
        "block_hash": "756e9338c9bda240e59674f1321a88e5",
        "content": "        # OpenID\n        openid = self.openid_input.text().strip()\n        if openid:\n            pa..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "638-642",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "640-644",
        "block_hash": "756e9338c9bda240e59674f1321a88e5",
        "content": "        openid = self.openid_input.text().strip()\n        if openid:\n            params['openid'] = ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "643-647",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "644-648",
        "block_hash": "ee626cae966ba298dab74c8a166b9996",
        "content": "        # Token\n        token = self.token_input.text().strip()\n        if token:\n            params..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "445-449",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "659-663",
        "block_hash": "181b42db507bcf1ed3e8238a96bea2a9",
        "content": "\n        for key, value in self.extracted_params.items():\n            # 对敏感信息进行部分隐藏\n            if k..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "446-450",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "660-664",
        "block_hash": "9b67c9d69e03833ce030c48152b8e619",
        "content": "        for key, value in self.extracted_params.items():\n            # 对敏感信息进行部分隐藏\n            if ke..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "447-451",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "661-665",
        "block_hash": "73caa47884c0b0906e6eefcd774d5a31",
        "content": "            # 对敏感信息进行部分隐藏\n            if key in ['token', 'openid'] and len(value) > 12:\n           ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "447-451",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "662-666",
        "block_hash": "73caa47884c0b0906e6eefcd774d5a31",
        "content": "            if key in ['token', 'openid'] and len(value) > 12:\n                display_value = value..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "666-670",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "667-671",
        "block_hash": "d3a0ad7cf4071496df8cc8ba904c8a9c",
        "content": "            display_text += f\"{key}: {display_value}\\n\"\n\n        self.params_display.clear()\n       ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "702-706",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "703-707",
        "block_hash": "85f490b791a53c83521a04a8804741f3",
        "content": "3. 请求头示例：\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\nX-Cinema-ID: 12345\nX-OpenID: ox..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "707-711",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "708-712",
        "block_hash": "9f461b89f4f4f5eb63fd1bdcec52af6b",
        "content": "请将您的实际抓包数据替换上述示例内容。\"\"\"\n\n        self.text_input.setPlainText(example_text)\n        self.status_label..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "739-743",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "740-744",
        "block_hash": "a23a2e790e1dc494f90d7b3bea1d9b69",
        "content": "🔍 需要提取的关键信息：\n- API域名（base_url）：如 https://api.example.com\n- 影院ID（cinema_id）：如 12345\n- 用户认证信息（openid、t..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "750-754",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "751-755",
        "block_hash": "9df3ed551a31a92e0e26c4b6adca095f",
        "content": "💡 提示：\n- 不同影院的小程序API结构可能不同\n- 某些小程序可能有反抓包机制\n- 建议在WiFi环境下进行抓包操作\"\"\"\n"
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "763-767",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "764-768",
        "block_hash": "e61d4c5cd8b0ca9526004ffb40f6d80e",
        "content": "        online_help_button = msg_box.addButton(\"🌐 打开在线教程\", QMessageBox.ActionRole)\n        online_he..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "783-787",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "784-788",
        "block_hash": "716a5fe8e9801b367d5becb4d1b0c361",
        "content": "            self.parse_curl_button.setVisible(True)\n            self.analyze_button.setVisible(False..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "796-800",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "797-801",
        "block_hash": "c72efbeb8ca6de45b8e8acec4a21791c",
        "content": "            from ui.components.curl_parser import CurlParser\n\n            # 获取curl命令\n            cur..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "801-805",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "802-806",
        "block_hash": "3024f7d93c10fe573cfb27652042605d",
        "content": "            if not curl_command:\n                self.curl_result.setText(\"⚠️ 请先粘贴curl命令\")\n         ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "810-814",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "811-815",
        "block_hash": "55cc1ca220d5d46dff81b93008ca7ebd",
        "content": "            self.curl_result.clear()\n            self.curl_result.append(report)\n\n            if par..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "419-423",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "815-819",
        "block_hash": "062b2d0b38c9517971e6fdbc89d56db2",
        "content": "                # 更新提取的参数\n                self.extracted_params.update(params)\n\n                # 🆕 ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "419-423",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "816-820",
        "block_hash": "062b2d0b38c9517971e6fdbc89d56db2",
        "content": "                self.extracted_params.update(params)\n\n                # 🆕 更新参数显示\n                sel..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "820-824",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "821-825",
        "block_hash": "bf167da1e4680fb695225d0f25a4e1a0",
        "content": "                # 🆕 分离影院参数和账号参数\n                cinema_params = self._extract_cinema_params(params)\n..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "857-861",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "858-862",
        "block_hash": "aa2e59afd0a78c501b839e386cc47c4d",
        "content": "    def get_auto_params(self):\n        \"\"\"获取自动监听的参数\"\"\"\n        try:\n            if hasattr(self, 'au..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "864-868",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "865-869",
        "block_hash": "556341def6f32e17005c7b131e83fcc2",
        "content": "                if auto_params:\n                    # 更新提取的参数\n                    self.extracted_par..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "866-870",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "867-871",
        "block_hash": "c1c45ce7caf7b9c050f85c32e8606bab",
        "content": "                    self.extracted_params.update(auto_params)\n\n                    # 更新显示\n          ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "606-610",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "869-873",
        "block_hash": "4f4e45f8f8ac2e42bbfbffef72eb6671",
        "content": "                    # 更新显示\n                    self.update_params_display()\n\n                    # 验..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "606-610",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "870-874",
        "block_hash": "4f4e45f8f8ac2e42bbfbffef72eb6671",
        "content": "                    self.update_params_display()\n\n                    # 验证参数\n                    is_..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "608-612",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "871-875",
        "block_hash": "472c4584f641e9aecc0005ad6f8f7853",
        "content": "\n                    # 验证参数\n                    is_valid, missing = ParameterExtractorHelper.validat..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "442-446",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "901-905",
        "block_hash": "73590012f79d6240bf9e98b7f35b8eaf",
        "content": "            return\n\n        display_text = \"🎉 提取到的参数:\\n\\n\"\n\n        for key, value in self.extracted..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "443-447",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "902-906",
        "block_hash": "cb65db15e01a03e770bfbe698deb0739",
        "content": "\n        display_text = \"🎉 提取到的参数:\\n\\n\"\n\n        for key, value in self.extracted_params.items():\n  ..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "443-447",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "903-907",
        "block_hash": "cb65db15e01a03e770bfbe698deb0739",
        "content": "        display_text = \"🎉 提取到的参数:\\n\\n\"\n\n        for key, value in self.extracted_params.items():\n   ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "907-911",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "908-912",
        "block_hash": "302f820458ec5216d65881a22fc70320",
        "content": "            if key in ['token', 'openid'] and len(value) > 12:\n                display_value = value..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "450-454",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "910-914",
        "block_hash": "dac933f8b5952112946a15b6a1f4def3",
        "content": "            else:\n                display_value = value\n\n            display_text += f\"✅ {key}: {dis..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "918-922",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "919-923",
        "block_hash": "8553b971a061677162f5123b03f32d83",
        "content": "    def _extract_cinema_params(self, params: dict) -> dict:\n        \"\"\"提取影院相关参数\"\"\"\n        cinema_pa..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "923-927",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "924-928",
        "block_hash": "817f849dc890521cae1ac18d4c4e9837",
        "content": "        if 'base_url' in params:\n            cinema_params['base_url'] = params['base_url']\n        ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "930-934",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "931-935",
        "block_hash": "2cd5448a8dd08e82d6a2211ccaa199da",
        "content": "    def _extract_account_params(self, params: dict) -> dict:\n        \"\"\"提取账号相关参数\"\"\"\n        account_..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "946-950",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "947-951",
        "block_hash": "6ac81ad98de90086aa687724ea6f7a25",
        "content": "    def _validate_cinema_params(self, cinema_params: dict) -> bool:\n        \"\"\"验证影院参数是否完整\"\"\"\n       ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "951-955",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "952-956",
        "block_hash": "d65be8b88f9658f64f858d58fc0976cf",
        "content": "    def _validate_account_params(self, account_params: dict) -> bool:\n        \"\"\"验证账号参数是否完整\"\"\"\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "956-960",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "957-961",
        "block_hash": "fd9bfb72d4581b687c4a357ce2ccabe8",
        "content": "    def _get_missing_cinema_params(self, cinema_params: dict) -> list:\n        \"\"\"获取缺失的影院参数\"\"\"\n     ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "968-972",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "969-973",
        "block_hash": "09d9f3468963af01f774810d346042ac",
        "content": "            # 分离参数\n            cinema_params = self._extract_cinema_params(self.extracted_params)\n  ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "824-828",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "972-976",
        "block_hash": "17423b8e8a861c2a257d6b56dd6b89d8",
        "content": "\n            # 验证参数\n            cinema_valid = self._validate_cinema_params(cinema_params)\n         ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "976-980",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "977-981",
        "block_hash": "f67a1cfb6566787a8cfa5938ad29e673",
        "content": "            if not cinema_valid:\n                missing = self._get_missing_cinema_params(cinema_pa..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "981-985",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "982-986",
        "block_hash": "207f4e64b4e23e629ae3c3aace389234",
        "content": "            # 更新状态\n            self.status_label.setText(\"🚀 开始执行curl采集流程...\")\n            self.ok_bu..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "985-989",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "986-990",
        "block_hash": "4c2c64bb0b428579f01a68e6d743151a",
        "content": "            # 步骤1：添加影院\n            cinema_success = self._execute_cinema_addition(cinema_params)\n\n  ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "992-996",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "993-997",
        "block_hash": "aea1e2c97f82b10c4e9da77beb1fb8dd",
        "content": "                if account_success:\n                    self.status_label.setText(\"🎉 curl采集完成：影院和账号都..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1023-1027",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1024-1028",
        "block_hash": "7a236354e2619adec5c78cffdcc758f1",
        "content": "                # 🆕 调用回调函数\n                if self.collection_completed:\n                    self.co..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1023-1027",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1025-1029",
        "block_hash": "7a236354e2619adec5c78cffdcc758f1",
        "content": "                if self.collection_completed:\n                    self.collection_completed(False, e..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1031-1035",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1032-1036",
        "block_hash": "d3455b6ef3644740b2a28c12b77d42de",
        "content": "        except Exception as e:\n            print(f\"[curl采集] 执行错误: {e}\")\n            self.status_labe..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1043-1047",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1044-1048",
        "block_hash": "b5d984a78215e03ee23f4b971c95f1d5",
        "content": "    def _execute_cinema_addition(self, cinema_params: dict) -> bool:\n        \"\"\"执行影院添加步骤\"\"\"\n        ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1048-1052",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1049-1053",
        "block_hash": "b1860c7d8674ebed45a3f767cfe80d2a",
        "content": "            base_url = cinema_params['base_url']\n            cinema_id = cinema_params['cinema_id']\n..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1054-1058",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1055-1059",
        "block_hash": "e76999439bbfafc9aa5cf69dccdfd306",
        "content": "            if self._check_cinema_exists(cinema_id):\n                print(f\"[curl采集] 影院 {cinema_id}..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1059-1063",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1060-1064",
        "block_hash": "29be11ae1c2e0822815861a22e77f8ae",
        "content": "            # 🆕 调用现有的影院添加逻辑\n            from services.cinema_info_api import get_cinema_info, format..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1063-1067",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1064-1068",
        "block_hash": "947bebdb43680bc675ac198d756d3727",
        "content": "            # 🔧 增强调试信息\n            print(f\"[curl采集] 🔍 详细参数检查:\")\n            print(f\"  - base_url: '{..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1063-1067",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1065-1069",
        "block_hash": "947bebdb43680bc675ac198d756d3727",
        "content": "            print(f\"[curl采集] 🔍 详细参数检查:\")\n            print(f\"  - base_url: '{base_url}' (类型: {type(b..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1080-1084",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1081-1085",
        "block_hash": "b0d48627b23b92ea1de63360ae81ae97",
        "content": "            print(f\"[curl采集] 🚀 调用get_cinema_info API...\")\n            print(f\"[curl采集] 📡 API参数: base..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1091-1095",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1092-1096",
        "block_hash": "ffda6c083a3647953d1f8220dd740915",
        "content": "            if not cinema_info:\n                print(f\"[curl采集] 影院验证失败: {clean_base_url}, {cinema_i..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1096-1100",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1097-1101",
        "block_hash": "421ebfd13d8b14f9e1c0e71ec4159ab1",
        "content": "            # 格式化影院数据\n            print(f\"[curl采集] 🔧 格式化影院数据...\")\n            cinema_data = format_c..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1096-1100",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1098-1102",
        "block_hash": "421ebfd13d8b14f9e1c0e71ec4159ab1",
        "content": "            print(f\"[curl采集] 🔧 格式化影院数据...\")\n            cinema_data = format_cinema_data(cinema_info..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1105-1109",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1106-1110",
        "block_hash": "73ddcbb580ebae9786a0da946a688c55",
        "content": "            if cinema_manager.save_cinema_list(cinemas):\n                print(f\"[curl采集] 影院添加成功: {c..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1118-1122",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1119-1123",
        "block_hash": "f2a6e4ed594f2fd6e1479cf454b9e621",
        "content": "        except Exception as e:\n            print(f\"[curl采集] 影院添加错误: {e}\")\n            self.status_la..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1123-1127",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1124-1128",
        "block_hash": "27ac605751924b2ff429ca38dc977040",
        "content": "    def _execute_account_addition(self, account_params: dict) -> bool:\n        \"\"\"执行账号添加步骤\"\"\"\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1128-1132",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1129-1133",
        "block_hash": "8c40cc9015513557d5a548e3512fb21a",
        "content": "            user_id = account_params['user_id']\n            cinema_id = account_params['cinema_id']\n..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1145-1149",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1146-1150",
        "block_hash": "8c74779f9914408ca2517766ebe3317a",
        "content": "                if reply != QMessageBox.Yes:\n                    print(f\"[curl采集] 用户选择不更新账号\")\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1174-1178",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1175-1179",
        "block_hash": "e17bd37f0b5fdf00a2d22f66edac85ba",
        "content": "        except Exception as e:\n            print(f\"[curl采集] 账号添加错误: {e}\")\n            self.status_la..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1185-1189",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1186-1190",
        "block_hash": "ebd2f3d5284a062270d1322e9aa09955",
        "content": "            for cinema in cinemas:\n                if cinema.get('cinemaid') == cinema_id:\n         ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1200-1204",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1201-1205",
        "block_hash": "f31e2d7c9498cbadaee1f5d858479932",
        "content": "            accounts_file = os.path.join(os.path.dirname(__file__), '..', '..', 'data', 'accounts.js..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1225-1229",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1226-1230",
        "block_hash": "46c482859e1ac93c1f816a9591e2e58a",
        "content": "            updated_cinemas = cinema_manager.load_cinema_list()\n            event_bus.cinema_list_up..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1228-1232",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1229-1233",
        "block_hash": "0be55ca55f14ee4ab24df744430746ef",
        "content": "            print(f\"[curl采集] 已触发影院列表刷新事件\")\n\n        except Exception as e:\n            print(f\"[curl..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1240-1244",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1241-1245",
        "block_hash": "0018dea76ce9b629b9dcfddfa16e2da5",
        "content": "            accounts_file = os.path.join(os.path.dirname(__file__), '..', '..', 'data', 'accounts.js..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "314-318",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1242-1246",
        "block_hash": "ae5471f2bfee70b8acc12df35aa9d873",
        "content": "\n            # 确保目录存在\n            os.makedirs(os.path.dirname(accounts_file), exist_ok=True)\n\n      ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1246-1250",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1247-1251",
        "block_hash": "ccc94eeca0f08582934f4cff649f989d",
        "content": "            accounts = []\n            if os.path.exists(accounts_file):\n                with open(ac..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1255-1259",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1256-1260",
        "block_hash": "96b9a9b37a554fd242649e5e4225c363",
        "content": "            updated = False\n            for i, account in enumerate(accounts):\n                if (a..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1260-1264",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1261-1265",
        "block_hash": "c8504caa4ef88a5951d602ca4ad7ecb1",
        "content": "                    accounts[i] = account_data\n                    updated = True\n                  ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1265-1269",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1266-1270",
        "block_hash": "b6413a374b1548bcf0528d76a7fa2669",
        "content": "            if not updated:\n                # 添加新账号\n                accounts.append(account_data)\n  ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1270-1274",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1271-1275",
        "block_hash": "2b36487fcbd2b9cc6740392b037e482e",
        "content": "            # 保存账号数据\n            with open(accounts_file, \"w\", encoding=\"utf-8\") as f:\n             ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1283-1287",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines2": "1284-1288",
        "block_hash": "1e480e4acc2c7181b205be51ef9d6469",
        "content": "    def _trigger_account_list_refresh(self):\n        \"\"\"触发账号列表刷新\"\"\"\n        try:\n            from ut..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "7-11",
        "file2": "ui\\interfaces\\plugin_interface.py",
        "lines2": "8-12",
        "block_hash": "5098f2393ae5e2ff8a12171cfb1ff82e",
        "content": "from typing import Dict, Any, Optional\nfrom PyQt5.QtWidgets import QWidget\nfrom PyQt5.QtCore import ..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "35-39",
        "file2": "ui\\interfaces\\plugin_interface.py",
        "lines2": "36-40",
        "block_hash": "dfb917ee393417c2f9d686f1563f11f3",
        "content": "    def set_config(self, config: Dict[str, Any]) -> bool:\n        \"\"\"设置插件配置\"\"\"\n        raise NotImpl..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "51-55",
        "file2": "ui\\interfaces\\plugin_interface.py",
        "lines2": "52-56",
        "block_hash": "7473dc31800412bb1664b2db5de90a0c",
        "content": "    def get_widget(self) -> QWidget:\n        \"\"\"获取Qt组件\"\"\"\n        raise NotImplementedError(\"子类必须实现g..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "67-71",
        "file2": "ui\\interfaces\\plugin_interface.py",
        "lines2": "68-72",
        "block_hash": "f3f108b37ab80fee67892dccc9ba96f2",
        "content": "    def is_running(self) -> bool:\n        \"\"\"检查服务是否运行中\"\"\"\n        raise NotImplementedError(\"子类必须实现i..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "95-99",
        "file2": "ui\\interfaces\\plugin_interface.py",
        "lines2": "96-100",
        "block_hash": "d3e6d39e78fc7a6eb273bee844f53cab",
        "content": "    def unsubscribe(self, event_name: str, callback):\n        \"\"\"取消订阅事件\"\"\"\n        if event_name in ..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "124-128",
        "file2": "ui\\interfaces\\plugin_interface.py",
        "lines2": "125-129",
        "block_hash": "371ae15e2ef3219233d0f94bb4cd735e",
        "content": "    def register_plugin(self, plugin_id: str, plugin: IPluginInterface):\n        \"\"\"注册插件\"\"\"\n        ..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "154-158",
        "file2": "ui\\interfaces\\plugin_interface.py",
        "lines2": "155-159",
        "block_hash": "f7d51178eb53ff3859dc247a484f91dd",
        "content": "    def get_active_plugins(self) -> Dict[str, QWidget]:\n        \"\"\"获取所有激活的插件\"\"\"\n        return self...."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "16-20",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "17-21",
        "block_hash": "d8de0a2407a42158e92547552cec036c",
        "content": "from ui.widgets.classic_components import (\n    ClassicGroupBox, ClassicButton, ClassicLineEdit, Cla..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "25-29",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "26-30",
        "block_hash": "bcdda83e3f48132bbe3a8fd453d784d3",
        "content": "    # 定义信号\n    account_selected = pyqtSignal(dict)  # 账号选择信号\n    account_login_requested = pyqtSigna..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "34-38",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "35-39",
        "block_hash": "df8822f551317351c9871a6b7e1a6881",
        "content": "        self.current_account = None\n        self.accounts_data = []\n        self.current_cinema_id =..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "40-44",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "41-45",
        "block_hash": "fef360f004dbc2697fa04d9b173e1138",
        "content": "        self._widget_interface = IWidgetInterface()\n        \n        # 初始化界面\n        self.initialize..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "48-52",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "49-53",
        "block_hash": "60e2d7c0f2d144e4f3005db1c5f39c97",
        "content": "    def initialize(self) -> None:\n        \"\"\"初始化组件\"\"\"\n        self._setup_ui()\n        self._connect..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "54-58",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "55-59",
        "block_hash": "cdf36c02d203d7d7a6acdd23dd03c842",
        "content": "        self.refresh_accounts()\n    \n    def cleanup(self) -> None:\n        \"\"\"清理组件资源\"\"\"\n        # 断..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "56-60",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "57-61",
        "block_hash": "330a808eaf0846961696f31a907f1689",
        "content": "    def cleanup(self) -> None:\n        \"\"\"清理组件资源\"\"\"\n        # 断开全局事件连接\n        event_bus.user_login_..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "75-79",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "76-80",
        "block_hash": "188af0ee721e7d527887dc291d10e70f",
        "content": "        # 账号登录区\n        self.login_group = ClassicGroupBox(\"影院账号登录\")\n        self._build_login_area(..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "75-79",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "77-81",
        "block_hash": "188af0ee721e7d527887dc291d10e70f",
        "content": "        self.login_group = ClassicGroupBox(\"影院账号登录\")\n        self._build_login_area()\n        layout..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "80-84",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "81-85",
        "block_hash": "e998138eeb72f3b59ddd52971e4bdb57",
        "content": "        # 账号列表区\n        self.account_group = ClassicGroupBox(\"账号列表\")\n        self._build_account_lis..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "80-84",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "82-86",
        "block_hash": "e998138eeb72f3b59ddd52971e4bdb57",
        "content": "        self.account_group = ClassicGroupBox(\"账号列表\")\n        self._build_account_list()\n        layo..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "137-141",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "138-142",
        "block_hash": "211390114e66dc1de76acd54a19b6bec",
        "content": "        # 刷新按钮\n        self.refresh_btn = ClassicButton(\"刷新账号\", \"default\")\n        self.refresh_btn...."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "137-141",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "139-143",
        "block_hash": "211390114e66dc1de76acd54a19b6bec",
        "content": "        self.refresh_btn = ClassicButton(\"刷新账号\", \"default\")\n        self.refresh_btn.setMaximumWidth..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "142-146",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "143-147",
        "block_hash": "a141112a8d4cd34ed3a78ddf38541b43",
        "content": "        # 账号表格 - 🆕 修改为三列：账号、余额、积分\n        self.account_table = ClassicTableWidget()\n        self.acc..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "142-146",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "144-148",
        "block_hash": "a141112a8d4cd34ed3a78ddf38541b43",
        "content": "        self.account_table = ClassicTableWidget()\n        self.account_table.setColumnCount(3)\n     ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "147-151",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "148-152",
        "block_hash": "2892cc7ea0951b35f423f7ad692fa562",
        "content": "        # 🆕 移除悬停效果，设置选择行为\n        self.account_table.setSelectionBehavior(self.account_table.SelectR..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "147-151",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "149-153",
        "block_hash": "2892cc7ea0951b35f423f7ad692fa562",
        "content": "        self.account_table.setSelectionBehavior(self.account_table.SelectRows)\n        self.account_..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "178-182",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "179-183",
        "block_hash": "35c82043570c85bf749be13eb317ba93",
        "content": "        # 先设置固定模式，再设置宽度\n        header.setSectionResizeMode(0, header.Fixed)  # 账号列固定宽度\n        head..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "178-182",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "180-184",
        "block_hash": "35c82043570c85bf749be13eb317ba93",
        "content": "        header.setSectionResizeMode(0, header.Fixed)  # 账号列固定宽度\n        header.setSectionResizeMode(..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "183-187",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "184-188",
        "block_hash": "171c0c451ae6966c592fd27cd961a1c4",
        "content": "        # 然后设置具体宽度\n        header.resizeSection(0, 110)  # 账号列 - 缩小10px\n        header.resizeSection..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "183-187",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "185-189",
        "block_hash": "171c0c451ae6966c592fd27cd961a1c4",
        "content": "        header.resizeSection(0, 110)  # 账号列 - 缩小10px\n        header.resizeSection(1, 60)   # 余额列 - 缩..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "188-192",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "189-193",
        "block_hash": "6070b9c2737968185937dc3708e998f5",
        "content": "        # 设置表格固定宽度，避免出现滚动条\n        self.account_table.setFixedWidth(240)  # 110+60+50+20(边距) = 240\n ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "193-197",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "194-198",
        "block_hash": "2ea5aefd207275b994de283d520c163a",
        "content": "        self.account_table.setContextMenuPolicy(Qt.CustomContextMenu)\n        self.account_table.cus..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "196-200",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "197-201",
        "block_hash": "d03c9926b56d5b1ce3022ebd357c3b02",
        "content": "        layout.addWidget(self.account_table)\n    \n    def _connect_signals(self):\n        \"\"\"连接信号槽\"\"..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "208-212",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "209-213",
        "block_hash": "ef04acbcddbacf8d765c23074e9e0bac",
        "content": "    def _connect_global_events(self):\n        \"\"\"连接全局事件\"\"\"\n        # 监听用户登录成功事件\n        event_bus.us..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "211-215",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "212-216",
        "block_hash": "3f6c7852144ce5a774a19c0be5fa67b8",
        "content": "        event_bus.user_login_success.connect(self._on_user_login_success)\n\n        # 🆕 监听影院选择事件\n    ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "216-220",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "217-221",
        "block_hash": "e3caadffb7ee5e4a3b719b2f799a390e",
        "content": "        # 🆕 监听账号数据变更事件 - 修复curl采集后不刷新的问题\n        if hasattr(event_bus, 'account_list_updated'):\n    ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "228-232",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "229-233",
        "block_hash": "85efc2f97dcb9032a9c618b1e5e56277",
        "content": "            phone = self.phone_input.text().strip()\n            openid = self.openid_input.text().st..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "232-236",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "233-237",
        "block_hash": "fa4b8bd6ba91278cb35ab480c7ce819f",
        "content": "            # 验证输入\n            if not phone:\n                QMessageBox.warning(self, \"输入错误\", \"请输入手..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "241-245",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "242-246",
        "block_hash": "8d7f93e03ee14b3dcbeab47f34f9d1fd",
        "content": "            if not token:\n                QMessageBox.warning(self, \"输入错误\", \"请输入Token\")\n            ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "253-257",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "254-258",
        "block_hash": "288326444e9d9e6d97ed17278593003d",
        "content": "            self.account_login_requested.emit(login_data)\n            \n        except Exception as e..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "271-275",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "272-276",
        "block_hash": "de203ef527020f71d24f293e331c1b4f",
        "content": "                        self.account_selected.emit(account_data)\n                        \n          ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "273-277",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "274-278",
        "block_hash": "9162b183befa26ecd5002e2001762925",
        "content": "                        # 发布全局事件\n                        event_bus.account_changed.emit(account_data..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "276-280",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "277-281",
        "block_hash": "211e0fe5b0a3cb7a9e092511d184d16f",
        "content": "                        print(f\"[账号组件] 选择账号: {account_data.get('userid', 'N/A')}\")\n        \n        ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "278-282",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "279-283",
        "block_hash": "ae88c8855a6b9e3fe3643061c55c62d4",
        "content": "        except Exception as e:\n            print(f\"[账号组件] 选择处理错误: {e}\")\n    \n    # 🆕 移除双击处理方法，避免快速登录..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "282-286",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "283-287",
        "block_hash": "c20aecc95ddd2de0fcf5e43d89cbbd1f",
        "content": "\n    def _show_context_menu(self, position):\n        \"\"\"显示右键菜单 - 🆕 增强版右键菜单\"\"\"\n        try:\n         ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "287-291",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "288-292",
        "block_hash": "da1872bebca01bd15766976c5f509241",
        "content": "            item = self.account_table.itemAt(position)\n            if not item:\n                retu..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "292-296",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "293-297",
        "block_hash": "09dd0156c49df8104392b821b604662f",
        "content": "            row = item.row()\n            account_item = self.account_table.item(row, 0)\n            ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "297-301",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "298-302",
        "block_hash": "291363a3e216657ebe0b447c7d0a4ff8",
        "content": "            # 获取账号数据\n            account_data = account_item.data(Qt.UserRole)\n            if not ac..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "297-301",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "299-303",
        "block_hash": "291363a3e216657ebe0b447c7d0a4ff8",
        "content": "            account_data = account_item.data(Qt.UserRole)\n            if not account_data:\n         ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "302-306",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "303-307",
        "block_hash": "b1196454465bad9ed3c9ed557fdf7ee4",
        "content": "            # 🆕 创建右键菜单\n            from PyQt5.QtWidgets import QMenu\n            menu = QMenu(self)\n..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "306-310",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "307-311",
        "block_hash": "4f7c77c68b825c7e78f188f5411c6e3f",
        "content": "            # 设置为主账号\n            set_main_action = menu.addAction(\"设置为主账号\")\n            set_main_act..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "310-314",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "311-315",
        "block_hash": "0fe1c08b3bc7cac7a0d797bb726e59b9",
        "content": "            # 设置支付密码\n            set_password_action = menu.addAction(\"设置支付密码\")\n            set_pass..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "314-318",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "315-319",
        "block_hash": "2b51586796d4a9ce0db049844f7fde74",
        "content": "            # 删除账号\n            delete_action = menu.addAction(\"删除账号\")\n            delete_action.trig..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "319-323",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "320-324",
        "block_hash": "240a79b0a5924267bfa645fb0e3ac368",
        "content": "            menu.exec_(self.account_table.mapToGlobal(position))\n\n        except Exception as e:\n   ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "330-334",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "331-335",
        "block_hash": "da96d9b93d27a226ffb430a31e9eca45",
        "content": "            if not userid or not cinemaid:\n                print(f\"[账号组件] 设置主账号失败: 账号信息不完整\")\n       ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "334-338",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "335-339",
        "block_hash": "a1c3c9f25b4776fd0daf762be63c2f86",
        "content": "            # 🆕 直接执行设置，无确认对话框\n            success = self._update_main_account_in_file(cinemaid, user..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "339-343",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "340-344",
        "block_hash": "80f55688a045057c6331338a9e044b1d",
        "content": "                self.refresh_accounts()\n                print(f\"[账号组件] 主账号设置成功: {userid} (影院: {cinem..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "347-351",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "348-352",
        "block_hash": "d434bc47b56557e16ae89b463edf9835",
        "content": "    def _set_payment_password(self, account_data: dict):\n        \"\"\"设置支付密码\"\"\"\n        try:\n         ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "359-363",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "360-364",
        "block_hash": "5307089798e7c3dfe8768188fcf53f15",
        "content": "            if ok and password:\n                # 保存密码到账号数据（实际应用中应该加密存储）\n                account_dat..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "361-365",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "362-366",
        "block_hash": "9015ed25d98936abffcfcbaac345081a",
        "content": "                account_data['payment_password'] = password\n\n                # 保存到文件\n               ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "364-368",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "365-369",
        "block_hash": "9c13c3a2e54a29f40158faa7435c0f0e",
        "content": "                self._save_payment_password_to_file(account_data)\n\n                QMessageBox.infor..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "369-373",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "370-374",
        "block_hash": "7e2ef05e86ab7d6d6a662254df79c8a9",
        "content": "        except Exception as e:\n            from PyQt5.QtWidgets import QMessageBox\n            QMess..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "374-378",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "375-379",
        "block_hash": "ce54e703639e7f50ddead59b4d3bbe42",
        "content": "    def _delete_account(self, account_data: dict):\n        \"\"\"删除账号\"\"\"\n        try:\n            from ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "275-279",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "384-388",
        "block_hash": "96be0c1b11f35eb6bcf9a5a227b283bc",
        "content": "                QMessageBox.Yes | QMessageBox.No,\n                QMessageBox.No\n            )\n\n    ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "395-399",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "396-400",
        "block_hash": "1b349a753b5fa2d69ef24f0c58f08b59",
        "content": "                    QMessageBox.information(self, \"操作成功\", \"账号删除成功\")\n                    print(f\"[账号组..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "400-404",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "401-405",
        "block_hash": "f03a7fd32fa679b48f971783a1157405",
        "content": "        except Exception as e:\n            from PyQt5.QtWidgets import QMessageBox\n            QMess..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "405-409",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "406-410",
        "block_hash": "38c2575c480895688c23b3e13545bd55",
        "content": "    def _save_payment_password_to_file(self, account_data: dict):\n        \"\"\"保存支付密码到文件\"\"\"\n        tr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2774-2778",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "412-416",
        "block_hash": "cf78b4db2b9fda44ee13a575991f0c7f",
        "content": "                return False\n\n            # 读取现有账号数据\n            with open(accounts_file, 'r', encod..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "413-417",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "\n            # 读取现有账号数据\n            with open(accounts_file, 'r', encoding='utf-8') as f:\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "414-418",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "            # 读取现有账号数据\n            with open(accounts_file, 'r', encoding='utf-8') as f:\n           ..."
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "104-108",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "428-432",
        "block_hash": "3d111bd2ce047727af9524578b4d9cd6",
        "content": "            # 写回文件\n            with open(accounts_file, 'w', encoding='utf-8') as f:\n               ..."
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "104-108",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "429-433",
        "block_hash": "3d111bd2ce047727af9524578b4d9cd6",
        "content": "            with open(accounts_file, 'w', encoding='utf-8') as f:\n                json.dump(accounts..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "437-441",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "438-442",
        "block_hash": "d414a00fd162ace4a9cf5fb706ee850c",
        "content": "    def _delete_account_from_file(self, account_data: dict) -> bool:\n        \"\"\"从文件中删除账号\"\"\"\n        ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "408-412",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "440-444",
        "block_hash": "b48cd25f88ce3855095414869a61b6e8",
        "content": "        try:\n            accounts_file = \"data/accounts.json\"\n\n            if not os.path.exists(acc..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "409-413",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "441-445",
        "block_hash": "1071e1d18be03b4f7d9ea104b62735ab",
        "content": "            accounts_file = \"data/accounts.json\"\n\n            if not os.path.exists(accounts_file):\n..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "410-414",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "442-446",
        "block_hash": "5b0bc38bfcd7bc8cedf40c5bdd17bc14",
        "content": "\n            if not os.path.exists(accounts_file):\n                return False\n\n            # 读取现有账..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "411-415",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "443-447",
        "block_hash": "30c192330834cf723c963ea2963109a4",
        "content": "            if not os.path.exists(accounts_file):\n                return False\n\n            # 读取现有账号..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2774-2778",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "444-448",
        "block_hash": "cf78b4db2b9fda44ee13a575991f0c7f",
        "content": "                return False\n\n            # 读取现有账号数据\n            with open(accounts_file, 'r', encod..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "445-449",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "\n            # 读取现有账号数据\n            with open(accounts_file, 'r', encoding='utf-8') as f:\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "446-450",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "            # 读取现有账号数据\n            with open(accounts_file, 'r', encoding='utf-8') as f:\n           ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "415-419",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "447-451",
        "block_hash": "85c45a71e78e985f09983b94f81dcc6a",
        "content": "            with open(accounts_file, 'r', encoding='utf-8') as f:\n                accounts = json.lo..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "416-420",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "448-452",
        "block_hash": "65d53e301615175a3fd7813d086a4cbe",
        "content": "                accounts = json.load(f)\n\n            # 删除账号\n            userid = account_data.get('u..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "417-421",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "449-453",
        "block_hash": "227cf3ce45aba6a4fa0e2b40587ffe03",
        "content": "\n            # 删除账号\n            userid = account_data.get('userid', '')\n            cinemaid = accou..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "427-431",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "459-463",
        "block_hash": "a2b73514c2c24b89c17cae3fa4ec7aec",
        "content": "\n            # 写回文件\n            with open(accounts_file, 'w', encoding='utf-8') as f:\n              ..."
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "104-108",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "460-464",
        "block_hash": "3d111bd2ce047727af9524578b4d9cd6",
        "content": "            # 写回文件\n            with open(accounts_file, 'w', encoding='utf-8') as f:\n               ..."
      },
      {
        "file1": "services\\account_api.py",
        "lines1": "104-108",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "461-465",
        "block_hash": "3d111bd2ce047727af9524578b4d9cd6",
        "content": "            with open(accounts_file, 'w', encoding='utf-8') as f:\n                json.dump(accounts..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "430-434",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "462-466",
        "block_hash": "6eca737fab3e955579a2dc7d01df87e3",
        "content": "                json.dump(accounts, f, ensure_ascii=False, indent=2)\n\n            return True\n\n     ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "469-473",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "470-474",
        "block_hash": "e8dbf37b26521df611d33a0b3f2fcdba",
        "content": "    def _update_main_account_in_file(self, cinemaid: str, userid: str) -> bool:\n        \"\"\"更新账号文件中的主..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "474-478",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "475-479",
        "block_hash": "83786cab827b1f29e5a25d636adec628",
        "content": "            if not os.path.exists(accounts_file):\n                print(f\"[账号组件] 账号文件不存在: {accounts_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2774-2778",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "477-481",
        "block_hash": "cf78b4db2b9fda44ee13a575991f0c7f",
        "content": "                return False\n\n            # 读取现有账号数据\n            with open(accounts_file, 'r', encod..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "478-482",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "\n            # 读取现有账号数据\n            with open(accounts_file, 'r', encoding='utf-8') as f:\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "479-483",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "            # 读取现有账号数据\n            with open(accounts_file, 'r', encoding='utf-8') as f:\n           ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "482-486",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "483-487",
        "block_hash": "dafd7fcd6474ea65e66a93491ad02cb0",
        "content": "            # 更新主账号设置\n            updated = False\n            for account in accounts:\n             ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "497-501",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "498-502",
        "block_hash": "9c5fe7c9201d174c3723527a83493993",
        "content": "            if not updated:\n                print(f\"[账号组件] 未找到目标账号: {userid} (影院: {cinemaid})\")\n    ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "427-431",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "501-505",
        "block_hash": "a2b73514c2c24b89c17cae3fa4ec7aec",
        "content": "\n            # 写回文件\n            with open(accounts_file, 'w', encoding='utf-8') as f:\n              ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "427-431",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "502-506",
        "block_hash": "a2b73514c2c24b89c17cae3fa4ec7aec",
        "content": "            # 写回文件\n            with open(accounts_file, 'w', encoding='utf-8') as f:\n               ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "506-510",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "507-511",
        "block_hash": "f4a7d9f023f407a24f89e9de1d3bdc65",
        "content": "            self.all_accounts_data = accounts\n\n            print(f\"[账号组件] 主账号设置已保存到文件\")\n            ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "519-523",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "520-524",
        "block_hash": "7192ba5ec388b3f91e018f2ad257199d",
        "content": "            self.phone_input.clear()\n            self.openid_input.clear()\n            self.token_in..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "523-527",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "524-528",
        "block_hash": "10bbd298eaee4f9714d5e17625836e2e",
        "content": "            # 刷新账号列表\n            self.refresh_accounts()\n            \n            print(f\"[账号组件] 用户登..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "526-530",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "527-531",
        "block_hash": "fb53d8dc47a11b4c4bc9ea865f8edb98",
        "content": "            print(f\"[账号组件] 用户登录成功，已刷新账号列表\")\n            \n        except Exception as e:\n            ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "542-546",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "543-547",
        "block_hash": "59cca37690a257b7ba44bd62caa794d4",
        "content": "            if cinema_id:\n                self.current_cinema_id = cinema_id\n                self._f..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "548-552",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "549-553",
        "block_hash": "99e4e3a4aff0468467d03177c975dca9",
        "content": "                if self.accounts_data:\n                    selected_account = self._find_main_accoun..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "553-557",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "554-558",
        "block_hash": "c049855178770e0e151cf16bcdbca882",
        "content": "                        selected_account = self.accounts_data[0]\n                        print(f\"[账号..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "560-564",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "561-565",
        "block_hash": "1ec2372bd10acd6349c3bb16aabf791c",
        "content": "                    # 找到该账号在表格中的行号并选择\n                    selected_row = self._find_account_row(sele..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "560-564",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "562-566",
        "block_hash": "1ec2372bd10acd6349c3bb16aabf791c",
        "content": "                    selected_row = self._find_account_row(selected_account.get('userid', ''))\n      ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "576-580",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "577-581",
        "block_hash": "82d9703821dd1d9d2d5eb10a5449f059",
        "content": "    def _on_account_list_updated(self, accounts: List[Dict] = None):\n        \"\"\"🆕 账号列表更新事件处理 - 修复cur..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "581-585",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "582-586",
        "block_hash": "b07f7b7107c007c03dd8569d925f9f2f",
        "content": "            # 重新刷新账号数据\n            self.refresh_accounts()\n\n            print(f\"[账号组件] ✅ 账号列表已刷新\")\n"
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "584-588",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "585-589",
        "block_hash": "4e21eb00ccc4aa84f292efac0e64e2f5",
        "content": "            print(f\"[账号组件] ✅ 账号列表已刷新\")\n\n        except Exception as e:\n            print(f\"[账号组件] 账号..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "589-593",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "590-594",
        "block_hash": "9794a53e7d5db6d41fd943046a24fdeb",
        "content": "    def _on_cinema_list_updated(self, cinemas: List[Dict] = None):\n        \"\"\"🆕 影院列表更新事件处理\"\"\"\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "557-561",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "631-635",
        "block_hash": "71a5386ab69c191bafc01b84f36a9c35",
        "content": "        try:\n            # 从影院管理器获取影院数据\n            from services.cinema_manager import cinema_manag..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "652-656",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "653-657",
        "block_hash": "fd354de999061d866a8bffb82198dd31",
        "content": "            filtered_accounts = [\n                account for account in self.all_accounts_data \n   ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "658-662",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "659-663",
        "block_hash": "792a771b918d3c821ef503cc78e9dcf3",
        "content": "            self.accounts_data = filtered_accounts\n            self._update_account_table(filtered_a..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "661-665",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "662-666",
        "block_hash": "a2cefb58a5d2e09085bd52136c4b6bd6",
        "content": "            print(f\"[账号组件] 影院 {cinema_id} 关联账号: {len(filtered_accounts)} 个\")\n            \n        ex..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "676-680",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "677-681",
        "block_hash": "6151b2462fef15eec271cd0aa1f9a1f4",
        "content": "                if cinema_id:\n                    self.current_cinema_id = cinema_id\n               ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "684-688",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "685-689",
        "block_hash": "30354f7b73df35208e040862bdc88a2a",
        "content": "    def refresh_accounts(self):\n        \"\"\"刷新账号列表\"\"\"\n        try:\n            accounts_file = \"data/..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "689-693",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "690-694",
        "block_hash": "ee5f329ce1411e2efca2ab424a64932c",
        "content": "            if not os.path.exists(accounts_file):\n                self.account_table.setRowCount(0)\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2775-2779",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "694-698",
        "block_hash": "2984e6c9960198fdd7c9bd1935102199",
        "content": "            \n            with open(accounts_file, 'r', encoding='utf-8') as f:\n                accou..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "697-701",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "698-702",
        "block_hash": "b4bbb52b1413341167ebbf3be3c28164",
        "content": "            # 🆕 保存所有账号数据到缓存\n            self.all_accounts_data = accounts\n            print(f\"[账号组件]..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "701-705",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "702-706",
        "block_hash": "d5a047040f4403464f7d8710d88ab9a9",
        "content": "            # 🆕 如果没有设置当前影院，则设置默认影院\n            if not self.current_cinema_id:\n                self._..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "706-710",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "707-711",
        "block_hash": "72ec8e79d7f37955bf0ca7272e7d83c2",
        "content": "                self._filter_accounts_by_cinema(self.current_cinema_id)\n            \n            # 发..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "715-719",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "716-720",
        "block_hash": "1543654a039b5ab7c4f5b73fced95487",
        "content": "    def _update_account_table(self, accounts: List[Dict]):\n        \"\"\"更新账号表格\"\"\"\n        try:\n       ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "720-724",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "721-725",
        "block_hash": "b91a051dc1dc236a004b696366ae7924",
        "content": "            for i, account in enumerate(accounts):\n                userid = account.get(\"userid\", \"\"..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "728-732",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "729-733",
        "block_hash": "1050582dc408ffff9f708ceae550bb03",
        "content": "                # 🆕 只设置三列：账号、余额、积分\n                self.account_table.setItem(i, 0, self.account_tab..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "728-732",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "730-734",
        "block_hash": "1050582dc408ffff9f708ceae550bb03",
        "content": "                self.account_table.setItem(i, 0, self.account_table.__class__.createItem(display_use..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "740-744",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "741-745",
        "block_hash": "05351213013ea5874b243c2e7c38447a",
        "content": "    def _get_cinema_name_by_id(self, cinema_id: str) -> str:\n        \"\"\"根据影院ID获取影院名称\"\"\"\n        try:..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "773-777",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "774-778",
        "block_hash": "e3d944b2ec88d5f2275722b77ee2bdfa",
        "content": "    def clear_selection(self):\n        \"\"\"清除选择\"\"\"\n        self.account_table.clearSelection()\n      ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "778-782",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "779-783",
        "block_hash": "fb1ff1a0041c10a1d579f7beaf161d9e",
        "content": "    def select_account_by_id(self, userid: str) -> bool:\n        \"\"\"🔧 根据用户ID选择账号 - 修复事件触发\"\"\"\n       ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "783-787",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "784-788",
        "block_hash": "f880cb8dfc0bad8a53f5aabe90633d15",
        "content": "            for i in range(self.account_table.rowCount()):\n                item = self.account_table..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "791-795",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "792-796",
        "block_hash": "7d85e4aabd7ee7d8b6d59628b4d8a1b6",
        "content": "                    # 🔧 获取账号数据并设置为当前账号\n                    account_data = item.data(Qt.UserRole)\n   ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "791-795",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "793-797",
        "block_hash": "7d85e4aabd7ee7d8b6d59628b4d8a1b6",
        "content": "                    account_data = item.data(Qt.UserRole)\n                    if account_data:\n     ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "794-798",
        "block_hash": "bd2d062f4541e11b04a7f1f41e404945",
        "content": "                    if account_data:\n                        self.current_account = account_data\n\n  ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "271-275",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "796-800",
        "block_hash": "de203ef527020f71d24f293e331c1b4f",
        "content": "\n                        # 🔧 发出账号选择信号\n                        self.account_selected.emit(account_dat..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "817-821",
        "file2": "ui\\widgets\\account_widget.py",
        "lines2": "818-822",
        "block_hash": "434cc6da1d82a67e8bb27a578af3c994",
        "content": "def createItem(text: str):\n    \"\"\"创建表格项目\"\"\"\n    from PyQt5.QtWidgets import QTableWidgetItem\n    ret..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "47-51",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "48-52",
        "block_hash": "195074d4728e4f036963290a184fdcbc",
        "content": "    def __init__(self, text=\"\", button_type=\"default\", parent=None):\n        super().__init__(text, ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "266-270",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "66-70",
        "block_hash": "37e10c5b226ad2b6614697dad2ce3a5d",
        "content": "                }\n                QPushButton:hover {\n                    background-color: #106ebe;..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "267-271",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "67-71",
        "block_hash": "0cea504a5a536dcfb0a2eaa5ec953120",
        "content": "                QPushButton:hover {\n                    background-color: #106ebe;\n                 ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "68-72",
        "block_hash": "1d47e8451d5cc01437a41f1428acf011",
        "content": "                    background-color: #106ebe;\n                    border-color: #106ebe;\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "56-60",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "82-86",
        "block_hash": "f7273c60eb73bb0c6d8a220ef5ff3e18",
        "content": "            style = \"\"\"\n                QPushButton {\n                    background-color: #107c10;..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "57-61",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "83-87",
        "block_hash": "714f3e514f528b0bbf249fcb1ba6cbd4",
        "content": "                QPushButton {\n                    background-color: #107c10;\n                    col..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "58-62",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "84-88",
        "block_hash": "4b9ec4f01542e8b75fc8fcbf79db51c6",
        "content": "                    background-color: #107c10;\n                    color: white;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "59-63",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "85-89",
        "block_hash": "e037909b3ab4ed55908d301dae46dbf3",
        "content": "                    color: white;\n                    border: 1px solid #107c10;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "60-64",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "86-90",
        "block_hash": "edc07960a9193158b6e69ab91f9d42ef",
        "content": "                    border: 1px solid #107c10;\n                    padding: 8px 16px;\n              ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "61-65",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "87-91",
        "block_hash": "c6ba902b2c87457f9ff01c0bc2f6e12e",
        "content": "                    padding: 8px 16px;\n                    border-radius: 3px;\n                    f..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "62-66",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "88-92",
        "block_hash": "e00c85dacdb8abd2353b1194e69d64cb",
        "content": "                    border-radius: 3px;\n                    font: 11px \"Microsoft YaHei\";\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "63-67",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "89-93",
        "block_hash": "1b0c8a6e9e8c25ba3e3c14959aa30f52",
        "content": "                    font: 11px \"Microsoft YaHei\";\n                    min-width: 60px;\n             ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "64-68",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "90-94",
        "block_hash": "5b99f4eb315330b87e63c376d77756a7",
        "content": "                    min-width: 60px;\n                    min-height: 24px;\n                }\n       ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "65-69",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "91-95",
        "block_hash": "a8f87c7b2c8826aeb907600d1b658f0a",
        "content": "                    min-height: 24px;\n                }\n                QPushButton:hover {\n        ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "266-270",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "92-96",
        "block_hash": "37e10c5b226ad2b6614697dad2ce3a5d",
        "content": "                }\n                QPushButton:hover {\n                    background-color: #0e6e0e;..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "267-271",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "93-97",
        "block_hash": "0cea504a5a536dcfb0a2eaa5ec953120",
        "content": "                QPushButton:hover {\n                    background-color: #0e6e0e;\n                 ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "94-98",
        "block_hash": "1d47e8451d5cc01437a41f1428acf011",
        "content": "                    background-color: #0e6e0e;\n                    border-color: #0e6e0e;\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "69-73",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "95-99",
        "block_hash": "208fc30f546190f6c6bb138c4045258d",
        "content": "                    border-color: #0e6e0e;\n                }\n                QPushButton:pressed {\n ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "70-74",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "96-100",
        "block_hash": "ecb3e81a8ad2a8d749a69b72e212c218",
        "content": "                }\n                QPushButton:pressed {\n                    background-color: #0c5c0..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "56-60",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "103-107",
        "block_hash": "f7273c60eb73bb0c6d8a220ef5ff3e18",
        "content": "            style = \"\"\"\n                QPushButton {\n                    background-color: #ff8c00;..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "57-61",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "104-108",
        "block_hash": "714f3e514f528b0bbf249fcb1ba6cbd4",
        "content": "                QPushButton {\n                    background-color: #ff8c00;\n                    col..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "58-62",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "105-109",
        "block_hash": "4b9ec4f01542e8b75fc8fcbf79db51c6",
        "content": "                    background-color: #ff8c00;\n                    color: white;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "59-63",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "106-110",
        "block_hash": "e037909b3ab4ed55908d301dae46dbf3",
        "content": "                    color: white;\n                    border: 1px solid #ff8c00;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "60-64",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "107-111",
        "block_hash": "edc07960a9193158b6e69ab91f9d42ef",
        "content": "                    border: 1px solid #ff8c00;\n                    padding: 8px 16px;\n              ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "61-65",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "108-112",
        "block_hash": "c6ba902b2c87457f9ff01c0bc2f6e12e",
        "content": "                    padding: 8px 16px;\n                    border-radius: 3px;\n                    f..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "62-66",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "109-113",
        "block_hash": "e00c85dacdb8abd2353b1194e69d64cb",
        "content": "                    border-radius: 3px;\n                    font: 11px \"Microsoft YaHei\";\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "63-67",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "110-114",
        "block_hash": "1b0c8a6e9e8c25ba3e3c14959aa30f52",
        "content": "                    font: 11px \"Microsoft YaHei\";\n                    min-width: 60px;\n             ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "64-68",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "111-115",
        "block_hash": "5b99f4eb315330b87e63c376d77756a7",
        "content": "                    min-width: 60px;\n                    min-height: 24px;\n                }\n       ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "65-69",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "112-116",
        "block_hash": "a8f87c7b2c8826aeb907600d1b658f0a",
        "content": "                    min-height: 24px;\n                }\n                QPushButton:hover {\n        ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "266-270",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "113-117",
        "block_hash": "37e10c5b226ad2b6614697dad2ce3a5d",
        "content": "                }\n                QPushButton:hover {\n                    background-color: #e67c00;..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "267-271",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "114-118",
        "block_hash": "0cea504a5a536dcfb0a2eaa5ec953120",
        "content": "                QPushButton:hover {\n                    background-color: #e67c00;\n                 ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "115-119",
        "block_hash": "1d47e8451d5cc01437a41f1428acf011",
        "content": "                    background-color: #e67c00;\n                    border-color: #e67c00;\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "69-73",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "116-120",
        "block_hash": "208fc30f546190f6c6bb138c4045258d",
        "content": "                    border-color: #e67c00;\n                }\n                QPushButton:pressed {\n ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "70-74",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "117-121",
        "block_hash": "ecb3e81a8ad2a8d749a69b72e212c218",
        "content": "                }\n                QPushButton:pressed {\n                    background-color: #cc6c0..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "97-101",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "118-122",
        "block_hash": "bfc8aadf41e42f3542d15cb6f1a7de4c",
        "content": "                QPushButton:pressed {\n                    background-color: #cc6c00;\n               ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "56-60",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "124-128",
        "block_hash": "f7273c60eb73bb0c6d8a220ef5ff3e18",
        "content": "            style = \"\"\"\n                QPushButton {\n                    background-color: #d13438;..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "57-61",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "125-129",
        "block_hash": "714f3e514f528b0bbf249fcb1ba6cbd4",
        "content": "                QPushButton {\n                    background-color: #d13438;\n                    col..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "58-62",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "126-130",
        "block_hash": "4b9ec4f01542e8b75fc8fcbf79db51c6",
        "content": "                    background-color: #d13438;\n                    color: white;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "59-63",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "127-131",
        "block_hash": "e037909b3ab4ed55908d301dae46dbf3",
        "content": "                    color: white;\n                    border: 1px solid #d13438;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "60-64",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "128-132",
        "block_hash": "edc07960a9193158b6e69ab91f9d42ef",
        "content": "                    border: 1px solid #d13438;\n                    padding: 8px 16px;\n              ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "61-65",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "129-133",
        "block_hash": "c6ba902b2c87457f9ff01c0bc2f6e12e",
        "content": "                    padding: 8px 16px;\n                    border-radius: 3px;\n                    f..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "62-66",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "130-134",
        "block_hash": "e00c85dacdb8abd2353b1194e69d64cb",
        "content": "                    border-radius: 3px;\n                    font: 11px \"Microsoft YaHei\";\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "63-67",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "131-135",
        "block_hash": "1b0c8a6e9e8c25ba3e3c14959aa30f52",
        "content": "                    font: 11px \"Microsoft YaHei\";\n                    min-width: 60px;\n             ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "64-68",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "132-136",
        "block_hash": "5b99f4eb315330b87e63c376d77756a7",
        "content": "                    min-width: 60px;\n                    min-height: 24px;\n                }\n       ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "65-69",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "133-137",
        "block_hash": "a8f87c7b2c8826aeb907600d1b658f0a",
        "content": "                    min-height: 24px;\n                }\n                QPushButton:hover {\n        ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "266-270",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "134-138",
        "block_hash": "37e10c5b226ad2b6614697dad2ce3a5d",
        "content": "                }\n                QPushButton:hover {\n                    background-color: #b92b2f;..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "267-271",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "135-139",
        "block_hash": "0cea504a5a536dcfb0a2eaa5ec953120",
        "content": "                QPushButton:hover {\n                    background-color: #b92b2f;\n                 ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "136-140",
        "block_hash": "1d47e8451d5cc01437a41f1428acf011",
        "content": "                    background-color: #b92b2f;\n                    border-color: #b92b2f;\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "69-73",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "137-141",
        "block_hash": "208fc30f546190f6c6bb138c4045258d",
        "content": "                    border-color: #b92b2f;\n                }\n                QPushButton:pressed {\n ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "70-74",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "138-142",
        "block_hash": "ecb3e81a8ad2a8d749a69b72e212c218",
        "content": "                }\n                QPushButton:pressed {\n                    background-color: #a1222..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "97-101",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "139-143",
        "block_hash": "bfc8aadf41e42f3542d15cb6f1a7de4c",
        "content": "                QPushButton:pressed {\n                    background-color: #a12226;\n               ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "60-64",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "149-153",
        "block_hash": "edc07960a9193158b6e69ab91f9d42ef",
        "content": "                    border: 1px solid #cccccc;\n                    padding: 8px 16px;\n              ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "61-65",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "150-154",
        "block_hash": "c6ba902b2c87457f9ff01c0bc2f6e12e",
        "content": "                    padding: 8px 16px;\n                    border-radius: 3px;\n                    f..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "62-66",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "151-155",
        "block_hash": "e00c85dacdb8abd2353b1194e69d64cb",
        "content": "                    border-radius: 3px;\n                    font: 11px \"Microsoft YaHei\";\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "63-67",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "152-156",
        "block_hash": "1b0c8a6e9e8c25ba3e3c14959aa30f52",
        "content": "                    font: 11px \"Microsoft YaHei\";\n                    min-width: 60px;\n             ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "64-68",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "153-157",
        "block_hash": "5b99f4eb315330b87e63c376d77756a7",
        "content": "                    min-width: 60px;\n                    min-height: 24px;\n                }\n       ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "65-69",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "154-158",
        "block_hash": "a8f87c7b2c8826aeb907600d1b658f0a",
        "content": "                    min-height: 24px;\n                }\n                QPushButton:hover {\n        ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "266-270",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "155-159",
        "block_hash": "37e10c5b226ad2b6614697dad2ce3a5d",
        "content": "                }\n                QPushButton:hover {\n                    background-color: #f5f5f5;..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "267-271",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "156-160",
        "block_hash": "0cea504a5a536dcfb0a2eaa5ec953120",
        "content": "                QPushButton:hover {\n                    background-color: #f5f5f5;\n                 ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "157-161",
        "block_hash": "1d47e8451d5cc01437a41f1428acf011",
        "content": "                    background-color: #f5f5f5;\n                    border-color: #999999;\n          ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "69-73",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "158-162",
        "block_hash": "208fc30f546190f6c6bb138c4045258d",
        "content": "                    border-color: #999999;\n                }\n                QPushButton:pressed {\n ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "70-74",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "159-163",
        "block_hash": "ecb3e81a8ad2a8d749a69b72e212c218",
        "content": "                }\n                QPushButton:pressed {\n                    background-color: #e6e6e..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "97-101",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "160-164",
        "block_hash": "bfc8aadf41e42f3542d15cb6f1a7de4c",
        "content": "                QPushButton:pressed {\n                    background-color: #e6e6e6;\n               ..."
      },
      {
        "file1": "ui\\components\\cinema_select_panel_pyqt5.py",
        "lines1": "165-169",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "232-236",
        "block_hash": "1ba2a883960e811acf902841c73eba8b",
        "content": "                border-color: #e0e0e0;\n            }\n            QComboBox::drop-down {\n            ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "286-290",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "287-291",
        "block_hash": "298bb5829bcca443517bd9a6f9a3b459",
        "content": "    def __init__(self, parent=None):\n        super().__init__(parent)\n        self._setup_style()\n  ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "201-205",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "365-369",
        "block_hash": "571ad9b98af797c9795d98a419e459cb",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self._setup_style..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "202-206",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "366-370",
        "block_hash": "a8ba59edb2937935e47eba7b525734d1",
        "content": "    def __init__(self, parent=None):\n        super().__init__(parent)\n        self._setup_style()\n  ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "400-404",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "401-405",
        "block_hash": "56c942c9d63903565eafa7da0bdcccaa",
        "content": "    def __init__(self, read_only=False, parent=None):\n        super().__init__(parent)\n        self...."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "424-428",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "425-429",
        "block_hash": "ea950d415033327e9c01351d9cdf7afc",
        "content": "    def __init__(self, text=\"\", label_type=\"default\", parent=None):\n        super().__init__(text, p..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "433-437",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "444-448",
        "block_hash": "61a4eb8487a330ea178f95ecac7d9548",
        "content": "            style = \"\"\"\n                QLabel {\n                    color: #ff8c00;\n               ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "434-438",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "445-449",
        "block_hash": "fc70b52c7da2b6b7cf63ba05c9f50f27",
        "content": "                QLabel {\n                    color: #ff8c00;\n                    font: bold 12px \"Mi..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "435-439",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "446-450",
        "block_hash": "fdefc39b4ec82b77e24aacce4dd0f797",
        "content": "                    color: #ff8c00;\n                    font: bold 12px \"Microsoft YaHei\";\n         ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "436-440",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "447-451",
        "block_hash": "2fc88b50e07abd824aac3cc6b9d50f1b",
        "content": "                    font: bold 12px \"Microsoft YaHei\";\n                    padding: 8px;\n           ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "437-441",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "448-452",
        "block_hash": "6c4282d4921c9c4d9961231390ddcc25",
        "content": "                    padding: 8px;\n                    background-color: #fff4e6;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "438-442",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "449-453",
        "block_hash": "ff967b5f745bf5756b7c553f1d8e97bd",
        "content": "                    background-color: #fff4e6;\n                    border: 1px solid #ffd9b3;\n      ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "433-437",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "455-459",
        "block_hash": "61a4eb8487a330ea178f95ecac7d9548",
        "content": "            style = \"\"\"\n                QLabel {\n                    color: #f44336;\n               ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "434-438",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "456-460",
        "block_hash": "fc70b52c7da2b6b7cf63ba05c9f50f27",
        "content": "                QLabel {\n                    color: #f44336;\n                    font: bold 12px \"Mi..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "435-439",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "457-461",
        "block_hash": "fdefc39b4ec82b77e24aacce4dd0f797",
        "content": "                    color: #f44336;\n                    font: bold 12px \"Microsoft YaHei\";\n         ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "436-440",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "458-462",
        "block_hash": "2fc88b50e07abd824aac3cc6b9d50f1b",
        "content": "                    font: bold 12px \"Microsoft YaHei\";\n                    padding: 8px;\n           ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "437-441",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "459-463",
        "block_hash": "6c4282d4921c9c4d9961231390ddcc25",
        "content": "                    padding: 8px;\n                    background-color: #ffebee;\n                   ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "438-442",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "460-464",
        "block_hash": "ff967b5f745bf5756b7c553f1d8e97bd",
        "content": "                    background-color: #ffebee;\n                    border: 1px solid #ffcdd2;\n      ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "201-205",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "478-482",
        "block_hash": "571ad9b98af797c9795d98a419e459cb",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self._setup_style..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "202-206",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "479-483",
        "block_hash": "a8ba59edb2937935e47eba7b525734d1",
        "content": "    def __init__(self, parent=None):\n        super().__init__(parent)\n        self._setup_style()\n  ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "27-31",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "519-523",
        "block_hash": "88b9eef7fa93fe563161ed35408fcd13",
        "content": "            QGroupBox {\n                font: bold 12px \"Microsoft YaHei\";\n                color: #3..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "28-32",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "520-524",
        "block_hash": "a52028e8a1e44bba1e5ee213bfc15a88",
        "content": "                font: bold 12px \"Microsoft YaHei\";\n                color: #333333;\n                b..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "29-33",
        "file2": "ui\\widgets\\classic_components.py",
        "lines2": "521-525",
        "block_hash": "8217afa4de0cb8fbf48b3f691b51ca25",
        "content": "                color: #333333;\n                border: 2px solid #cccccc;\n                border-ra..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "13-17",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "11-15",
        "block_hash": "42ade46499b940c98fc55d6d677c7438",
        "content": ")\nfrom PyQt5.QtCore import pyqtSignal, Qt\n\n# 导入自定义组件\nfrom ui.widgets.classic_components import ("
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "14-18",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "15-19",
        "block_hash": "fa6041d72ee5dec73d64782e2785a757",
        "content": "from ui.widgets.classic_components import (\n    ClassicGroupBox, ClassicButton, ClassicLineEdit, Cla..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "23-27",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "24-28",
        "block_hash": "5d1320b661e41d921201fd7a862a4289",
        "content": "    # 定义信号\n    order_created = pyqtSignal(dict)  # 订单创建信号\n    order_paid = pyqtSignal(str)  # 订单支付信号..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "28-32",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 初始化状态"
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "31-35",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "29-33",
        "block_hash": "9339d2f21bbca06a34c8727ac197900c",
        "content": "    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 初始化状态\n     ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "40-44",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "40-44",
        "block_hash": "fef360f004dbc2697fa04d9b173e1138",
        "content": "        # 实现IWidgetInterface接口\n        self._widget_interface = IWidgetInterface()\n        \n        ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "40-44",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "41-45",
        "block_hash": "fef360f004dbc2697fa04d9b173e1138",
        "content": "        self._widget_interface = IWidgetInterface()\n        \n        # 初始化界面\n        self.initialize..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "45-49",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "45-49",
        "block_hash": "e3938df85f3fea6c43a0ca8224d8898e",
        "content": "        \n        # 连接全局事件\n        self._connect_global_events()\n    \n    def initialize(self) -> Non..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "46-50",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "46-50",
        "block_hash": "5e5d3e96058e9ee73fdbbc909116e29e",
        "content": "        # 连接全局事件\n        self._connect_global_events()\n    \n    def initialize(self) -> None:\n      ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "47-51",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "47-51",
        "block_hash": "a6a9b20267e0ce7b7caf7ae77293b565",
        "content": "        self._connect_global_events()\n    \n    def initialize(self) -> None:\n        \"\"\"初始化组件\"\"\"\n   ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "48-52",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "48-52",
        "block_hash": "60e2d7c0f2d144e4f3005db1c5f39c97",
        "content": "    \n    def initialize(self) -> None:\n        \"\"\"初始化组件\"\"\"\n        self._setup_ui()\n        self._co..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "48-52",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "49-53",
        "block_hash": "60e2d7c0f2d144e4f3005db1c5f39c97",
        "content": "    def initialize(self) -> None:\n        \"\"\"初始化组件\"\"\"\n        self._setup_ui()\n        self._connect..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "59-63",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "60-64",
        "block_hash": "9bac2b7d2ba14367c1c51a415f32d81e",
        "content": "        # 清理数据\n        self.current_account = None\n        self.current_order = None\n        self.se..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "65-69",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "64-68",
        "block_hash": "c28661d61a0a0405f954261419db1cb8",
        "content": "    \n    def get_widget(self) -> QWidget:\n        \"\"\"获取Qt组件\"\"\"\n        return self\n    "
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "66-70",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "65-69",
        "block_hash": "949d6c51be3eeadd979dcc2a233a96a6",
        "content": "    def get_widget(self) -> QWidget:\n        \"\"\"获取Qt组件\"\"\"\n        return self\n    \n    def _setup_ui..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "67-71",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "66-70",
        "block_hash": "1f02cf008ef40b89d7b71f0558ade941",
        "content": "        \"\"\"获取Qt组件\"\"\"\n        return self\n    \n    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\""
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "68-72",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "67-71",
        "block_hash": "aa67a8f9d24e6a80df7c425c93153ac0",
        "content": "        return self\n    \n    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "69-73",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "68-72",
        "block_hash": "ffd0dd3298de14871d3b272792919a97",
        "content": "    \n    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "70-74",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "69-73",
        "block_hash": "fa8f03bc89ccccd21892bfb18e359a28",
        "content": "    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setC..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "71-75",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "70-74",
        "block_hash": "d07bc8fa8bcbf02b4c7bec6a68963325",
        "content": "        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, 5..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "72-76",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "71-75",
        "block_hash": "845ef4bb25dd351f32677fcc61907543",
        "content": "        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, 5)\n        layout.setS..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "74-78",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "75-79",
        "block_hash": "f9c1844e38acf88717a031b9c9f184f7",
        "content": "        # 座位区域\n        self.seat_group = ClassicGroupBox(\"座位选择\")\n        self._build_seat_area()\n   ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "74-78",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "76-80",
        "block_hash": "f9c1844e38acf88717a031b9c9f184f7",
        "content": "        self.seat_group = ClassicGroupBox(\"座位选择\")\n        self._build_seat_area()\n        layout.add..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "79-83",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "80-84",
        "block_hash": "771631e1f8e6cb1b44d088a207459968",
        "content": "        # 订单详情区域\n        self.order_group = ClassicGroupBox(\"订单详情\")\n        self._build_order_detail..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "217-221",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "99-103",
        "block_hash": "120be7188eb0828108df426cf3197479",
        "content": "        \n        # 座位图区域（占位）\n        self.seat_placeholder = ClassicLabel(\n            \"座位图将在此显示\\n\\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "218-222",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "100-104",
        "block_hash": "62e07d9228994554d1e93ae51f94a323",
        "content": "        # 座位图区域（占位）\n        self.seat_placeholder = ClassicLabel(\n            \"座位图将在此显示\\n\\n请先选择影院、影片..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "219-223",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "101-105",
        "block_hash": "6a6021238f0ee8e7f9df710827593988",
        "content": "        self.seat_placeholder = ClassicLabel(\n            \"座位图将在此显示\\n\\n请先选择影院、影片、日期和场次\",\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "220-224",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "102-106",
        "block_hash": "a48fcf5891d811d37c648a2c3edcfa73",
        "content": "            \"座位图将在此显示\\n\\n请先选择影院、影片、日期和场次\",\n            \"default\"\n        )\n        self.seat_placeho..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "221-225",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "103-107",
        "block_hash": "b7ecd265cdad3ffbb87a9b8ca80d6abc",
        "content": "            \"default\"\n        )\n        self.seat_placeholder.setAlignment(Qt.AlignCenter)\n        s..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "222-226",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "104-108",
        "block_hash": "1b20e9a8547ad5b4490df3ebea77a064",
        "content": "        )\n        self.seat_placeholder.setAlignment(Qt.AlignCenter)\n        self.seat_placeholder.s..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "223-227",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "105-109",
        "block_hash": "5e17cddc25a08052d326ed96bd1e4ea1",
        "content": "        self.seat_placeholder.setAlignment(Qt.AlignCenter)\n        self.seat_placeholder.setStyleShe..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "224-228",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "106-110",
        "block_hash": "520d422b3fcf53393a10e003db5fe31e",
        "content": "        self.seat_placeholder.setStyleSheet(\"\"\"\n            QLabel {\n                color: #999999;..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "225-229",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "107-111",
        "block_hash": "a57ac5a7b7f372b5289870029e1abe04",
        "content": "            QLabel {\n                color: #999999;\n                font: 14px \"Microsoft YaHei\";\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "226-230",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "108-112",
        "block_hash": "c5ba789b57b985974deb16210b788911",
        "content": "                color: #999999;\n                font: 14px \"Microsoft YaHei\";\n                backgr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "227-231",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "109-113",
        "block_hash": "f89f429141cca15f35f727ab49b3de47",
        "content": "                font: 14px \"Microsoft YaHei\";\n                background-color: #ffffff;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "228-232",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "110-114",
        "block_hash": "241ca2ac31c0b4cccf9fcbf992111170",
        "content": "                background-color: #ffffff;\n                border: 1px dashed #cccccc;\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "229-233",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "111-115",
        "block_hash": "4de22b6dae3c394c5563e6ccbab26105",
        "content": "                border: 1px dashed #cccccc;\n                padding: 60px;\n                border-ra..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "117-121",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "118-122",
        "block_hash": "c7852b31d9745fded4317862e8f849dd",
        "content": "        # 提交订单按钮\n        self.submit_btn = ClassicButton(\"提交订单\", \"success\")\n        self.submit_btn...."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "128-132",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "129-133",
        "block_hash": "6a1743d916699e9efce4fcd273e81489",
        "content": "        # 用户信息显示\n        self.user_info = ClassicLabel(\"当前账号: 未选择\", \"info\")\n        layout.addWidget..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "132-136",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "133-137",
        "block_hash": "b1391c1eb12a36e09090de28c11473f6",
        "content": "        # 订单详情文本\n        self.order_detail = ClassicTextEdit(read_only=True)\n        self.order_deta..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "132-136",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "134-138",
        "block_hash": "b1391c1eb12a36e09090de28c11473f6",
        "content": "        self.order_detail = ClassicTextEdit(read_only=True)\n        self.order_detail.setPlaceholder..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "140-144",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "141-145",
        "block_hash": "7c5f61e160e077e217fe874a228a6fe7",
        "content": "        # 一键支付按钮\n        self.pay_btn = ClassicButton(\"一键支付\", \"warning\")\n        self.pay_btn.setMin..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "140-144",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "142-146",
        "block_hash": "7c5f61e160e077e217fe874a228a6fe7",
        "content": "        self.pay_btn = ClassicButton(\"一键支付\", \"warning\")\n        self.pay_btn.setMinimumHeight(35)\n  ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "145-149",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "146-150",
        "block_hash": "77e4aa68611b91b492301b3691a78eb6",
        "content": "        # 取消订单按钮\n        self.cancel_btn = ClassicButton(\"取消订单\", \"default\")\n        self.cancel_btn...."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "154-158",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "155-159",
        "block_hash": "6836f31b68931c0ddfd1980de5d6c9ab",
        "content": "        layout.addLayout(button_layout)\n    \n    def _connect_signals(self):\n        \"\"\"连接信号槽\"\"\"\n   ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "159-163",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "160-164",
        "block_hash": "29d1e9cdd2a7eedc93df04b8dd27776e",
        "content": "        self.submit_btn.clicked.connect(self._on_submit_order)\n        self.pay_btn.clicked.connect(..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "164-168",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "165-169",
        "block_hash": "c287661932f99ad2be8860436ae0da73",
        "content": "        self.seat_input.textChanged.connect(self._on_seat_input_changed)\n    \n    def _connect_globa..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "166-170",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "167-171",
        "block_hash": "fecaefed1bb237aa07f7f0d1b2e96b9d",
        "content": "    def _connect_global_events(self):\n        \"\"\"连接全局事件\"\"\"\n        # 监听账号切换事件\n        event_bus.acco..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "169-173",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "170-174",
        "block_hash": "45fb6e96a1b8d9c437211cd7b43a362a",
        "content": "        event_bus.account_changed.connect(self._on_account_changed)\n        \n        # 监听影院选择事件\n    ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "188-192",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "189-193",
        "block_hash": "8ca178432e0009d56d8d7e8a7699e279",
        "content": "    def _on_cinema_selected(self, cinema_name: str):\n        \"\"\"影院选择处理\"\"\"\n        try:\n            s..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "211-215",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "212-216",
        "block_hash": "f6cb40bb2e438d604269e7b4bf25ce15",
        "content": "            # 发出座位选择信号\n            if seats:\n                self.seat_selected.emit(','.join(seats)..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "216-220",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "217-221",
        "block_hash": "ca1c142a249843d6c6b703ace9c560e2",
        "content": "            self.submit_btn.setEnabled(len(seats) > 0 and self.current_account is not None)\n        ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "233-237",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "234-238",
        "block_hash": "c235fb89f20b343608beed78d3f6cdcc",
        "content": "            if not self.current_cinema:\n                QMessageBox.warning(self, \"提交失败\", \"请先选择影院\")\n..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "261-265",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "262-266",
        "block_hash": "3a430908d5bf32c85750bc359b12303a",
        "content": "            if reply == QMessageBox.Yes:\n                # 模拟订单创建成功\n                self.current_ord..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "263-267",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "264-268",
        "block_hash": "03a2fa075918ccf8f2e62819d9afe79a",
        "content": "                self.current_order = order_data\n                \n                # 更新订单详情显示\n        ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "269-273",
        "block_hash": "546b8063a60649c91b0ca126265d6a29",
        "content": "                # 启用支付和取消按钮\n                self.pay_btn.setEnabled(True)\n                self.cance..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "273-277",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "274-278",
        "block_hash": "a68ca66a0485ccb81900f57144b8907a",
        "content": "                self.submit_btn.setEnabled(False)\n                \n                # 发出订单创建信号\n      ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "276-280",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "277-281",
        "block_hash": "fd2ed0f1d2e8d1894dff8786e318a535",
        "content": "                self.order_created.emit(order_data)\n                \n                # 发布全局事件\n      ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "278-282",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "279-283",
        "block_hash": "06f026c6d89606f16e56cd5530302fce",
        "content": "                # 发布全局事件\n                event_bus.order_created.emit(order_data)\n                \n ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "278-282",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "280-284",
        "block_hash": "06f026c6d89606f16e56cd5530302fce",
        "content": "                event_bus.order_created.emit(order_data)\n                \n                QMessageBo..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "259-263",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "315-319",
        "block_hash": "f52574c852c0700a2b201c680b866f06",
        "content": "                QMessageBox.Yes | QMessageBox.No\n            )\n            \n            if reply == ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "317-321",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "318-322",
        "block_hash": "572f9a0695388576bfcc48367e2c470f",
        "content": "            if reply == QMessageBox.Yes:\n                # 模拟支付成功\n                self.current_order..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "323-327",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "324-328",
        "block_hash": "5f01ddf59e77d85562f81a75bc389553",
        "content": "                self.current_account[\"balance\"] -= order_amount\n                \n                # 更..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "328-332",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "329-333",
        "block_hash": "3caf92267b0f4b721c1825da947f230b",
        "content": "                # 禁用支付和取消按钮\n                self.pay_btn.setEnabled(False)\n                self.canc..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "333-337",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "334-338",
        "block_hash": "c5cfe6f8325cf37dd1870ca4e2932cc6",
        "content": "                self.order_paid.emit(self.current_order[\"order_id\"])\n                \n              ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "259-263",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "364-368",
        "block_hash": "f52574c852c0700a2b201c680b866f06",
        "content": "                QMessageBox.Yes | QMessageBox.No\n            )\n            \n            if reply == ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "366-370",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "367-371",
        "block_hash": "b5a4e01bec9a14a79cbdc6ae1328b04e",
        "content": "            if reply == QMessageBox.Yes:\n                # 模拟取消成功\n                order_id = self.cu..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "374-378",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "375-379",
        "block_hash": "89045dcfb7565f7120ab7bad2039ece0",
        "content": "                # 重置按钮状态\n                self.pay_btn.setEnabled(False)\n                self.cancel_..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "385-389",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "386-390",
        "block_hash": "e614cf77494be5d60ec9106b2ecd24ca",
        "content": "    def _update_order_detail(self, order_data: dict):\n        \"\"\"更新订单详情显示\"\"\"\n        try:\n          ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "399-403",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "400-404",
        "block_hash": "40036ab8182f62b3a6b19b9e788ab8e7",
        "content": "            if order_data.get('pay_time'):\n                detail_text += f\"\\n支付时间：{order_data['pay_..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "402-406",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "403-407",
        "block_hash": "b8deba70f0809272977de62d0527a557",
        "content": "            self.order_detail.setPlainText(detail_text)\n            \n        except Exception as e:\n..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "432-436",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "433-437",
        "block_hash": "126bdd2ce93977eefbc5261e3d5255eb",
        "content": "            # 重置按钮状态\n            self.submit_btn.setEnabled(False)\n            self.pay_btn.setEnabl..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "432-436",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "434-438",
        "block_hash": "126bdd2ce93977eefbc5261e3d5255eb",
        "content": "            self.submit_btn.setEnabled(False)\n            self.pay_btn.setEnabled(False)\n           ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "438-442",
        "file2": "ui\\widgets\\seat_order_widget.py",
        "lines2": "439-443",
        "block_hash": "43016223603cfd909c7753849ba1cc22",
        "content": "            self.order_detail.clear()\n            \n        except Exception as e:\n            pass\n"
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "38-42",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 初始化状态"
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "31-35",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "39-43",
        "block_hash": "9339d2f21bbca06a34c8727ac197900c",
        "content": "    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 初始化状态\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "41-45",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "42-46",
        "block_hash": "8c3a7ae635f2966b6ad9d15951d92a67",
        "content": "        # 初始化状态\n        self.current_account = None\n        self.cinemas_data = []\n        self.curr..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "41-45",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "43-47",
        "block_hash": "8c3a7ae635f2966b6ad9d15951d92a67",
        "content": "        self.current_account = None\n        self.cinemas_data = []\n        self.current_points = 0\n ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "47-51",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "48-52",
        "block_hash": "4398180e31f805545817e610014b3020",
        "content": "        self.order_data_cache = []\n        \n        # 实现IWidgetInterface接口\n        self._widget_inte..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "40-44",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "50-54",
        "block_hash": "fef360f004dbc2697fa04d9b173e1138",
        "content": "        # 实现IWidgetInterface接口\n        self._widget_interface = IWidgetInterface()\n        \n        ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "40-44",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "51-55",
        "block_hash": "fef360f004dbc2697fa04d9b173e1138",
        "content": "        self._widget_interface = IWidgetInterface()\n        \n        # 初始化界面\n        self.initialize..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "45-49",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "55-59",
        "block_hash": "e3938df85f3fea6c43a0ca8224d8898e",
        "content": "        \n        # 连接全局事件\n        self._connect_global_events()\n    \n    def initialize(self) -> Non..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "46-50",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "56-60",
        "block_hash": "5e5d3e96058e9ee73fdbbc909116e29e",
        "content": "        # 连接全局事件\n        self._connect_global_events()\n    \n    def initialize(self) -> None:\n      ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "47-51",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "57-61",
        "block_hash": "a6a9b20267e0ce7b7caf7ae77293b565",
        "content": "        self._connect_global_events()\n    \n    def initialize(self) -> None:\n        \"\"\"初始化组件\"\"\"\n   ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "48-52",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "58-62",
        "block_hash": "60e2d7c0f2d144e4f3005db1c5f39c97",
        "content": "    \n    def initialize(self) -> None:\n        \"\"\"初始化组件\"\"\"\n        self._setup_ui()\n        self._co..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "48-52",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "59-63",
        "block_hash": "60e2d7c0f2d144e4f3005db1c5f39c97",
        "content": "    def initialize(self) -> None:\n        \"\"\"初始化组件\"\"\"\n        self._setup_ui()\n        self._connect..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "50-54",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "60-64",
        "block_hash": "e63fde7e173dceea6fbdb9cd43c99aec",
        "content": "        \"\"\"初始化组件\"\"\"\n        self._setup_ui()\n        self._connect_signals()\n        \n        # 加载示例..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "64-68",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "65-69",
        "block_hash": "95f8c0bf2a8a246409225dc7ca258ae4",
        "content": "        self._load_sample_data()\n    \n    def cleanup(self) -> None:\n        \"\"\"清理组件资源\"\"\"\n        # ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "53-57",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "66-70",
        "block_hash": "3414311c8835f56dbfd5e0487576bbf4",
        "content": "    \n    def cleanup(self) -> None:\n        \"\"\"清理组件资源\"\"\"\n        # 断开全局事件连接\n        event_bus.accoun..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "53-57",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "67-71",
        "block_hash": "3414311c8835f56dbfd5e0487576bbf4",
        "content": "    def cleanup(self) -> None:\n        \"\"\"清理组件资源\"\"\"\n        # 断开全局事件连接\n        event_bus.account_cha..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "65-69",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "75-79",
        "block_hash": "c28661d61a0a0405f954261419db1cb8",
        "content": "    \n    def get_widget(self) -> QWidget:\n        \"\"\"获取Qt组件\"\"\"\n        return self\n    "
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "66-70",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "76-80",
        "block_hash": "949d6c51be3eeadd979dcc2a233a96a6",
        "content": "    def get_widget(self) -> QWidget:\n        \"\"\"获取Qt组件\"\"\"\n        return self\n    \n    def _setup_ui..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "67-71",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "77-81",
        "block_hash": "1f02cf008ef40b89d7b71f0558ade941",
        "content": "        \"\"\"获取Qt组件\"\"\"\n        return self\n    \n    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\""
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "68-72",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "78-82",
        "block_hash": "aa67a8f9d24e6a80df7c425c93153ac0",
        "content": "        return self\n    \n    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "69-73",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "79-83",
        "block_hash": "ffd0dd3298de14871d3b272792919a97",
        "content": "    \n    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "70-74",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "80-84",
        "block_hash": "fa8f03bc89ccccd21892bfb18e359a28",
        "content": "    def _setup_ui(self):\n        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setC..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "71-75",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "81-85",
        "block_hash": "d07bc8fa8bcbf02b4c7bec6a68963325",
        "content": "        \"\"\"设置用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, 5..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "72-76",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "82-86",
        "block_hash": "845ef4bb25dd351f32677fcc61907543",
        "content": "        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, 5)\n        layout.setS..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "86-90",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "87-91",
        "block_hash": "32a5e9c35f402ccb9c253a6adbf9c576",
        "content": "        self.tab_widget = ClassicTabWidget()\n        self._create_tab_pages()\n        \n        layou..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "89-93",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "90-94",
        "block_hash": "e050dec030d0e912a9cdb6be8112028b",
        "content": "        layout.addWidget(self.tab_widget)\n    \n    def _create_tab_pages(self):\n        \"\"\"创建所有Tab页面..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "94-98",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "95-99",
        "block_hash": "c82071aad86cbf4a9a10ffec1eda54b8",
        "content": "        self.ticket_tab = QWidget()\n        self._build_ticket_tab()\n        self.tab_widget.addTab(..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "98-102",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "99-103",
        "block_hash": "82e4091b6bc71ed2b057d5bea6a77a07",
        "content": "        # Tab2: 绑券\n        self.bind_coupon_tab = QWidget()\n        self._build_bind_coupon_tab()\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "98-102",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "100-104",
        "block_hash": "82e4091b6bc71ed2b057d5bea6a77a07",
        "content": "        self.bind_coupon_tab = QWidget()\n        self._build_bind_coupon_tab()\n        self.tab_widg..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "103-107",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "104-108",
        "block_hash": "672496e221f25e379e122beaf4b0d4a2",
        "content": "        # Tab3: 兑换券\n        self.exchange_coupon_tab = QWidget()\n        self._build_exchange_coupon..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "103-107",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "105-109",
        "block_hash": "672496e221f25e379e122beaf4b0d4a2",
        "content": "        self.exchange_coupon_tab = QWidget()\n        self._build_exchange_coupon_tab()\n        self...."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "108-112",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "109-113",
        "block_hash": "344b48211eecbadf039a3fd8590be7e5",
        "content": "        # Tab4: 订单\n        self.order_tab = QWidget()\n        self._build_order_tab()\n        self.t..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "108-112",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "110-114",
        "block_hash": "344b48211eecbadf039a3fd8590be7e5",
        "content": "        self.order_tab = QWidget()\n        self._build_order_tab()\n        self.tab_widget.addTab(se..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "113-117",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "114-118",
        "block_hash": "3cf72e4d4aa2cead6479d70182b5e13c",
        "content": "        # Tab5: 影院\n        self.cinema_tab = QWidget()\n        self._build_cinema_tab()\n        self..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "118-122",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "119-123",
        "block_hash": "de2c9ee39440e5ec9e328aea50b4d352",
        "content": "    def _build_ticket_tab(self):\n        \"\"\"构建出票Tab页面\"\"\"\n        layout = QHBoxLayout(self.ticket_ta..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "123-127",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "124-128",
        "block_hash": "7c7cebbdfc98056df69557200e59f18c",
        "content": "        # 左侧：影院选择 - 缩小比例，给券列表更多空间\n        cinema_group = ClassicGroupBox(\"影院选择\")\n        self._build..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "123-127",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "125-129",
        "block_hash": "7c7cebbdfc98056df69557200e59f18c",
        "content": "        cinema_group = ClassicGroupBox(\"影院选择\")\n        self._build_cinema_select(cinema_group)\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "128-132",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "129-133",
        "block_hash": "e1bcbadb38ac0f8910d4a9a1ea855fac",
        "content": "        # 右侧：可用券列表 - 增加比例\n        coupon_group = ClassicGroupBox(\"可用券列表\")\n        self._build_coupon..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "139-143",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "140-144",
        "block_hash": "26e3266029cf98252b1207bd7fe289b4",
        "content": "        # 当前账号显示\n        self.current_account_label = ClassicLabel(\"当前账号: 未选择\", \"info\")\n        layo..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "211-215",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "212-216",
        "block_hash": "e71b76395be9ee317a0fd7b805a9fc77",
        "content": "        # 选座按钮 - 缩小高度，避免占用座位区域空间\n        self.submit_order_btn = ClassicButton(\"选座\", \"success\")\n    ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "266-270",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "228-232",
        "block_hash": "37e10c5b226ad2b6614697dad2ce3a5d",
        "content": "            }\n            QPushButton:hover {\n                background-color: #0e6e0e;\n           ..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "267-271",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "229-233",
        "block_hash": "0cea504a5a536dcfb0a2eaa5ec953120",
        "content": "            QPushButton:hover {\n                background-color: #0e6e0e;\n                border-co..."
      },
      {
        "file1": "ui\\components\\seat_map_panel_pyqt5.py",
        "lines1": "268-272",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "230-234",
        "block_hash": "1d47e8451d5cc01437a41f1428acf011",
        "content": "                background-color: #0e6e0e;\n                border-color: #0e6e0e;\n            }\n    ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "69-73",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "231-235",
        "block_hash": "208fc30f546190f6c6bb138c4045258d",
        "content": "                border-color: #0e6e0e;\n            }\n            QPushButton:pressed {\n             ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "70-74",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "232-236",
        "block_hash": "ecb3e81a8ad2a8d749a69b72e212c218",
        "content": "            }\n            QPushButton:pressed {\n                background-color: #0c5e0c;\n         ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "71-75",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "233-237",
        "block_hash": "ddef2cfcd8d2db1819345cf012641886",
        "content": "            QPushButton:pressed {\n                background-color: #0c5e0c;\n                border-..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "72-76",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "234-238",
        "block_hash": "cc9aaf8ea98b279a6839429a3bd0959d",
        "content": "                background-color: #0c5e0c;\n                border-color: #0c5e0c;\n            }\n    ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "73-77",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "235-239",
        "block_hash": "951a04dfc80aa09269899ffa8b60ec3b",
        "content": "                border-color: #0c5e0c;\n            }\n            QPushButton:disabled {\n            ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "74-78",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "236-240",
        "block_hash": "51dc12a8ed5d1756aaa23d277dae4d95",
        "content": "            }\n            QPushButton:disabled {\n                background-color: #cccccc;\n        ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "75-79",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "237-241",
        "block_hash": "009b62c086de4c284d276f592ecbeb86",
        "content": "            QPushButton:disabled {\n                background-color: #cccccc;\n                border..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "254-258",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "255-259",
        "block_hash": "96f166d10b94220fcdd5bc14e18005e3",
        "content": "        self.coupon_list = ClassicListWidget()\n        # 不添加任何初始项目，保持空白\n\n        layout.addWidget(se..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "259-263",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "260-264",
        "block_hash": "5d02fe4dfbbb34b06ad243a0655c046f",
        "content": "    def _build_bind_coupon_tab(self):\n        \"\"\"构建绑券Tab页面 - 直接从第二部分文档复制并适配PyQt5\"\"\"\n        main_lay..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "263-267",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "264-268",
        "block_hash": "f1d96b85fc99d14199f45c865dbee8ed",
        "content": "        # 左侧输入区\n        input_frame = QWidget()\n        input_layout = QVBoxLayout(input_frame)\n    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "278-282",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "279-283",
        "block_hash": "917482286b10f4cfceb3d2f4c10db45c",
        "content": "        self.coupon_text = ClassicTextEdit()\n        self.coupon_text.setFixedHeight(200)\n        se..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "227-231",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "294-298",
        "block_hash": "f7c62849ac41e67aabf98dda65912276",
        "content": "                border-radius: 5px;\n            }\n            QPushButton:hover {\n                ba..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "305-309",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "306-310",
        "block_hash": "b162a39c16eed2d2271ff8095c7c01be",
        "content": "        log_frame = QWidget()\n        log_layout = QVBoxLayout(log_frame)\n        \n        log_layou..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "348-352",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "349-353",
        "block_hash": "812119b13eaccfcdbc88cd24ff09e049",
        "content": "        print(f\"[券绑定] 即将绑定{len(coupon_codes)}张券\")\n        \n        # 执行绑定\n        self.perform_batch..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "404-408",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "405-409",
        "block_hash": "09d5d5c4829f9d6c911744e396955fb3",
        "content": "            if i < len(coupon_codes):\n                print(f\"[券绑定] 等待0.2秒后绑定下一张券...\")\n             ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "428-432",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "429-433",
        "block_hash": "e138c34111059dfd1069e1c6a98c31f4",
        "content": "        self.bind_log_text.setPlainText(\"\\n\".join(log_lines))\n        \n        # 不显示完成提示弹窗，只在日志中记录\n ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "441-445",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "442-446",
        "block_hash": "ebbaf447ea62d8381b2a481e0bf29db3",
        "content": "            print(f\"[券绑定] 日志内容已复制到剪贴板\")\n        else:\n            # 不显示错误弹窗，只在控制台记录\n            prin..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "451-455",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "477-481",
        "block_hash": "e6dda6a32273368802c621d71576558a",
        "content": "            if account:\n                # 获取影院名称\n                cinema_name = \"未知影院\"\n              ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "452-456",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "478-482",
        "block_hash": "de7cb750f7a311cd3883c835422092b6",
        "content": "                # 获取影院名称\n                cinema_name = \"未知影院\"\n                try:\n                 ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "453-457",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "479-483",
        "block_hash": "f69d475beef8938496612c034a8c812e",
        "content": "                cinema_name = \"未知影院\"\n                try:\n                    from services.cinema_m..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "454-458",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "480-484",
        "block_hash": "06c060f2fe517434a315a070587d95c2",
        "content": "                try:\n                    from services.cinema_manager import cinema_manager\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "455-459",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "481-485",
        "block_hash": "6578d0028dd6020189c1e434eef35cef",
        "content": "                    from services.cinema_manager import cinema_manager\n                    cinemas =..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "456-460",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "482-486",
        "block_hash": "a52a9c2b21d3b96c388b87931a2c2900",
        "content": "                    cinemas = cinema_manager.load_cinema_list()\n                    for cinema in ci..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "457-461",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "483-487",
        "block_hash": "edfa88d3bfee5f760c2f74693962aad3",
        "content": "                    for cinema in cinemas:\n                        if cinema.get('cinemaid') == acco..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "458-462",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "484-488",
        "block_hash": "af1aeb4937213f445285627887924692",
        "content": "                        if cinema.get('cinemaid') == account.get('cinemaid'):\n                      ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "459-463",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "485-489",
        "block_hash": "17e069a5dce6471d60f2ac621b234b65",
        "content": "                            cinema_name = cinema.get('cinemaShortName', '未知影院')\n                    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "460-464",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "486-490",
        "block_hash": "95b41350976145b728286fd6a11f2cf0",
        "content": "                            break\n                except:\n                    pass\n\n                ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "461-465",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "487-491",
        "block_hash": "69d57ee2a440e63da7d972168bebbb07",
        "content": "                except:\n                    pass\n\n                info_text = (f\"当前账号：{account['user..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "462-466",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "488-492",
        "block_hash": "423de9787d417c1eebad60ca6180b177",
        "content": "                    pass\n\n                info_text = (f\"当前账号：{account['userid']}\\n\"\n               ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "511-515",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "512-516",
        "block_hash": "4636e64aa75a4d725ebad2771de3953e",
        "content": "        refresh_btn = ClassicButton(\"刷新券列表\", \"default\")\n        refresh_btn.clicked.connect(self.ref..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "515-519",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "516-520",
        "block_hash": "37f6eb61e3f3ba6a4add9dde3330f336",
        "content": "        # 券统计信息显示 - 初始为空白\n        self.coupon_stats_label = ClassicLabel(\"\")\n        self.coupon_sta..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "523-527",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "524-528",
        "block_hash": "d4f2c366d72d509d2b32ff00be83bdb6",
        "content": "        # 可兑换券列表表格 - 显示券名称、券码和有效期\n        self.exchange_coupon_table = ClassicTableWidget()\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "523-527",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "525-529",
        "block_hash": "d4f2c366d72d509d2b32ff00be83bdb6",
        "content": "        self.exchange_coupon_table = ClassicTableWidget()\n        self.exchange_coupon_table.setColu..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "529-533",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "530-534",
        "block_hash": "596453899c06cd217ccfc8beacd1b8c1",
        "content": "        header = self.exchange_coupon_table.horizontalHeader()\n        header.resizeSection(0, 150) ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "534-538",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "535-539",
        "block_hash": "340d9c60671c977b8a0678829c02f273",
        "content": "        layout.addWidget(self.exchange_coupon_table)\n        \n        # 初始化数据\n        self.exchange_..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "537-541",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "538-542",
        "block_hash": "a270d47d9792920af2547262ae968530",
        "content": "        self.exchange_coupon_data = []\n\n    def refresh_coupon_exchange_list(self):\n        \"\"\"刷新可兑换..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "542-546",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "543-547",
        "block_hash": "ffd2e36633d186957e3fe347648a3791",
        "content": "        account = getattr(self, 'current_account', None)\n        if not account:\n            Message..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "547-551",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "548-552",
        "block_hash": "d23761d12b6282e4b304500261a2ba0f",
        "content": "        cinemaid = self.get_selected_cinemaid()\n        if not cinemaid:\n            MessageManager...."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "562-566",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "563-567",
        "block_hash": "0334ba50fb23de34cc38f97ce38f266e",
        "content": "        # 防止重复请求\n        if getattr(self, '_coupon_refreshing', False):\n            print(f\"[券列表] 正在..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "571-575",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "572-576",
        "block_hash": "a8dfa0ab9c33edbf931abf8f465c4009",
        "content": "            refresh_btn = self.sender()  # 获取触发的按钮\n            if refresh_btn:\n                refre..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "583-587",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "584-588",
        "block_hash": "2150ca92cd4d9e14b06bb48b8068197b",
        "content": "            # 强制UI更新\n            from PyQt5.QtWidgets import QApplication\n            QApplication.p..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "587-591",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "588-592",
        "block_hash": "14d5b11687e64fa279fb34d45e3818be",
        "content": "            # 🌐 步骤3：调用真实API接口\n            try:\n                from services.order_api import get_co..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "410-414",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "595-599",
        "block_hash": "6afe673d25d3ee34137bbff99512fc77",
        "content": "                    'pageNo': 1,             # 页码\n                    'groupid': '',           # 集团I..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "411-415",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "596-600",
        "block_hash": "6484fc762c2ead10f5334d9f67ea20d4",
        "content": "                    'groupid': '',           # 集团ID（通常为空）\n                    'cinemaid': cinemaid, ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "412-416",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "597-601",
        "block_hash": "bd1e56a5b722de8294dc126da6b9ddb1",
        "content": "                    'cinemaid': cinemaid,    # 影院ID\n                    'cardno': account.get('cardn..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "598-602",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                    'cardno': account.get('cardno', ''),  # 会员卡号\n                    'userid': accou..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "599-603",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                    'userid': account['userid'],          # 用户ID（手机号）\n                    'openid': ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "600-604",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                    'openid': account['openid'],          # 微信openid\n                    'CVersion':..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "601-605",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "                    'CVersion': '3.9.12',    # 客户端版本\n                    'OS': 'Windows',         # ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "602-606",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "                    'OS': 'Windows',         # 操作系统\n                    'token': account['token'],  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "606-610",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "607-611",
        "block_hash": "e0231e3181acf26d8430f212c4dd78b0",
        "content": "                print(f\"[券列表API] 请求参数: {params}\")\n                \n                # 调用API（这是关键步骤）\n ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "608-612",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "609-613",
        "block_hash": "191c364a6997856dfa00a7c9463669d7",
        "content": "                # 调用API（这是关键步骤）\n                coupon_result = get_coupon_list(params)\n            ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "608-612",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "610-614",
        "block_hash": "191c364a6997856dfa00a7c9463669d7",
        "content": "                coupon_result = get_coupon_list(params)\n                \n                print(f\"[券列..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "611-615",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "612-616",
        "block_hash": "94765806aa6f2e20b54630ec90b6f0f4",
        "content": "                print(f\"[券列表API] 响应结果: {coupon_result}\")\n                \n                # 🔄 步骤4：处理..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "613-617",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "614-618",
        "block_hash": "e24c8885b11df550fe92c58a143c711f",
        "content": "                # 🔄 步骤4：处理API响应\n                if coupon_result and coupon_result.get('resultCode')..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "613-617",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "615-619",
        "block_hash": "e24c8885b11df550fe92c58a143c711f",
        "content": "                if coupon_result and coupon_result.get('resultCode') == '0':\n                    # 成..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "641-645",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "642-646",
        "block_hash": "39ce692b4a44369bfb90bdcc94717f50",
        "content": "                    # 更新状态信息\n                    status_text = f\"获取成功：共{len(valid_vouchers)}张券\"\n    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "641-645",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "643-647",
        "block_hash": "39ce692b4a44369bfb90bdcc94717f50",
        "content": "                    status_text = f\"获取成功：共{len(valid_vouchers)}张券\"\n                    if len(vouche..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "646-650",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "647-651",
        "block_hash": "f2088ed64a417d5fdf39e86bf6f20fef",
        "content": "                    # 更新账号兑换记录\n                    self.add_exchange_record_info(f\"刷新券列表成功 - {status..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "649-653",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "650-654",
        "block_hash": "c20def82c84da519958de6f773aabd6c",
        "content": "                else:\n                    # API调用失败的处理\n                    error_msg = coupon_result..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "654-658",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "655-659",
        "block_hash": "261cd1a86a2a4286e9b508dbd7ab90e4",
        "content": "                    # 显示错误信息\n                    self.show_coupon_error(error_msg)\n                 ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "669-673",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "670-674",
        "block_hash": "f17dd91a28a51a605a81c4e4d16b0489",
        "content": "            self.restore_coupon_ui_state(status_text)\n            \n        finally:\n            self..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "674-678",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "675-679",
        "block_hash": "143ad9a5cb815415728eba95b76630fc",
        "content": "    def validate_voucher_data(self, voucher):\n        \"\"\"验证券数据的完整性\"\"\"\n        if not isinstance(vouc..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "702-706",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "703-707",
        "block_hash": "95c1159419d93869b62a5e34a1d82529",
        "content": "        # 设置默认状态\n        if 'status' not in voucher:\n            voucher['status'] = 'available'\n   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "707-711",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "708-712",
        "block_hash": "78fff6f894bd86dce9c2d031b03986ce",
        "content": "        if 'faceValue' not in voucher:\n            voucher['faceValue'] = 0.0\n        \n        retur..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "712-716",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "713-717",
        "block_hash": "5eb23a0740921931a2b7bf49317f64ad",
        "content": "    def show_coupon_error(self, error_msg):\n        \"\"\"显示券列表获取错误\"\"\"\n        self.exchange_coupon_tab..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "731-735",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "732-736",
        "block_hash": "d177ee80a251819cd20f875809fae7b7",
        "content": "        error_item = self.exchange_coupon_table.__class__.createItem(display_msg)\n        error_item..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "762-766",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "763-767",
        "block_hash": "0a9c5198b02e438a7741615128f4b1de",
        "content": "        # 清除表格合并\n        self.exchange_coupon_table.clearSpans()\n        \n        print(f\"[券列表刷新] 完成..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "765-769",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "766-770",
        "block_hash": "671e6eac2ac793ead37d2fdc9a2e456e",
        "content": "        print(f\"[券列表刷新] 完成 - {status_text}\")\n\n    def update_coupon_table(self, vouchers):\n        \"..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "783-787",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "784-788",
        "block_hash": "6cb874fa62b5433d3beee0613a55b390",
        "content": "            # 检查是否已使用 - 使用真实API字段\n            is_redeemed = voucher.get('redeemed', '0') == '1'\n    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "788-792",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "789-793",
        "block_hash": "354846467de010cc4ff5840a496ceb8c",
        "content": "            if not is_expired and not is_redeemed and not is_used:\n                valid_vouchers.ap..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "804-808",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "805-809",
        "block_hash": "bfa7c6b6df2fd8e5e48f95d4c6a630d8",
        "content": "        valid_vouchers.sort(key=lambda v: v.get('expireddate', '9999-12-31'))\n\n        # 设置表格行数\n    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "807-811",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "808-812",
        "block_hash": "9171540ef9bd1605f1e3bb62871cf2ce",
        "content": "        self.exchange_coupon_table.setRowCount(len(valid_vouchers))\n\n        # 填充券数据 - 显示券名称、券码和有效期\n..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "812-816",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "813-817",
        "block_hash": "b3648aaf492a02fa460280358193d8c9",
        "content": "            name = voucher.get('couponname', '未知券')\n            name_item = self.exchange_coupon_tab..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "816-820",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "817-821",
        "block_hash": "f8db558af1f28bf2ca652247da69eef5",
        "content": "            # 券码\n            code = voucher.get('couponcode', '无券码')\n            code_item = self.ex..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "816-820",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "818-822",
        "block_hash": "f8db558af1f28bf2ca652247da69eef5",
        "content": "            code = voucher.get('couponcode', '无券码')\n            code_item = self.exchange_coupon_tab..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "821-825",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "822-826",
        "block_hash": "44a58ac39a1cd4e8c26105f72d2701e3",
        "content": "            # 有效期\n            expire_date = voucher.get('expireddate', '未知')\n            expire_item..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "834-838",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "835-839",
        "block_hash": "bf23e5ffc7a07970688a39ba777ce038",
        "content": "            self.exchange_coupon_table.setItem(row, 2, expire_item)\n\n        # 保存券数据到缓存\n        self..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "837-841",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "838-842",
        "block_hash": "a4afee73cdd1800ff8a89334bbfd0c9f",
        "content": "        self.exchange_coupon_data = valid_vouchers\n\n        # 更新统计信息\n        self.update_coupon_stat..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "839-843",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "840-844",
        "block_hash": "47e51a2ed9fcb5a4729b7df527b2f4e2",
        "content": "        # 更新统计信息\n        self.update_coupon_stats(len(vouchers), len(valid_vouchers))\n\n        print..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "844-848",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "845-849",
        "block_hash": "c0e6cca2e379b4aa05f711b9ed205c66",
        "content": "    def update_coupon_stats(self, total_count, valid_count):\n        \"\"\"更新券统计信息显示\"\"\"\n        try:\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "850-854",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "851-855",
        "block_hash": "9ea7e3fd0d98cf3cd43a4d0efd872888",
        "content": "            stats_parts = []\n\n            # 总数信息\n            stats_parts.append(f\"总计: {total_count}张..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "855-859",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "856-860",
        "block_hash": "68e9c9fb382b64c756a613898373e7ec",
        "content": "            # 可用数信息\n            if valid_count > 0:\n                stats_parts.append(f\"可用: {valid_..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "859-863",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "860-864",
        "block_hash": "3e0ac68b2aedbfa52d76680c3d0a9e1c",
        "content": "            # 过滤数信息\n            if filtered_count > 0:\n                stats_parts.append(f\"已过滤: {fi..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "894-898",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "895-899",
        "block_hash": "397909e4354d2d20d6362d48b5fab97c",
        "content": "            if hasattr(self, 'coupon_list'):\n                self.coupon_list.clear()\n              ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "899-903",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "900-904",
        "block_hash": "b2562083364d0e91d09500097aaed182",
        "content": "            if hasattr(self, 'exchange_coupon_table'):\n                self.exchange_coupon_table.se..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "904-908",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "905-909",
        "block_hash": "78ed6116e359fda2d64186dda7610908",
        "content": "            # 重置券统计信息\n            if hasattr(self, 'coupon_stats_label'):\n                self.coupo..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "904-908",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "906-910",
        "block_hash": "78ed6116e359fda2d64186dda7610908",
        "content": "            if hasattr(self, 'coupon_stats_label'):\n                self.coupon_stats_label.setText(..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "909-913",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "910-914",
        "block_hash": "bc503b7aa236e50478f4e1f1077b724a",
        "content": "            # 清空券数据缓存\n            self.exchange_coupon_data = []\n\n            print(f\"[券列表重置] 所有券列表已..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "912-916",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "913-917",
        "block_hash": "19974f0cf2882847168cb58b656177cd",
        "content": "            print(f\"[券列表重置] 所有券列表已重置为空白状态\")\n\n        except Exception as e:\n            print(f\"[券列表..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "935-939",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "936-940",
        "block_hash": "3cef2f04e932dbdaa4e93ffde30fc3e8",
        "content": "        # 订单表格\n        self.order_table = ClassicTableWidget()\n        self.order_table.setColumnCou..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "935-939",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "937-941",
        "block_hash": "3cef2f04e932dbdaa4e93ffde30fc3e8",
        "content": "        self.order_table = ClassicTableWidget()\n        self.order_table.setColumnCount(4)\n        s..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "940-944",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "941-945",
        "block_hash": "ceb36df3a36654fc46a69c4de265bd03",
        "content": "        # 🔧 修复：设置表格为只读模式，防止双击编辑\n        from PyQt5.QtWidgets import QAbstractItemView\n        self.o..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "948-952",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "949-953",
        "block_hash": "98efadff00788b9b7d5a4c24b8f8cf0c",
        "content": "        header = self.order_table.horizontalHeader()\n        header.resizeSection(0, 150)  # 影片\n    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "954-958",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "955-959",
        "block_hash": "5a4e6e73dcc0c258847f3a513c2c69b7",
        "content": "        self.order_table.verticalHeader().setDefaultSectionSize(36)\n\n        # 设置右键菜单\n        self.o..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "956-960",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "957-961",
        "block_hash": "ac2a5423dbf26b6c4cc43f1b1fdc6722",
        "content": "        # 设置右键菜单\n        self.order_table.setContextMenuPolicy(Qt.CustomContextMenu)\n        \n      ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "956-960",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "958-962",
        "block_hash": "ac2a5423dbf26b6c4cc43f1b1fdc6722",
        "content": "        self.order_table.setContextMenuPolicy(Qt.CustomContextMenu)\n        \n        layout.addWidge..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "961-965",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "962-966",
        "block_hash": "f90c9702c0d739357f50decc928e86a3",
        "content": "        # 不加载示例数据，等待用户手动刷新\n\n    def _on_add_cinema(self):\n        \"\"\"添加影院功能 - 🆕 简化输入，自动获取影院名称\"\"\"\n   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "966-970",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "967-971",
        "block_hash": "d9ba9f680e63dfe4b3c11e256b9382d4",
        "content": "        add_dialog = QDialog(self)\n        add_dialog.setWindowTitle(\"添加影院\")\n        add_dialog.setF..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "973-977",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "974-978",
        "block_hash": "005933fd050fddef819e0d8dd8c6d171",
        "content": "        # 🆕 添加说明文字\n        info_label = ClassicLabel(\"请输入API域名和影院ID，系统将自动获取影院名称\")\n        info_label..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "973-977",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "975-979",
        "block_hash": "005933fd050fddef819e0d8dd8c6d171",
        "content": "        info_label = ClassicLabel(\"请输入API域名和影院ID，系统将自动获取影院名称\")\n        info_label.setStyleSheet(\"col..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1011-1015",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1012-1016",
        "block_hash": "b86adbd21839f2f79af6745de8a32455",
        "content": "        # 🆕 事件绑定 - 验证并添加\n        def validate_and_add():\n            domain = domain_input.text().st..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1011-1015",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1013-1017",
        "block_hash": "b86adbd21839f2f79af6745de8a32455",
        "content": "        def validate_and_add():\n            domain = domain_input.text().strip()\n            cinema_..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1016-1020",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1017-1021",
        "block_hash": "e112bb291e9136b780cc66e389f14d10",
        "content": "            # 验证输入\n            if not all([domain, cinema_id]):\n                QMessageBox.warning(..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1016-1020",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1018-1022",
        "block_hash": "e112bb291e9136b780cc66e389f14d10",
        "content": "            if not all([domain, cinema_id]):\n                QMessageBox.warning(add_dialog, \"输入错误\",..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1021-1025",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1022-1026",
        "block_hash": "bff14bbb59ef84164906223433e60640",
        "content": "            # 标准化域名格式\n            if domain.startswith(('http://', 'https://')):\n                # 移..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1021-1025",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1023-1027",
        "block_hash": "bff14bbb59ef84164906223433e60640",
        "content": "            if domain.startswith(('http://', 'https://')):\n                # 移除协议前缀，只保留域名\n          ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1026-1030",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1027-1031",
        "block_hash": "982237b0c8e6343933c9a92490775a21",
        "content": "            # 验证影院ID格式\n            if len(cinema_id) != 12:\n                QMessageBox.warning(add_..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1026-1030",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1028-1032",
        "block_hash": "982237b0c8e6343933c9a92490775a21",
        "content": "            if len(cinema_id) != 12:\n                QMessageBox.warning(add_dialog, \"格式错误\", \"影院ID必须..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1031-1035",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1032-1036",
        "block_hash": "bf5830f4ebda1980cca13834bb31eb14",
        "content": "            # 🆕 调用新的验证和添加方法\n            success = self.validate_and_add_cinema(domain, cinema_id, re..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1036-1040",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1037-1041",
        "block_hash": "c0c2f3923c8bc30294179a75728ee521",
        "content": "        validate_btn.clicked.connect(validate_and_add)\n        cancel_btn.clicked.connect(add_dialog..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1048-1052",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1049-1053",
        "block_hash": "f36504bf0f58f14d138020a4e52db1c0",
        "content": "            dialog.repaint()\n\n            # 🆕 调用影院信息API获取影院名称\n            from services.cinema_info_..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1050-1054",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1051-1055",
        "block_hash": "7700d0747b0d350e087ba9037917c787",
        "content": "            # 🆕 调用影院信息API获取影院名称\n            from services.cinema_info_api import get_cinema_info, fo..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1050-1054",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1052-1056",
        "block_hash": "7700d0747b0d350e087ba9037917c787",
        "content": "            from services.cinema_info_api import get_cinema_info, format_cinema_data\n\n            pr..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1053-1057",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1054-1058",
        "block_hash": "fb7797b5f2a69bb71ef2737d035ccd60",
        "content": "            print(f\"[添加影院] 开始验证影院: 域名={domain}, ID={cinema_id}\")\n\n            # 调用API获取影院信息\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1058-1062",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1059-1063",
        "block_hash": "7f0b52c2ef2a6d55124b35b133a5fd33",
        "content": "            if not cinema_info:\n                result_text.setText(\"❌ API验证失败：无法获取影院信息\\n请检查域名和影院ID是..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1070-1074",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1071-1075",
        "block_hash": "3db87e3560939c53f43e73e3bcc36b81",
        "content": "            # 🆕 显示验证成功信息\n            success_text = f\"✅ 验证成功！\\n影院名称: {cinema_name}\\n城市: {cinema_info..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "632-636",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1078-1082",
        "block_hash": "e36ff78ad0a99b88141d66d3a788ec71",
        "content": "            # 🆕 检查影院是否已存在\n            from services.cinema_manager import cinema_manager\n           ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1183-1187",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1079-1083",
        "block_hash": "7a595199dc793b511283159bdc509d0e",
        "content": "            from services.cinema_manager import cinema_manager\n            cinemas = cinema_manager...."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1088-1092",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1089-1093",
        "block_hash": "015488e864dcda19b78d14fca393d53c",
        "content": "            cinema_data = format_cinema_data(cinema_info, domain, cinema_id)\n\n            # 添加到影院列表\n..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1091-1095",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1092-1096",
        "block_hash": "0c379ca82401de176a0cde1509bda851",
        "content": "            cinemas.append(cinema_data)\n\n            # 保存到文件\n            if cinema_manager.save_cine..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1094-1098",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1095-1099",
        "block_hash": "95d6f6468b96f028ff08b987329d9864",
        "content": "            if cinema_manager.save_cinema_list(cinemas):\n                # 🆕 刷新界面\n                se..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1100-1104",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1101-1105",
        "block_hash": "3acb9177f026bf47a720bfd1c8ee93bb",
        "content": "                self._refresh_ticket_tab_cinema_list()\n\n                result_text.setText(f\"🎉 添加成功..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1102-1106",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1103-1107",
        "block_hash": "4eb23b24b5f9f48b4b7e83c209692e4e",
        "content": "                result_text.setText(f\"🎉 添加成功！\\n影院名称: {cinema_name}\\n已添加到系统中\")\n                result..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1121-1125",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1122-1126",
        "block_hash": "8923f743955a28ce59e360c2e3151291",
        "content": "    def _refresh_ticket_tab_cinema_list(self):\n        \"\"\"刷新出票Tab的影院列表\"\"\"\n        try:\n            p..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1129-1133",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1130-1134",
        "block_hash": "814c0f929b77160695f1e166ab8345ed",
        "content": "            # 发送全局事件通知主窗口刷新\n            from utils.signals import event_bus\n            from service..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1222-1226",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1131-1135",
        "block_hash": "d6d2732826f56b0ffe28d35c04587099",
        "content": "            from utils.signals import event_bus\n            from services.cinema_manager import cine..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1223-1227",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1132-1136",
        "block_hash": "c1c38628d28b477f505a60952ba161d1",
        "content": "            from services.cinema_manager import cinema_manager\n\n            # 获取最新的影院列表并发送事件\n       ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1224-1228",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1133-1137",
        "block_hash": "6cb03b636b5cc7c2ce5dc7924d07a2e1",
        "content": "\n            # 获取最新的影院列表并发送事件\n            updated_cinemas = cinema_manager.load_cinema_list()\n      ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1134-1138",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1135-1139",
        "block_hash": "74d401e426029a36c12d1eb1d4da8d43",
        "content": "            updated_cinemas = cinema_manager.load_cinema_list()\n            event_bus.cinema_list_up..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1137-1141",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1138-1142",
        "block_hash": "bdd07a75bce80bee4b6c628f52c98319",
        "content": "            print(f\"[Tab管理器] ✅ 出票Tab影院列表刷新完成\")\n\n        except Exception as e:\n            print(f\"[..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1162-1166",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1163-1167",
        "block_hash": "c9c29c65391da96bc8e6417dbe65e2b1",
        "content": "            for cinema in cinemas:\n                if cinema.get('cinemaid') == cinema_id:\n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1168-1172",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1169-1173",
        "block_hash": "639d5b36aaa1535b159c0b0e0d04f140",
        "content": "            cinemas.append(new_cinema)\n            \n            # 保存到文件\n            cinema_manager.s..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1171-1175",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1172-1176",
        "block_hash": "599a3457e7dbe045e5504ff163aedee9",
        "content": "            cinema_manager.save_cinema_list(cinemas)\n            \n            # 立即刷新界面显示\n           ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1174-1178",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "            # 立即刷新界面显示\n            self._refresh_cinema_table_display()\n            \n            # 更..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1175-1179",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "            self._refresh_cinema_table_display()\n            \n            # 更新统计信息\n            self...."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1177-1181",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1178-1182",
        "block_hash": "5e808887de33c85c1fc886a637e2d8ce",
        "content": "            self._update_cinema_stats()\n            \n            QMessageBox.information(self, \"添加成功..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1189-1193",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1190-1194",
        "block_hash": "d3d51177b8e0fdf292126970f4c8042c",
        "content": "        selected_items = self.cinema_table.selectedItems()\n        if not selected_items:\n          ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1194-1198",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1195-1199",
        "block_hash": "574cf7d56b3a6d460fedbf0616b40c06",
        "content": "        # 获取选中行的影院ID\n        row = self.cinema_table.currentRow()\n        if row < 0:\n            re..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "275-279",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1213-1217",
        "block_hash": "96be0c1b11f35eb6bcf9a5a227b283bc",
        "content": "            QMessageBox.Yes | QMessageBox.No,\n            QMessageBox.No\n        )\n        \n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1219-1223",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1220-1224",
        "block_hash": "e2e89a95057c7a371f33d9246fc3c0a2",
        "content": "    def delete_cinema_from_list(self, cinema_id, cinema_name):\n        \"\"\"从数据文件中删除影院\"\"\"\n        try:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "557-561",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1222-1226",
        "block_hash": "71a5386ab69c191bafc01b84f36a9c35",
        "content": "        try:\n            from services.cinema_manager import cinema_manager\n            \n           ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1077-1081",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1223-1227",
        "block_hash": "e53ddd3029932a701ce755d3863f90f7",
        "content": "            from services.cinema_manager import cinema_manager\n            \n            # 加载影院列表\n   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1231-1235",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1232-1236",
        "block_hash": "5ed546265f52b97c7baa971c92b5bb03",
        "content": "            if len(cinemas) == original_count:\n                QMessageBox.warning(self, \"删除失败\", f\"未..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1236-1240",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1237-1241",
        "block_hash": "4869c8b24177e82a7d88ca8abde76f47",
        "content": "            cinema_manager.save_cinema_list(cinemas)\n            \n            # 同时清理该影院的账号数据\n       ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1239-1243",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1240-1244",
        "block_hash": "4363f5b1ca52e27a63fb4fcd2dffb43c",
        "content": "            self.cleanup_cinema_accounts(cinema_id)\n            \n            # 立即刷新界面 - 修复显示问题\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1242-1246",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "            # 立即刷新界面 - 修复显示问题\n            self._refresh_cinema_table_display()\n\n            # 更新统计信息..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1243-1247",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "            self._refresh_cinema_table_display()\n\n            # 更新统计信息\n            self._update_cine..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1098-1102",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1245-1249",
        "block_hash": "393552334ec3d4d942220c50d78cb9fb",
        "content": "            # 更新统计信息\n            self._update_cinema_stats()\n\n            # 🆕 刷新出票Tab的影院列表\n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1098-1102",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1246-1250",
        "block_hash": "393552334ec3d4d942220c50d78cb9fb",
        "content": "            self._update_cinema_stats()\n\n            # 🆕 刷新出票Tab的影院列表\n            self._refresh_tick..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1248-1252",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1249-1253",
        "block_hash": "141ca18caa96313397c46eceb3b6a640",
        "content": "            self._refresh_ticket_tab_cinema_list()\n\n            QMessageBox.information(self, \"删除成功\"..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1197-1201",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1260-1264",
        "block_hash": "c59dc8939c8db6995e579903860a09a6",
        "content": "        try:\n            import json\n            import os\n            \n            accounts_file = ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1198-1202",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1261-1265",
        "block_hash": "44bb195ab36e03bb45be0b1e2a26a8e9",
        "content": "            import json\n            import os\n            \n            accounts_file = os.path.join(..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1248-1252",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1265-1269",
        "block_hash": "0bb6ea839b6fb3806d3675c9ade82578",
        "content": "            \n            if os.path.exists(accounts_file):\n                with open(accounts_file, ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1248-1252",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1266-1270",
        "block_hash": "0bb6ea839b6fb3806d3675c9ade82578",
        "content": "            if os.path.exists(accounts_file):\n                with open(accounts_file, \"r\", encoding..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1270-1274",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1271-1275",
        "block_hash": "b4523db9021259ceafb2e00145b7c705",
        "content": "                filtered_accounts = [acc for acc in accounts if acc.get('cinemaid') != cinema_id]\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1272-1276",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1273-1277",
        "block_hash": "f69c8a01c85bf5fe763c7b8e787adc0e",
        "content": "                with open(accounts_file, \"w\", encoding=\"utf-8\") as f:\n                    json.dump(..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1275-1279",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1276-1280",
        "block_hash": "d951fe8d5f5d830c3513fc07aedae202",
        "content": "                print(f\"[Tab管理器] 已清理影院 {cinema_id} 的相关账号\")\n                \n        except Exception..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "557-561",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1283-1287",
        "block_hash": "71a5386ab69c191bafc01b84f36a9c35",
        "content": "        try:\n            from services.cinema_manager import cinema_manager\n            cinemas = ci..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1289-1293",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1290-1294",
        "block_hash": "32a021847138d2a2d20e75935d3bb3c5",
        "content": "            # 重新填充数据\n            for i, cinema in enumerate(cinemas):\n                self.cinema_ta..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1293-1297",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1294-1298",
        "block_hash": "46668319a626748d0570efcf277d200d",
        "content": "                # 影院名称\n                name_item = self.cinema_table.__class__.createItem(cinema.get..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1297-1301",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1298-1302",
        "block_hash": "3a7e94ebf0433fb441fc3d5e376e2669",
        "content": "                # 影院ID\n                id_item = self.cinema_table.__class__.createItem(cinema.get('..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1302-1306",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1303-1307",
        "block_hash": "2aad1527a729aa90d716bbc95bfd2857",
        "content": "                operation_item = self.cinema_table.__class__.createItem(\"详情\")\n                self.c..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1305-1309",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1306-1310",
        "block_hash": "a55fe0a05293999bf7b634982bcd7dc3",
        "content": "            print(f\"[Tab管理器] 影院表格已刷新，当前显示 {len(cinemas)} 个影院\")\n            \n        except Exception..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "557-561",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1328-1332",
        "block_hash": "71a5386ab69c191bafc01b84f36a9c35",
        "content": "        try:\n            # 从影院管理器加载真实数据\n            from services.cinema_manager import cinema_manag..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1343-1347",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1353-1357",
        "block_hash": "32582080229af65f37d0ceeda620a7f6",
        "content": "            self.cinema_combo.addItems([\n                \"华夏优加金太都会\", \n                \"深影国际影城(佐伦虹湾购物..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1344-1348",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1354-1358",
        "block_hash": "4eef180461a73f05f01bb9f7bc3ad0fa",
        "content": "                \"华夏优加金太都会\", \n                \"深影国际影城(佐伦虹湾购物中心店)\",\n                \"深圳万友影城BCMall店\"\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1390-1394",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1391-1395",
        "block_hash": "8dd2c056939aab32f6154220c8ad1244",
        "content": "    def update_cinema_list(self, cinemas: List[Dict]):\n        \"\"\"更新影院列表\"\"\"\n        try:\n           ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1402-1406",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1403-1407",
        "block_hash": "d3dd1da21d3fba8e584ce75d0fa67dce",
        "content": "        except Exception as e:\n            print(f\"[Tab管理器] 更新影院列表错误: {e}\")\n\n\n    "
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1411-1415",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "            # 使用新的刷新显示方法\n            self._refresh_cinema_table_display()\n            \n            #..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1412-1416",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "            self._refresh_cinema_table_display()\n            \n            # 初始化统计信息\n            self..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1414-1418",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1415-1419",
        "block_hash": "137422f2de6e2dab4cd2dece913c870c",
        "content": "            self._update_cinema_stats()\n            \n            # 同时加载影片列表\n            self._load_m..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1417-1421",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1418-1422",
        "block_hash": "f3af9acf7e483229122078df7291e8ee",
        "content": "            self._load_movie_list()\n            \n        except Exception as e:\n            print(f\"..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1419-1423",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1420-1424",
        "block_hash": "9436c6198fa8e0493135f2f4c63dbfab",
        "content": "        except Exception as e:\n            print(f\"[Tab管理器] 加载影院列表错误: {e}\")\n            # 加载示例数据作为后备..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1515-1519",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1516-1520",
        "block_hash": "e2a0dee35f8adc846b3157f8dcf290b0",
        "content": "            print(\"[Tab管理器] 信号连接完成\")\n\n        except Exception as e:\n            print(f\"[Tab管理器] 信号..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1526-1530",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1527-1531",
        "block_hash": "dab96db542c01ac28fd125c69684f427",
        "content": "            # 获取当前Tab的文本\n            tab_text = self.tab_widget.tabText(index)\n            print(f\"[..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1530-1534",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1531-1535",
        "block_hash": "4d012bbfdbdee847b6379c1355746c47",
        "content": "            # 🎯 当切换到订单Tab时，自动触发刷新\n            if tab_text == \"订单\":\n                print(f\"[Tab管理器] ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1535-1539",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1536-1540",
        "block_hash": "1dcebe8f8f3e479b12c318078581aea6",
        "content": "                QTimer.singleShot(100, self._auto_refresh_orders)\n\n        except Exception as e:\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1540-1544",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1541-1545",
        "block_hash": "140ad3ed3bc08c0f178612c2bb028289",
        "content": "    def _auto_refresh_orders(self):\n        \"\"\"自动刷新订单数据\"\"\"\n        try:\n            print(f\"[Tab管理器]..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1545-1549",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1546-1550",
        "block_hash": "ee31d657ad6312b970c63a5bee35a1d0",
        "content": "            # 检查订单刷新按钮是否存在\n            if hasattr(self, 'order_refresh_btn') and self.order_refresh_..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "166-170",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1559-1563",
        "block_hash": "fecaefed1bb237aa07f7f0d1b2e96b9d",
        "content": "\n    def _connect_global_events(self):\n        \"\"\"连接全局事件\"\"\"\n        # 监听账号切换事件\n        event_bus.acc..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "166-170",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1560-1564",
        "block_hash": "fecaefed1bb237aa07f7f0d1b2e96b9d",
        "content": "    def _connect_global_events(self):\n        \"\"\"连接全局事件\"\"\"\n        # 监听账号切换事件\n        event_bus.acco..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "174-178",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1564-1568",
        "block_hash": "06057ec049ee3d5284571cbbb03b7fd4",
        "content": "    \n    def _on_account_changed(self, account_data: dict):\n        \"\"\"账号切换处理\"\"\"\n        try:\n      ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "175-179",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1565-1569",
        "block_hash": "f761da7310c43c606b4d233da7bc0364",
        "content": "    def _on_account_changed(self, account_data: dict):\n        \"\"\"账号切换处理\"\"\"\n        try:\n           ..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "176-180",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1566-1570",
        "block_hash": "abf9c72f667fc013ce08b5d8b2fa46d9",
        "content": "        \"\"\"账号切换处理\"\"\"\n        try:\n            self.current_account = account_data\n            userid..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "177-181",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1567-1571",
        "block_hash": "1a4cd1e3843aa295d32dc33a6bd302b7",
        "content": "        try:\n            self.current_account = account_data\n            userid = account_data.get(\"..."
      },
      {
        "file1": "ui\\widgets\\seat_order_widget.py",
        "lines1": "178-182",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1568-1572",
        "block_hash": "6c6fbff6e3ff1cad4245cf984012bcca",
        "content": "            self.current_account = account_data\n            userid = account_data.get(\"userid\", \"未知账..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1571-1575",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1572-1576",
        "block_hash": "14f41a307715f79cfd139b1c7d4bd738",
        "content": "            # 更新各Tab页面的账号显示\n            if hasattr(self, 'current_account_label'):\n                a..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1571-1575",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1573-1577",
        "block_hash": "14f41a307715f79cfd139b1c7d4bd738",
        "content": "            if hasattr(self, 'current_account_label'):\n                account_info = f\"当前账号: {useri..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1577-1581",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1578-1582",
        "block_hash": "6f49448ea61941a1582c3f5fdb308543",
        "content": "            self.update_bind_account_info()\n            \n            # 更新兑换券界面\n            self.upda..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1580-1584",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1581-1585",
        "block_hash": "90180c8f23bcaff780aa54fdab6f8a1f",
        "content": "            self.update_exchange_account_info()\n            \n            # 更新积分显示\n            self.c..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1582-1586",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1583-1587",
        "block_hash": "4f50517a199beadd68a825d705705192",
        "content": "            # 更新积分显示\n            self.current_points = account_data.get(\"score\", 0)\n            \n   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1585-1589",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1586-1590",
        "block_hash": "2d807286922e049920a9fa480147eb51",
        "content": "            print(f\"[Tab管理器] 账号切换: {userid}\")\n            \n        except Exception as e:\n          ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1596-1600",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1597-1601",
        "block_hash": "289004b2daa86f11188c605cf9287fcc",
        "content": "            print(f\"[Tab管理器] 影院切换: {cinema_text}\")\n\n            # 🆕 重置券列表\n            self.reset_cou..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1601-1605",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1602-1606",
        "block_hash": "3236e53080f3bb7e6d3df709db01ae6d",
        "content": "            # 🆕 禁用选座按钮 - 影院切换时\n            if hasattr(self, 'submit_order_btn'):\n                sel..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1601-1605",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1603-1607",
        "block_hash": "3236e53080f3bb7e6d3df709db01ae6d",
        "content": "            if hasattr(self, 'submit_order_btn'):\n                self.submit_order_btn.setEnabled(F..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1606-1610",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1607-1611",
        "block_hash": "3c91844c1c495849ea1795f58019b054",
        "content": "            # 清空下级选择\n            self.movie_combo.clear()\n            self.date_combo.clear()\n      ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1611-1615",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1612-1616",
        "block_hash": "c36a607e813765a3d793a397d2365212",
        "content": "            self.movie_combo.addItem(\"加载影片中...\")\n            self.date_combo.addItem(\"请先选择影片\")\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1629-1633",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1630-1634",
        "block_hash": "f7b0e4791076bae1b989df2ceb740ffc",
        "content": "            # 🆕 保存当前影院数据 - 修复券选择功能需要的影院信息\n            self.current_cinema_data = selected_cinema\n   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1634-1638",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1635-1639",
        "block_hash": "73f4c2a21f9a127fb663e3c91c9034f8",
        "content": "            self.cinema_selected.emit(cinema_text)\n\n            # 🆕 发布全局影院选择事件 - 传递完整影院数据\n          ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1637-1641",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1638-1642",
        "block_hash": "ad5e72151ed833bfae1885e668087310",
        "content": "            event_bus.cinema_selected.emit(selected_cinema)\n\n            # 🆕 检查影院是否有关联账号\n           ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1661-1665",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1662-1666",
        "block_hash": "fa9b26e003baec7e3861085f6129027b",
        "content": "        except Exception as e:\n            print(f\"[Tab管理器] 影院选择错误: {e}\")\n            self.movie_com..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1198-1202",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1670-1674",
        "block_hash": "44bb195ab36e03bb45be0b1e2a26a8e9",
        "content": "            import json\n            import os\n\n            # 加载账号数据\n            accounts_file = os.p..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "1204-1208",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1678-1682",
        "block_hash": "9e9a497aac698032a17a372d990a13f8",
        "content": "                return False\n\n            with open(accounts_file, \"r\", encoding=\"utf-8\") as f:\n    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1682-1686",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1683-1687",
        "block_hash": "d83d8df153f0a5093650ac1fd70d3325",
        "content": "            # 检查是否有该影院的账号\n            cinema_accounts = [acc for acc in accounts if acc.get('cinemai..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1697-1701",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1698-1702",
        "block_hash": "0db8b83ac62f1a427455e4114e015b5f",
        "content": "            if not self.current_account:\n                print(\"[Tab管理器] 等待账号选择...\")\n               ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1703-1707",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1704-1708",
        "block_hash": "b276a0f118c5dad0dadd18615bf93c5b",
        "content": "                QTimer.singleShot(1000, lambda: self._final_check_and_load_movies(selected_cinema))\n..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1706-1710",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1707-1711",
        "block_hash": "534e9b011a54fcfb8118ba47f29c3d87",
        "content": "            print(f\"[Tab管理器] 账号已选择: {self.current_account.get('userid', 'N/A')}\")\n            \n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1711-1715",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1712-1716",
        "block_hash": "24f2bdf6dc62892f1221b87357c429d1",
        "content": "        except Exception as e:\n            print(f\"[Tab管理器] 检查账号状态错误: {e}\")\n            self.movie_c..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1725-1729",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1726-1730",
        "block_hash": "c75b081466f8351cf1e0e4e31f48d066",
        "content": "            print(f\"[Tab管理器] 最终检查：账号已选择: {self.current_account.get('userid', 'N/A')}\")\n            \n..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1708-1712",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1727-1731",
        "block_hash": "b3dc91a84e0ef07424a87d72ede18e92",
        "content": "            \n            # 调用影片API\n            self._load_movies_for_cinema(selected_cinema)\n       ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1730-1734",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1731-1735",
        "block_hash": "4f47ca6cc5f1286135b58d1d9d749d15",
        "content": "        except Exception as e:\n            print(f\"[Tab管理器] 最终检查错误: {e}\")\n            self.movie_com..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1735-1739",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1736-1740",
        "block_hash": "56aa31cd0c82c72b5fe76bb596f572e7",
        "content": "    def _load_movies_for_cinema(self, cinema_data):\n        \"\"\"为指定影院加载影片数据\"\"\"\n        try:\n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1744-1748",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1745-1749",
        "block_hash": "5ac00d1253e44b1d1373a72fe767cf9c",
        "content": "            print(f\"[Tab管理器] 影院数据检查:\")\n            print(f\"  - 影院名称: {cinema_data.get('cinemaShortNa..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1767-1771",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1768-1772",
        "block_hash": "6ca94e9a43efdaccceb30925db9b4bdb",
        "content": "            print(f\"[Tab管理器] 账号数据检查:\")\n            print(f\"  - 用户ID: {userid}\")\n            print(f\"..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1782-1786",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1783-1787",
        "block_hash": "63c6f2915bcfc0c5497d15f1cc1e2971",
        "content": "            films_data = get_films(base_url, cinemaid, openid, userid, token)\n            \n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1796-1800",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1797-1801",
        "block_hash": "1f8176f157ef43268c42867e870a2109",
        "content": "            # 🆕 正确保存原始数据\n            self.raw_films_data = films_data  # 保存完整的原始数据\n            films..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1805-1809",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1806-1810",
        "block_hash": "0cd2235104cd0f79d63074ca706174e2",
        "content": "            if films:\n                first_film = films[0]\n                print(f\"[Tab管理器] 第一个影片数据..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1841-1845",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1842-1846",
        "block_hash": "a1f33d8125b921e48c2ccbd43861e130",
        "content": "            self.movie_combo.clear()\n            \n            if films:\n                for i, film ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1850-1854",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1851-1855",
        "block_hash": "70b27078b27495c5d328368b5e1aab40",
        "content": "                    print(f\"[Tab管理器] 处理影片 {i+1}: {film_name}\")\n                    print(f\"  - fno: ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1857-1861",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1858-1862",
        "block_hash": "4e9ce95130ff317134294bf18fabd135",
        "content": "                    # 方法1: 使用 fno 关联\n                    if film_id and film_id in shows:\n          ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1857-1861",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1859-1863",
        "block_hash": "4e9ce95130ff317134294bf18fabd135",
        "content": "                    if film_id and film_id in shows:\n                        film_plans = shows[film..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1862-1866",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1863-1867",
        "block_hash": "5ed6ed6fc6da90d7ef5b2924ab7d6da2",
        "content": "                    # 方法2: 使用 fc 关联\n                    elif film_code and film_code in shows:\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1862-1866",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1864-1868",
        "block_hash": "5ed6ed6fc6da90d7ef5b2924ab7d6da2",
        "content": "                    elif film_code and film_code in shows:\n                        film_plans = show..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1868-1872",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1869-1873",
        "block_hash": "869afe45b7977b1411df8d68f705b8e0",
        "content": "                    elif i < len(list(shows.keys())):\n                        shows_keys = list(show..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1887-1891",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1888-1892",
        "block_hash": "6cf1a8d01bcad45abb714db9f9653858",
        "content": "                                    session_with_date = session.copy()\n                             ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1898-1902",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1899-1903",
        "block_hash": "be6e7c70e1bcbe8eccdcdbdd1ed574fb",
        "content": "                print(f\"[Tab管理器] 影片列表更新完成，共{len(self.current_movies)}个影片\")\n            else:\n       ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1921-1925",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1922-1926",
        "block_hash": "7729c902203920c1f67c16baac2c182f",
        "content": "            print(f\"[Tab管理器] 影片切换: {movie_text}\")\n\n            # 🆕 重置券列表\n            self.reset_coup..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1599-1603",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1924-1928",
        "block_hash": "764a243bc89205d33ec4a8ff13d90618",
        "content": "            # 🆕 重置券列表\n            self.reset_coupon_lists()\n\n            # 🆕 禁用选座按钮 - 影片切换时\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1600-1604",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1925-1929",
        "block_hash": "919e9c4d776cd856a1585acfc8a997da",
        "content": "            self.reset_coupon_lists()\n\n            # 🆕 禁用选座按钮 - 影片切换时\n            if hasattr(self, '..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1926-1930",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1927-1931",
        "block_hash": "10bf417e262937afc63b316c2a89684b",
        "content": "            # 🆕 禁用选座按钮 - 影片切换时\n            if hasattr(self, 'submit_order_btn'):\n                sel..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1926-1930",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1928-1932",
        "block_hash": "10bf417e262937afc63b316c2a89684b",
        "content": "            if hasattr(self, 'submit_order_btn'):\n                self.submit_order_btn.setEnabled(F..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1938-1942",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1939-1943",
        "block_hash": "01750f67e8574aebce9e64a09c3d4bf3",
        "content": "            if not selected_movie:\n                print(f\"[Tab管理器] 未找到影片数据: {movie_text}\")\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1942-1946",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1943-1947",
        "block_hash": "90f58a57e72476a18f6120c2295573a7",
        "content": "            # 清空日期和场次选择\n            self.date_combo.clear()\n            self.session_combo.clear()\n ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1946-1950",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1947-1951",
        "block_hash": "c9a6f3c656e1bba20dd0e0b7aa99324b",
        "content": "            # 添加默认选项\n            self.date_combo.addItem(\"请选择日期\")\n            self.session_combo.add..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1954-1958",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1955-1959",
        "block_hash": "56d82e0dd84f79965eefe3e9fa60cf5d",
        "content": "            if not plans:\n                print(f\"[Tab管理器] 影片排期数据未加载\")\n                self.date_com..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1959-1963",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1960-1964",
        "block_hash": "de92ca10a2ac96606fe976220b637c98",
        "content": "            # 收集所有日期\n            for plan in plans:\n                show_date = plan.get('k', '')  #..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1964-1968",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1965-1969",
        "block_hash": "e068f02ee4784849833427d95c1335f0",
        "content": "                    date_part = show_date.split(' ')[0] if ' ' in show_date else show_date\n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1972-1976",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1973-1977",
        "block_hash": "3f8c34a3ba8070380185ca39b7202d2c",
        "content": "            if dates:\n                for date in dates:\n                    self.date_combo.addItem..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1985-1989",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1986-1990",
        "block_hash": "4169d6c32cf3856ab4a78a98ed8c7a79",
        "content": "            self.current_movie_data = selected_movie\n            \n        except Exception as e:\n   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1996-2000",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "1997-2001",
        "block_hash": "4861d49feb4dad67f17cfcd3efa1ddc7",
        "content": "            # 🆕 添加数据状态检查，避免循环错误\n            if not hasattr(self, 'current_movie_data') or not self.c..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2001-2005",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2002-2006",
        "block_hash": "2f9637bc7f50ab62b26cab49667de1ca",
        "content": "            print(f\"[Tab管理器] 日期切换: {date_text}\")\n\n            # 🆕 重置券列表\n            self.reset_coupo..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1599-1603",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2004-2008",
        "block_hash": "764a243bc89205d33ec4a8ff13d90618",
        "content": "            # 🆕 重置券列表\n            self.reset_coupon_lists()\n\n            # 🆕 禁用选座按钮 - 日期切换时\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1600-1604",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2005-2009",
        "block_hash": "919e9c4d776cd856a1585acfc8a997da",
        "content": "            self.reset_coupon_lists()\n\n            # 🆕 禁用选座按钮 - 日期切换时\n            if hasattr(self, '..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2006-2010",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2007-2011",
        "block_hash": "beee5605b7f1c847c3d761db28b34c62",
        "content": "            # 🆕 禁用选座按钮 - 日期切换时\n            if hasattr(self, 'submit_order_btn'):\n                sel..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2006-2010",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2008-2012",
        "block_hash": "beee5605b7f1c847c3d761db28b34c62",
        "content": "            if hasattr(self, 'submit_order_btn'):\n                self.submit_order_btn.setEnabled(F..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2011-2015",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2012-2016",
        "block_hash": "dbc02cd7ec1afe4bf8755ae3b90bbde3",
        "content": "            # 清空场次选择\n            self.session_combo.clear()\n            self.session_combo.addItem(\"..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2016-2020",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2017-2021",
        "block_hash": "bf6e6ad525a48ce9c901f572d81c3717",
        "content": "            plans = self.current_movie_data.get('plans', [])\n            if not plans:\n             ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2022-2026",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2023-2027",
        "block_hash": "f2927472e12670a2f0e812832f83bb7d",
        "content": "            matching_sessions = []\n            for plan in plans:\n                show_time = plan.g..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2027-2031",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2028-2032",
        "block_hash": "fcacd2a040abc041ecd8e85315f742d8",
        "content": "                    date_part = show_time.split(' ')[0] if ' ' in show_time else show_time\n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2058-2062",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2059-2063",
        "block_hash": "d829171fe51248a0a5ce1768440b9dde",
        "content": "            # 🆕 添加数据状态检查，避免循环错误\n            if not hasattr(self, 'current_date_sessions') or not sel..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2063-2067",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2064-2068",
        "block_hash": "7394891249b278c1e34d190cfcddce8c",
        "content": "            print(f\"[Tab管理器] 场次切换: {session_text}\")\n\n            # 🆕 重置券列表\n            self.reset_co..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2069-2073",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2070-2074",
        "block_hash": "0ba7e6f7ff3bb66ac3786742a0bc4293",
        "content": "            selected_session = None\n            session_index = self.session_combo.currentIndex() - ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2074-2078",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2075-2079",
        "block_hash": "4bbe0a8fdb5586603179dd137a826296",
        "content": "            if not selected_session:\n                print(f\"[Tab管理器] 未找到场次数据: {session_text}\")\n    ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2082-2086",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2083-2087",
        "block_hash": "9abeef724c83145d86c275134a905cea",
        "content": "            # 获取当前选择的完整信息\n            cinema_text = self.cinema_combo.currentText() if hasattr(self,..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2082-2086",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2084-2088",
        "block_hash": "9abeef724c83145d86c275134a905cea",
        "content": "            cinema_text = self.cinema_combo.currentText() if hasattr(self, 'cinema_combo') else \"\"\n ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2096-2100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2097-2101",
        "block_hash": "ba792ba1a4d72fded7cfc7c935bf641b",
        "content": "            if not cinema_data:\n                print(f\"[Tab管理器] 未找到影院数据: {cinema_text}\")\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "557-561",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2100-2104",
        "block_hash": "71a5386ab69c191bafc01b84f36a9c35",
        "content": "                \n                # 🆕 尝试从影院管理器重新加载数据\n                try:\n                    from se..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2101-2105",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2102-2106",
        "block_hash": "ac1e773cd5ee9fb9391ec6725384b97d",
        "content": "                try:\n                    from services.cinema_manager import cinema_manager\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2129-2133",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2130-2134",
        "block_hash": "5fc38864b46a0de54a59d67c5a4238e0",
        "content": "            # 🆕 启用选座按钮 - 当用户选择完场次后\n            if hasattr(self, 'submit_order_btn'):\n               ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2129-2133",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2131-2135",
        "block_hash": "5fc38864b46a0de54a59d67c5a4238e0",
        "content": "            if hasattr(self, 'submit_order_btn'):\n                self.submit_order_btn.setEnabled(T..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2137-2141",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2138-2142",
        "block_hash": "8883781f24e21589745b1e8a0dfacc90",
        "content": "        except Exception as e:\n            print(f\"[Tab管理器] 场次选择错误: {e}\")\n            import traceba..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2082-2086",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2149-2153",
        "block_hash": "9abeef724c83145d86c275134a905cea",
        "content": "\n            # 获取所有选择的信息\n            cinema_text = self.cinema_combo.currentText() if hasattr(self, ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2150-2154",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2151-2155",
        "block_hash": "b9042a9a16e281af15d1f5f72daf7865",
        "content": "            cinema_text = self.cinema_combo.currentText() if hasattr(self, 'cinema_combo') else \"\"\n ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2155-2159",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2156-2160",
        "block_hash": "4ef56646ed22ced3b39fc94e83a34357",
        "content": "            # 验证选择完整性\n            if not all([cinema_text, movie_text, date_text, session_text]):\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2155-2159",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2157-2161",
        "block_hash": "4ef56646ed22ced3b39fc94e83a34357",
        "content": "            if not all([cinema_text, movie_text, date_text, session_text]):\n                MessageM..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "542-546",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2202-2206",
        "block_hash": "ffd2e36633d186957e3fe347648a3791",
        "content": "            account = getattr(self, 'current_account', None)\n            if not account:\n           ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "544-548",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2203-2207",
        "block_hash": "42c59ae5f1a5e0117a74c3f441a46205",
        "content": "            if not account:\n                MessageManager.show_error(self, \"未选择账号\", \"请先选择账号！\", auto..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "545-549",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2204-2208",
        "block_hash": "44a1766e8a8f5b6087496d70d7a28e02",
        "content": "                MessageManager.show_error(self, \"未选择账号\", \"请先选择账号！\", auto_close=False)\n              ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "546-550",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2205-2209",
        "block_hash": "da8b901a50c7290f7b062cccf68fd378",
        "content": "                return\n\n            cinemaid = self.get_selected_cinemaid()\n            if not cinem..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "547-551",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2206-2210",
        "block_hash": "d23761d12b6282e4b304500261a2ba0f",
        "content": "\n            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid:\n                Me..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "547-551",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2207-2211",
        "block_hash": "d23761d12b6282e4b304500261a2ba0f",
        "content": "            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid:\n                Mes..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "549-553",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2208-2212",
        "block_hash": "12e58241eb8e880540528b51a36de6d5",
        "content": "            if not cinemaid:\n                MessageManager.show_error(self, \"未选择影院\", \"请先选择影院！\", aut..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2211-2215",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2212-2216",
        "block_hash": "d6f5dbdf338bd7852d1b6dac941891d5",
        "content": "            # 显示加载状态\n            self.order_refresh_btn.setText(\"刷新中...\")\n            self.order_ref..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "410-414",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2221-2225",
        "block_hash": "6afe673d25d3ee34137bbff99512fc77",
        "content": "                'pageNo': 1,                           # 标准参数名\n                'groupid': '',       ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "411-415",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2222-2226",
        "block_hash": "6484fc762c2ead10f5334d9f67ea20d4",
        "content": "                'groupid': '',                         # 集团ID\n                'cinemaid': cinemaid, ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "412-416",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2223-2227",
        "block_hash": "bd1e56a5b722de8294dc126da6b9ddb1",
        "content": "                'cinemaid': cinemaid,                  # 影院ID\n                'cardno': account.get(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2224-2228",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                'cardno': account.get('cardno', ''),   # 会员卡号\n                'userid': account['use..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2225-2229",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                'userid': account['userid'],           # 用户ID\n                'openid': account['ope..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2226-2230",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                'openid': account['openid'],           # 微信openid\n                'CVersion': '3.9.1..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2227-2231",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "                'CVersion': '3.9.12',                  # 客户端版本\n                'OS': 'Windows',     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2228-2232",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "                'OS': 'Windows',                       # 操作系统\n                'token': account['toke..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2236-2240",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2237-2241",
        "block_hash": "38232eba0894dfcfd427c8dfd16fa777",
        "content": "            if result.get('resultCode') == '0':\n                # 🔧 修复：详细分析API返回的数据结构\n              ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2257-2261",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2258-2262",
        "block_hash": "12f9c7a714738c5661320e9043e74f66",
        "content": "                # 路径1: resultData.orders\n                if isinstance(result_data, dict) and 'order..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2257-2261",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2259-2263",
        "block_hash": "12f9c7a714738c5661320e9043e74f66",
        "content": "                if isinstance(result_data, dict) and 'orders' in result_data:\n                    or..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2262-2266",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2263-2267",
        "block_hash": "8c1119de8cf734ea1b973a177c7a90c2",
        "content": "                # 路径2: resultData.orderList\n                elif isinstance(result_data, dict) and '..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2262-2266",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2264-2268",
        "block_hash": "8c1119de8cf734ea1b973a177c7a90c2",
        "content": "                elif isinstance(result_data, dict) and 'orderList' in result_data:\n                 ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2277-2281",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2278-2282",
        "block_hash": "a45566ec9b9b936ae69f467caeebf979",
        "content": "                # 路径4: 直接是数组\n                elif isinstance(result_data, list):\n                   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2282-2286",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2283-2287",
        "block_hash": "a675259dce53b28a00df40d967ba29ef",
        "content": "                if orders is None:\n                    orders = []\n                    print(f\"[订单刷新..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2294-2298",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2295-2299",
        "block_hash": "3cdcf3e3f59d6db140a9549c98854bc9",
        "content": "                        key_fields = ['orderName', 'orderS', 'orderno']\n                        for ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2317-2321",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2318-2322",
        "block_hash": "910fd0b87d38914b182a1e103b66a01c",
        "content": "        finally:\n            # 恢复按钮状态\n            self.order_refresh_btn.setText(\"刷新\")\n            s..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2357-2361",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2358-2362",
        "block_hash": "5b1955db1398fb69c25025d7bed37046",
        "content": "                status_text = (order.get('orderS') or        # ✅ 实际字段名\n                             ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2362-2366",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2363-2367",
        "block_hash": "98a0aaa71018582966375568d5a5557c",
        "content": "                # 也检查状态码\n                status_code = order.get('orderStatus') or order.get('orderS..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2367-2371",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2368-2372",
        "block_hash": "1b3f5a9d80c6f458608bbe096580991a",
        "content": "                if status_text:\n                    # 直接使用状态文本\n                    status = status_t..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2404-2408",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2405-2409",
        "block_hash": "7dbc90c91a4037c37a4d213840f87696",
        "content": "        except Exception as e:\n            print(f\"[订单表格] 更新订单表格错误: {e}\")\n            import traceba..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2434-2438",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2435-2439",
        "block_hash": "be190dcc6f4a829f07c5eea2ec7083a4",
        "content": "            # 🎯 获取订单状态，只有已支付状态的订单才能查看二维码\n            status_text = order.get('orderS', '')\n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2448-2452",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2449-2453",
        "block_hash": "4945970dfe088df3a8e035523f284ae6",
        "content": "            if not status_check_passed:\n                print(f\"[订单二维码] ⚠️ 订单状态 '{status_text}' 通常不支..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2453-2457",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2454-2458",
        "block_hash": "86dfde649c031929e61b3b901646720c",
        "content": "            order_no = order.get('orderno')\n            if not order_no:\n                print(f\"[订单..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2459-2463",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2460-2464",
        "block_hash": "0f65a98def10563a5ec7a02c122979c9",
        "content": "            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid:\n                pri..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2464-2468",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2465-2469",
        "block_hash": "5cc1a4af532fce38b11763d31d50596d",
        "content": "            print(f\"[订单二维码] 开始获取订单 {order_no} 的二维码\")\n\n            # 🎯 调用二维码API\n            self._get..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2469-2473",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2470-2474",
        "block_hash": "bb4b8e7c7e8338c3ba4cf4478b199c43",
        "content": "        except Exception as e:\n            print(f\"[订单二维码] 双击处理错误: {e}\")\n            import tracebac..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2474-2478",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2475-2479",
        "block_hash": "44d8bca2897095fbbfaa5ccf1577b895",
        "content": "    def _get_and_show_qrcode(self, order_no, cinemaid):\n        \"\"\"获取并显示订单二维码 - 修复：先获取订单详情，再生成取票码二维码..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2482-2486",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2483-2487",
        "block_hash": "f18df17721a05836fab97b9446cfb248",
        "content": "            account = getattr(self, 'current_account', None)\n            if not account:\n           ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "411-415",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2494-2498",
        "block_hash": "6484fc762c2ead10f5334d9f67ea20d4",
        "content": "                'groupid': '',\n                'cinemaid': cinemaid,\n                'cardno': accou..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "412-416",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2495-2499",
        "block_hash": "bd1e56a5b722de8294dc126da6b9ddb1",
        "content": "                'cinemaid': cinemaid,\n                'cardno': account.get('cardno', ''),\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2496-2500",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                'cardno': account.get('cardno', ''),\n                'userid': account['userid'],\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2497-2501",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                'userid': account['userid'],\n                'openid': account['openid'],\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2498-2502",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                'openid': account['openid'],\n                'CVersion': '3.9.12',\n                '..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2499-2503",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "                'CVersion': '3.9.12',\n                'OS': 'Windows',\n                'token': acco..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2500-2504",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "                'OS': 'Windows',\n                'token': account['token'],\n                'source'..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2506-2510",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2507-2511",
        "block_hash": "a7d13a270d663f936bfcc23aad00ce0a",
        "content": "            if not detail_result or detail_result.get('resultCode') != '0':\n                error_ms..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2514-2518",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2515-2519",
        "block_hash": "6901552d66d95557570f0ba6c423dd5f",
        "content": "            # 🔧 修复：检查detail_data是否为None\n            if detail_data is None:\n                print(\"[..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2519-2523",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2520-2524",
        "block_hash": "2d2d84da5b8ee3809e6a6ced9ec59d63",
        "content": "            if not isinstance(detail_data, dict):\n                print(f\"[订单二维码] ❌ 订单详情数据类型错误: {typ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1920-1924",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2523-2527",
        "block_hash": "ff2e13415a8b06084f3f9f254c881429",
        "content": "\n            # 🔧 修改：使用qrCode字段作为取票码\n            qr_code = detail_data.get('qrCode', '')\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1920-1924",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2524-2528",
        "block_hash": "ff2e13415a8b06084f3f9f254c881429",
        "content": "            # 🔧 修改：使用qrCode字段作为取票码\n            qr_code = detail_data.get('qrCode', '')\n            t..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2528-2532",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2529-2533",
        "block_hash": "ea94e3aa31acf8f9fa2308f86a3c6fbb",
        "content": "            print(f\"[订单二维码] 📋 订单详情获取成功:\")\n            print(f\"[订单二维码] 📋 - qrCode: {qr_code}\")\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1924-1928",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2533-2537",
        "block_hash": "702e258ca12f97e465d87081cf893aed",
        "content": "\n            # 🎯 确定最终的取票码（优先使用qrCode）\n            final_ticket_code = qr_code or ds_code or ticket_c..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1925-1929",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2534-2538",
        "block_hash": "52dca9df8c720007b483911a0e3917be",
        "content": "            # 🎯 确定最终的取票码（优先使用qrCode）\n            final_ticket_code = qr_code or ds_code or ticket_co..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2536-2540",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2537-2541",
        "block_hash": "217cd1e0fea1e1c647c230fc61f85304",
        "content": "            # 🎯 第三步：生成取票码二维码并显示\n            if final_ticket_code:\n                print(f\"[订单二维码] ✅ ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2541-2545",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2542-2546",
        "block_hash": "4ee0a69ebec0f085b43db101e0f8cefd",
        "content": "                self._generate_and_show_ticket_qrcode(order_no, final_ticket_code, detail_data, cine..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2546-2550",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2547-2551",
        "block_hash": "5c81ad4320b4d0c2f3008e83bebab591",
        "content": "                # 显示订单详情信息\n                self._show_ticket_code_text(order_no, \"无取票码\", detail_data..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2551-2555",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2552-2556",
        "block_hash": "cfd56dba88d6f578359a76cfde18c2bc",
        "content": "        except Exception as e:\n            print(f\"[订单二维码] ❌ 获取二维码错误: {e}\")\n            import trace..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2556-2560",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2557-2561",
        "block_hash": "c90c498a77bdfeee7e49e70d1b5806a4",
        "content": "    def _show_ticket_code_text(self, order_no, ticket_code, detail_data):\n        \"\"\"显示取票码文本信息\"\"\"\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2587-2591",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2588-2592",
        "block_hash": "35f9eab276faf7a79d217227b0a643a9",
        "content": "            from utils.signals import event_bus\n            event_bus.show_qrcode.emit(ticket_data)\n..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2592-2596",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2593-2597",
        "block_hash": "d9b5eb0ab2fcc15ee7accb2e18d5afce",
        "content": "        except Exception as e:\n            print(f\"[订单二维码] ❌ 显示取票码文本错误: {e}\")\n            import tra..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2597-2601",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2598-2602",
        "block_hash": "2badf36d696ba69f4bf2b539ab00a77f",
        "content": "    def _show_qrcode_image_with_text(self, qr_bytes, order_no, detail_data):\n        \"\"\"显示二维码图片（配合文本..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2635-2639",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2636-2640",
        "block_hash": "d0de0149944ef20051defc5e247719de",
        "content": "            from utils.signals import event_bus\n            event_bus.show_qrcode.emit(combined_data..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2640-2644",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2641-2645",
        "block_hash": "0ca987addb9a79f996df948a698ba4a3",
        "content": "        except Exception as e:\n            print(f\"[订单二维码] ❌ 显示组合信息错误: {e}\")\n            import trac..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2651-2655",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2652-2656",
        "block_hash": "5c53a2f2ccaf635cf975a8ee538348fc",
        "content": "            # 🔧 直接导入完整二维码生成器（根据诊断结果，模块是可用的）\n            from utils.qrcode_generator import generate_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1949-1953",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2655-2659",
        "block_hash": "0109461101d9f517335a7a46da5135b0",
        "content": "\n            # 🎯 生成二维码图片\n            qr_bytes = generate_ticket_qrcode(ticket_code, detail_data)\n\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2656-2660",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2657-2661",
        "block_hash": "7e1c4e81a7280609d8416c94d3cf2fcc",
        "content": "            qr_bytes = generate_ticket_qrcode(ticket_code, detail_data)\n\n            if qr_bytes:\n  ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2661-2665",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2662-2666",
        "block_hash": "d9ad2d2cd68eaed563649ce30134b5d5",
        "content": "                # 🎯 保存二维码图片到本地\n                save_path = save_qrcode_image(qr_bytes, order_no, cin..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2661-2665",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2663-2667",
        "block_hash": "d9ad2d2cd68eaed563649ce30134b5d5",
        "content": "                save_path = save_qrcode_image(qr_bytes, order_no, cinema_id)\n                if save..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2612-2616",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2666-2670",
        "block_hash": "211ac9091a442d7f57454af4c38fe203",
        "content": "\n                # 🎯 创建组合显示数据\n                combined_data = {\n                    'order_no': orde..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1964-1968",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2670-2674",
        "block_hash": "f45dfd7e7dd15303b22f3868c9d003a5",
        "content": "                    'qr_bytes': qr_bytes,\n                    'qr_path': save_path,  # 🎯 添加图片路径\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1965-1969",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2671-2675",
        "block_hash": "975631ec7ea90a05b94cbfb3efd1cdf2",
        "content": "                    'qr_path': save_path,  # 🎯 添加图片路径\n                    'data_size': len(qr_bytes)..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1966-1970",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2672-2676",
        "block_hash": "7c08186060a70d464358dd3fd3bd77ef",
        "content": "                    'data_size': len(qr_bytes),\n                    'data_format': 'PNG',\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1967-1971",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2673-2677",
        "block_hash": "b7823eaa3714203075d23537aece2bcc",
        "content": "                    'data_format': 'PNG',\n                    'display_type': 'generated_qrcode',  #..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1968-1972",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2674-2678",
        "block_hash": "62f085e94c76e46fab89d0a0b43bc92a",
        "content": "                    'display_type': 'generated_qrcode',  # 标识为生成的二维码\n                    'ticket_cod..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1969-1973",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2675-2679",
        "block_hash": "64a7284f76c0e0f2843b91847b30fb1f",
        "content": "                    'ticket_code': ticket_code,\n                    'film_name': detail_data.get('fi..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1970-1974",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2676-2680",
        "block_hash": "36f771317e9af87c959a92442583da7a",
        "content": "                    'film_name': detail_data.get('filmName', ''),\n                    'show_time': d..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2634-2638",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2689-2693",
        "block_hash": "d36c41d07c93f22862bd245f6d141be2",
        "content": "\n                # 🎯 通过事件总线发送数据\n                from utils.signals import event_bus\n                ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2690-2694",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2691-2695",
        "block_hash": "dc79a4d5220aec92fa2f93bcb0246bf0",
        "content": "                from utils.signals import event_bus\n                event_bus.show_qrcode.emit(combi..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2693-2697",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2694-2698",
        "block_hash": "332af6f94be1e32aefe0efb662e6e926",
        "content": "                print(f\"[订单二维码] ✅ 生成的二维码数据已发送到主窗口显示\")\n\n            else:\n                print(f\"[订单..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2695-2699",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2696-2700",
        "block_hash": "cef25a7514fdc58442168958e6a2836d",
        "content": "            else:\n                print(f\"[订单二维码] ❌ 取票码二维码生成失败\")\n                # 降级显示文本信息\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2700-2704",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2701-2705",
        "block_hash": "06a3c3a1bb75350403e69afe18c7558d",
        "content": "        except Exception as e:\n            print(f\"[订单二维码] ❌ 生成取票码二维码错误: {e}\")\n            import tr..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2425-2429",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2712-2716",
        "block_hash": "a51a340daedc01aa3f92d8139269cb33",
        "content": "            if not item:\n                return\n\n            row = item.row()\n            if not has..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2426-2430",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2713-2717",
        "block_hash": "cf7901d389ff8a341ebf8cfa279ef847",
        "content": "                return\n\n            row = item.row()\n            if not hasattr(self, 'order_data_ca..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2427-2431",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2714-2718",
        "block_hash": "54059dadb1d79cd2c0ff61f8c00815e3",
        "content": "\n            row = item.row()\n            if not hasattr(self, 'order_data_cache') or row >= len(sel..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2428-2432",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2715-2719",
        "block_hash": "e4a632d902a9a3a58647e9b08fe7f15c",
        "content": "            row = item.row()\n            if not hasattr(self, 'order_data_cache') or row >= len(self..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2724-2728",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2725-2729",
        "block_hash": "a4a16a53592e35f5e50bc4ae491623a5",
        "content": "            # 查看详情（所有订单都可以）\n            detail_action = menu.addAction(\"查看详情\")\n            detail_ac..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2729-2733",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2730-2734",
        "block_hash": "491d50ce586e1b3a02189fbf4824bf48",
        "content": "            if status == 0:  # 待支付\n                menu.addSeparator()\n                cancel_action..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2745-2749",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2746-2750",
        "block_hash": "a27b53c9522155895a06a0df8ce7f666",
        "content": "        except Exception as e:\n            print(f\"[订单菜单] 右键菜单错误: {e}\")\n            import traceback..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2758-2762",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2759-2763",
        "block_hash": "5f500d66e0157b47d43930b483344d95",
        "content": "            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid:\n                Mes..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2764-2768",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2765-2769",
        "block_hash": "f7c8f2e9776a50b9edafd3c17d9313f4",
        "content": "            order_no = (order.get('orderNo') or\n                       order.get('orderno') or\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2769-2773",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2770-2774",
        "block_hash": "a01d5198306763c5934125bba7cad2a8",
        "content": "            if not order_no:\n                MessageManager.show_error(self, \"错误\", \"订单号不存在\", auto_cl..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2493-2497",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2778-2782",
        "block_hash": "ae672a038cf97d69e64b043fdc780a65",
        "content": "                'orderno': order_no,\n                'groupid': '',\n                'cinemaid': cine..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "411-415",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2779-2783",
        "block_hash": "6484fc762c2ead10f5334d9f67ea20d4",
        "content": "                'groupid': '',\n                'cinemaid': cinemaid,\n                'cardno': accou..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "412-416",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2780-2784",
        "block_hash": "bd1e56a5b722de8294dc126da6b9ddb1",
        "content": "                'cinemaid': cinemaid,\n                'cardno': account.get('cardno', ''),\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2781-2785",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                'cardno': account.get('cardno', ''),\n                'userid': account['userid'],\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2782-2786",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                'userid': account['userid'],\n                'openid': account['openid'],\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2783-2787",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                'openid': account['openid'],\n                'CVersion': '3.9.12',\n                '..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2784-2788",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "                'CVersion': '3.9.12',\n                'OS': 'Windows',\n                'token': acco..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2785-2789",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "                'OS': 'Windows',\n                'token': account['token'],\n                'source'..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2753-2757",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2808-2812",
        "block_hash": "85e900de4e52962630a39048033ffafb",
        "content": "        try:\n            account = getattr(self, 'current_account', None)\n            if not account..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2754-2758",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2809-2813",
        "block_hash": "fd07c5d2aee7d76d7fecbb8c58c43523",
        "content": "            account = getattr(self, 'current_account', None)\n            if not account:\n           ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2755-2759",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2810-2814",
        "block_hash": "5f14fb5437d37354aa2744b1e15ca1a6",
        "content": "            if not account:\n                MessageManager.show_error(self, \"错误\", \"缺少账号信息\", auto_clo..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2756-2760",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2811-2815",
        "block_hash": "79918fe05fec37623550a9a46d91b2c4",
        "content": "                MessageManager.show_error(self, \"错误\", \"缺少账号信息\", auto_close=False)\n                re..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2757-2761",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2812-2816",
        "block_hash": "23b3aafd43028e4d8a25d46efe3ad571",
        "content": "                return\n\n            cinemaid = self.get_selected_cinemaid()\n            if not cinem..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2758-2762",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2813-2817",
        "block_hash": "5f500d66e0157b47d43930b483344d95",
        "content": "\n            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid:\n                Me..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2758-2762",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2814-2818",
        "block_hash": "5f500d66e0157b47d43930b483344d95",
        "content": "            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid:\n                Mes..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2760-2764",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2815-2819",
        "block_hash": "5f8b3e22e8006aebb99d6b9a8970158c",
        "content": "            if not cinemaid:\n                MessageManager.show_error(self, \"错误\", \"缺少影院信息\", auto_cl..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2761-2765",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2816-2820",
        "block_hash": "ded7fc318b9e701295cde866acf9fd6b",
        "content": "                MessageManager.show_error(self, \"错误\", \"缺少影院信息\", auto_close=False)\n                re..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2762-2766",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2817-2821",
        "block_hash": "a405fae65b1dfb21cf872e2860adbebc",
        "content": "                return\n\n            # 获取订单号\n            order_no = (order.get('orderNo') or\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2763-2767",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2818-2822",
        "block_hash": "22a25b180cdb4efd9df5b7718e338872",
        "content": "\n            # 获取订单号\n            order_no = (order.get('orderNo') or\n                       order.ge..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2764-2768",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2819-2823",
        "block_hash": "f7c8f2e9776a50b9edafd3c17d9313f4",
        "content": "            # 获取订单号\n            order_no = (order.get('orderNo') or\n                       order.get..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2764-2768",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2820-2824",
        "block_hash": "f7c8f2e9776a50b9edafd3c17d9313f4",
        "content": "            order_no = (order.get('orderNo') or\n                       order.get('orderno') or\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2766-2770",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2821-2825",
        "block_hash": "d80899c9fa3ebc80f06729733c5cafbb",
        "content": "                       order.get('orderno') or\n                       order.get('order_id') or\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2767-2771",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2822-2826",
        "block_hash": "fa4efede2e6b939b68bb71bb395cc30c",
        "content": "                       order.get('order_id') or\n                       order.get('orderid'))\n\n      ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2768-2772",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2823-2827",
        "block_hash": "f367e86ebb33ff79b2acabcfae9f3f79",
        "content": "                       order.get('orderid'))\n\n            if not order_no:\n                MessageMa..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2769-2773",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2824-2828",
        "block_hash": "a01d5198306763c5934125bba7cad2a8",
        "content": "\n            if not order_no:\n                MessageManager.show_error(self, \"错误\", \"订单号不存在\", auto_c..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2769-2773",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2825-2829",
        "block_hash": "a01d5198306763c5934125bba7cad2a8",
        "content": "            if not order_no:\n                MessageManager.show_error(self, \"错误\", \"订单号不存在\", auto_cl..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2829-2833",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2830-2834",
        "block_hash": "2d9562ced5b9d0d790a32b2e080fe9a4",
        "content": "            reply = QMessageBox.question(self, \"确认取消\",\n                                       f\"确定要取..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2776-2780",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2840-2844",
        "block_hash": "54fc62064f0853336906faeddc2b1ddc",
        "content": "\n            params = {\n                'orderno': order_no,\n                'groupid': '',\n        ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2777-2781",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2841-2845",
        "block_hash": "03e98022924b6dadc1992b86da633c6c",
        "content": "            params = {\n                'orderno': order_no,\n                'groupid': '',\n         ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2493-2497",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2842-2846",
        "block_hash": "ae672a038cf97d69e64b043fdc780a65",
        "content": "                'orderno': order_no,\n                'groupid': '',\n                'cinemaid': cine..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "411-415",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2843-2847",
        "block_hash": "6484fc762c2ead10f5334d9f67ea20d4",
        "content": "                'groupid': '',\n                'cinemaid': cinemaid,\n                'cardno': accou..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "412-416",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2844-2848",
        "block_hash": "bd1e56a5b722de8294dc126da6b9ddb1",
        "content": "                'cinemaid': cinemaid,\n                'cardno': account.get('cardno', ''),\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "968-972",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2845-2849",
        "block_hash": "290e1d36722557aec02981255a177ea6",
        "content": "                'cardno': account.get('cardno', ''),\n                'userid': account['userid'],\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "969-973",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2846-2850",
        "block_hash": "d08b56a1edf5383c93206fabc803fbf5",
        "content": "                'userid': account['userid'],\n                'openid': account['openid'],\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "970-974",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2847-2851",
        "block_hash": "fdc6d9b7d3c43af616ccf1170331c4c7",
        "content": "                'openid': account['openid'],\n                'CVersion': '3.9.12',\n                '..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "971-975",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2848-2852",
        "block_hash": "9c47c71e0c4adcf3a4bd717e1976c55e",
        "content": "                'CVersion': '3.9.12',\n                'OS': 'Windows',\n                'token': acco..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "972-976",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2849-2853",
        "block_hash": "07e8043850cff1c007493f187a8d6ef0",
        "content": "                'OS': 'Windows',\n                'token': account['token'],\n                'source'..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2860-2864",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2861-2865",
        "block_hash": "b4c43fc66815ec8c03aa2e1e9a42752f",
        "content": "                self._on_refresh_orders()\n            else:\n                error_msg = result.get('..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2453-2457",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2875-2879",
        "block_hash": "86dfde649c031929e61b3b901646720c",
        "content": "            # 获取订单号\n            order_no = order.get('orderno')\n            if not order_no:\n       ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2453-2457",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2876-2880",
        "block_hash": "86dfde649c031929e61b3b901646720c",
        "content": "            order_no = order.get('orderno')\n            if not order_no:\n                print(f\"[订单..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2456-2460",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2878-2882",
        "block_hash": "ccdd9c24ccbe42e18829277661c094a4",
        "content": "                print(f\"[订单二维码] 订单号不存在\")\n                return\n\n            # 获取影院ID\n            ci..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2457-2461",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2879-2883",
        "block_hash": "366215f6bcc4644f4b6180691a78ef5f",
        "content": "                return\n\n            # 获取影院ID\n            cinemaid = self.get_selected_cinemaid()\n   ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2458-2462",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2880-2884",
        "block_hash": "b8b9c17812a99963ae82848f68e31e20",
        "content": "\n            # 获取影院ID\n            cinemaid = self.get_selected_cinemaid()\n            if not cinemai..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2459-2463",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2881-2885",
        "block_hash": "0f65a98def10563a5ec7a02c122979c9",
        "content": "            # 获取影院ID\n            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2459-2463",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2882-2886",
        "block_hash": "0f65a98def10563a5ec7a02c122979c9",
        "content": "            cinemaid = self.get_selected_cinemaid()\n            if not cinemaid:\n                pri..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2886-2890",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2887-2891",
        "block_hash": "4b0ade3eda8a43753b31e1666b28db13",
        "content": "            print(f\"[订单二维码] 右键菜单获取订单 {order_no} 的二维码\")\n\n            # 🎯 调用统一的二维码获取方法\n            sel..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2466-2470",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2888-2892",
        "block_hash": "ae4695188cb36f7466de23e37f38897c",
        "content": "\n            # 🎯 调用统一的二维码获取方法\n            self._get_and_show_qrcode(order_no, cinemaid)\n\n        exc..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2891-2895",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2892-2896",
        "block_hash": "9480efb32e54d615c0f61571cc68b91d",
        "content": "        except Exception as e:\n            print(f\"[订单二维码] 右键菜单获取二维码错误: {e}\")\n            import tra..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2903-2907",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2904-2908",
        "block_hash": "57a6e695d10b007c165f449cfbbbdb15",
        "content": "            # 影片信息\n            movie = detail_data.get('movieName', detail_data.get('movie', '未知影片')..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2932-2936",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2933-2937",
        "block_hash": "2027198bb10a8d079f77e7553b866595",
        "content": "            # 价格信息\n            amount = detail_data.get('amount', detail_data.get('totalPrice', 0))\n..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2936-2940",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2937-2941",
        "block_hash": "33fee34ff93797f52faf5c8f862ac225",
        "content": "            # 状态信息\n            status = self.get_order_status_text(detail_data.get('orderStatus', -1..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2947-2951",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2948-2952",
        "block_hash": "3f512e0a4746f817ce4f1ab901a16859",
        "content": "        except Exception as e:\n            print(f\"[订单详情] 显示详情错误: {e}\")\n            import traceback..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "925-929",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2956-2960",
        "block_hash": "b70fdcbbe0ae021767497bc69380eb3c",
        "content": "        layout.setContentsMargins(10, 10, 10, 10)\n        layout.setSpacing(10)\n        \n        # 操..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2969-2973",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2970-2974",
        "block_hash": "e74cec90f4b8e978ad06d7a4b4f8e33b",
        "content": "        refresh_cinema_btn = ClassicButton(\"刷新列表\", \"default\")\n        refresh_cinema_btn.clicked.con..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2973-2977",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2974-2978",
        "block_hash": "2b4dde4281f254b3e566efad4790df42",
        "content": "        # 🆕 添加影院采集按钮\n        cinema_collect_btn = ClassicButton(\"影院采集\", \"primary\")\n        cinema_co..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "120-124",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2978-2982",
        "block_hash": "d32775b7dbe83a355e992f51d85b0b74",
        "content": "\n        button_layout.addStretch()\n        layout.addLayout(button_layout)\n        \n        # 影院列表表..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2981-2985",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2982-2986",
        "block_hash": "7e217dac4015a05261651d32bc44e0c9",
        "content": "        # 影院列表表格\n        self.cinema_table = ClassicTableWidget()\n        self.cinema_table.setColum..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2981-2985",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2983-2987",
        "block_hash": "7e217dac4015a05261651d32bc44e0c9",
        "content": "        self.cinema_table = ClassicTableWidget()\n        self.cinema_table.setColumnCount(3)\n       ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2987-2991",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2988-2992",
        "block_hash": "b0932c5edbb0e33d80bdc872e9fe34a3",
        "content": "        header = self.cinema_table.horizontalHeader()\n        header.resizeSection(0, 200)  # 影院名称\n ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2992-2996",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2993-2997",
        "block_hash": "b8d7ae27133a76ecdfa21767cf7819a6",
        "content": "        # 设置行高\n        self.cinema_table.verticalHeader().setDefaultSectionSize(36)\n        \n       ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2992-2996",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2994-2998",
        "block_hash": "b8d7ae27133a76ecdfa21767cf7819a6",
        "content": "        self.cinema_table.verticalHeader().setDefaultSectionSize(36)\n        \n        layout.addWidg..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2997-3001",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2998-3002",
        "block_hash": "1f7536b9d55e511aed7d929828a9cde8",
        "content": "        # 统计信息\n        self.cinema_stats_label = ClassicLabel(\"影院统计信息加载中...\")\n        self.cinema_st..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "2997-3001",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "2999-3003",
        "block_hash": "1f7536b9d55e511aed7d929828a9cde8",
        "content": "        self.cinema_stats_label = ClassicLabel(\"影院统计信息加载中...\")\n        self.cinema_stats_label.setSt..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3005-3009",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3006-3010",
        "block_hash": "87e7f18254e366907c5ab8da65bd7cca",
        "content": "    def _on_cinema_collect(self):\n        \"\"\"🆕 影院采集功能 - 打开curl命令输入对话框\"\"\"\n        try:\n            pr..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3013-3017",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3014-3018",
        "block_hash": "0c0019ec0a4f451aaeb68ca5eac60ff3",
        "content": "            # 创建并显示对话框\n            extractor_dialog = AutoParameterExtractor(self)\n            extra..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3018-3022",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3019-3023",
        "block_hash": "e7f2260d6fdd047c74021c924921fced",
        "content": "            extractor_dialog.collection_completed = self._on_collection_completed\n\n            # 显示对..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3023-3027",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3024-3028",
        "block_hash": "5ebdf50f29c17888cace51444b66a351",
        "content": "            if result == QDialog.Accepted:\n                print(\"[影院采集] ✅ 用户确认采集操作\")\n            el..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3036-3040",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3037-3041",
        "block_hash": "c8ca46154ab40cdfedace46d9960fd55",
        "content": "    def _on_collection_completed(self, success: bool, message: str = \"\"):\n        \"\"\"🆕 影院采集完成后的回调处理\"..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3043-3047",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3044-3048",
        "block_hash": "95210b0c2509d2965407a99cfe350b81",
        "content": "                print(\"[影院采集] 🔄 开始刷新界面...\")\n\n                # 1. 刷新影院表格显示\n                self._ref..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3046-3050",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "                # 1. 刷新影院表格显示\n                self._refresh_cinema_table_display()\n\n                ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1096-1100",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3047-3051",
        "block_hash": "a03bb6ff1c593c32d001a98237a9a8a3",
        "content": "                self._refresh_cinema_table_display()\n\n                # 2. 更新统计信息\n                se..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1098-1102",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3049-3053",
        "block_hash": "393552334ec3d4d942220c50d78cb9fb",
        "content": "                # 2. 更新统计信息\n                self._update_cinema_stats()\n\n                # 3. 刷新出票Ta..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1098-1102",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3050-3054",
        "block_hash": "393552334ec3d4d942220c50d78cb9fb",
        "content": "                self._update_cinema_stats()\n\n                # 3. 刷新出票Tab的影院列表\n                self...."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3083-3087",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3084-3088",
        "block_hash": "e558cbc1056db4762aca85fb7d0826d7",
        "content": "            time_info = session.get('q', '')  # 时间\n            hall_info = session.get('t', '')  # 影..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3105-3109",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3106-3110",
        "block_hash": "6ce6a2d905c306782faac58d6907be3f",
        "content": "            if price_info and price_info > 0:\n                price_display = f\"¥{price_info}\"\n     ..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "3111-3115",
        "file2": "ui\\widgets\\tab_manager_widget.py",
        "lines2": "3112-3116",
        "block_hash": "5542dbda10b3eeeb17c5ffbd988271c3",
        "content": "            session_text = f\"{time_display} {hall_display} {price_display}\"\n            \n           ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "7-11",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "8-12",
        "block_hash": "42faddebcb8c440b5ba1df8a7ad43883",
        "content": "import os\nfrom datetime import datetime\nfrom PIL import Image, ImageDraw, ImageFont\nimport io\n"
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "49-53",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "50-54",
        "block_hash": "8403550fb59fa19439d3acf492935341",
        "content": "    try:\n        # 获取Python安装路径\n        python_path = os.path.dirname(sys.executable)\n        site_p..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "82-86",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "83-87",
        "block_hash": "deb94a8a9c3bce6eb6ab0c67ff7042b7",
        "content": "    # 所有策略都失败\n    QRCODE_AVAILABLE = False\n    qrcode = None\n    print(f\"[二维码生成] ❌ 所有导入策略都失败，使用备用方案\"..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "82-86",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "84-88",
        "block_hash": "deb94a8a9c3bce6eb6ab0c67ff7042b7",
        "content": "    QRCODE_AVAILABLE = False\n    qrcode = None\n    print(f\"[二维码生成] ❌ 所有导入策略都失败，使用备用方案\")\n\n    # 详细诊断信..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "88-92",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "89-93",
        "block_hash": "393f9e5180c440a61f66a0f9b74a5d10",
        "content": "    print(f\"[二维码生成] 🔍 导入失败诊断:\")\n    print(f\"[二维码生成] 📋 Python: {sys.executable}\")\n    print(f\"[二维码生成]..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "93-97",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "94-98",
        "block_hash": "c6660cfdbb522192857b2fa1008d62a9",
        "content": "    return False, None\n\n# 在模块加载时执行一次检查\nQRCODE_AVAILABLE, qrcode = ensure_qrcode_import()\n"
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "106-110",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "107-111",
        "block_hash": "35cb5ac46fa240ac33a085d5735cfe46",
        "content": "        from services.cinema_manager import CinemaManager\n\n        # 获取影院管理器实例\n        cinema_manage..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "109-113",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "110-114",
        "block_hash": "ebfef5469f09e01a5d678a2022c4cb6f",
        "content": "        cinema_manager = CinemaManager()\n\n        # 获取所有影院数据\n        cinemas = cinema_manager.load_c..."
      },
      {
        "file1": "ui\\widgets\\tab_manager_widget.py",
        "lines1": "1159-1163",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "112-116",
        "block_hash": "ea558a7c6c82a187c3ba39a9c6bd28e3",
        "content": "        # 获取所有影院数据\n        cinemas = cinema_manager.load_cinema_list()\n\n        # 查找匹配的影院\n        fo..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "18-22",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "130-134",
        "block_hash": "3ecc426b38038db34f1a40f4a409e776",
        "content": "        # 降级使用硬编码映射\n        cinema_name_map = {\n            \"35fec8259e74\": \"华夏优加荟大都荟\",\n            ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "19-23",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "131-135",
        "block_hash": "a6533509345907db2d51231a924a8a63",
        "content": "        cinema_name_map = {\n            \"35fec8259e74\": \"华夏优加荟大都荟\",\n            \"b8e8b8b8b8b8\": \"其他影..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "147-151",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "148-152",
        "block_hash": "e7ce70e9d199e3cea384e7185a545223",
        "content": "        # 绘制边框\n        border_width = 10\n        draw.rectangle([border_width, border_width, width-b..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "147-151",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "149-153",
        "block_hash": "e7ce70e9d199e3cea384e7185a545223",
        "content": "        border_width = 10\n        draw.rectangle([border_width, border_width, width-border_width, he..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "152-156",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "153-157",
        "block_hash": "a034a6dfe53a43b0a79cf42fc1c8b232",
        "content": "        # 绘制网格模式（模拟二维码外观）\n        grid_size = 8\n        for x in range(border_width + 20, width - bo..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "161-165",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "162-166",
        "block_hash": "4b4b8c463ce0de47223e3005321d02c1",
        "content": "        try:\n            font = ImageFont.truetype(\"msyh.ttc\", 14)\n        except:\n            font ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "174-178",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "175-179",
        "block_hash": "fe3d1940ffded0c36d6a1ec26f7cc3e8",
        "content": "        padding = 5\n        draw.rectangle([text_x - padding, text_y - padding,\n                    ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "179-183",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "180-184",
        "block_hash": "f147d8b1a5490dc54b7b9faa5a810ef4",
        "content": "        # 绘制取票码文字\n        draw.text((text_x, text_y), ticket_code, fill='black', font=font)\n\n       ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "182-186",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "183-187",
        "block_hash": "bb884d5783e99de8f9e7c0e473f57de4",
        "content": "        return img\n\n    except Exception as e:\n        print(f\"[二维码生成] ❌ 创建备用二维码失败: {e}\")\n        # ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "184-188",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "185-189",
        "block_hash": "bcd3208af2ad9a0017a6233c6509eb17",
        "content": "    except Exception as e:\n        print(f\"[二维码生成] ❌ 创建备用二维码失败: {e}\")\n        # 返回一个简单的白色图片\n        ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "200-204",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "201-205",
        "block_hash": "310467b7915a2e6c093677b8e0f84546",
        "content": "        if not ticket_code:\n            print(f\"[二维码生成] ❌ 取票码为空\")\n            return None\n\n        #..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "205-209",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "206-210",
        "block_hash": "cb5999ebd710bb6234d759aa5758d12d",
        "content": "        qr_available, qr_module = ensure_qrcode_import()\n\n        if qr_available and qr_module:\n   ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "224-228",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "225-229",
        "block_hash": "fbc05d58da09d5fb6a61758607e78497",
        "content": "            # 🎨 增大二维码尺寸（增加25%）\n            original_size = qr_img.size\n            new_size = int(or..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "237-241",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "238-242",
        "block_hash": "2a101cc9ef87fc192e0bc8c9adf0bfce",
        "content": "        if order_info:\n            final_img = create_qrcode_with_info(qr_img, ticket_code, order_in..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "242-246",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "243-247",
        "block_hash": "a8f0f65cbad7ab1a93ae47fa484f385b",
        "content": "        # 🎯 转换为字节数据\n        img_bytes = io.BytesIO()\n        final_img.save(img_bytes, format='PNG')..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "247-251",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "248-252",
        "block_hash": "5bb89396746cbf1a8068a6e45ee9bdd0",
        "content": "        result_bytes = img_bytes.getvalue()\n        print(f\"[二维码生成] ✅ 二维码生成完成: {len(result_bytes)} b..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "281-285",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "282-286",
        "block_hash": "b1dd29be97257a5915eaa00bb9902ec3",
        "content": "        # 🎨 计算实际需要的文字高度（8行文字 + 间距）\n        estimated_text_lines = 8  # 取票码+影片+影厅+影院+时间+座位+手机+订单\n    ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "289-293",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "290-294",
        "block_hash": "d0781b8f557246430c98424764ee30f5",
        "content": "        print(f\"[二维码生成] 📐 画布尺寸: {canvas_width}x{canvas_height}\")\n        print(f\"[二维码生成] 📐 二维码尺寸: {q..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "296-300",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "297-301",
        "block_hash": "0a2135866ba62a53478223259a621e65",
        "content": "        # 🎯 粘贴二维码（顶部留少量边距）\n        qr_x = (canvas_width - qr_width) // 2\n        qr_y = 8  # 🎨 顶部边距：..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "296-300",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "298-302",
        "block_hash": "0a2135866ba62a53478223259a621e65",
        "content": "        qr_x = (canvas_width - qr_width) // 2\n        qr_y = 8  # 🎨 顶部边距：8px\n        canvas.paste(qr..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "310-314",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "311-315",
        "block_hash": "a9724bd33d9bf591ac168fe565a563bd",
        "content": "                font_unified = ImageFont.truetype(\"simhei.ttf\", 24)  # 黑体\n            except:\n      ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "315-319",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "316-320",
        "block_hash": "e8d5c3a40360c91f97e7073d9cce50d8",
        "content": "        # 🎯 绘制文字信息（紧凑布局）\n        left_margin = 12  # 🎨 减少左边距：从15px到12px\n        y_offset = qr_y + qr..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "315-319",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "317-321",
        "block_hash": "e8d5c3a40360c91f97e7073d9cce50d8",
        "content": "        left_margin = 12  # 🎨 减少左边距：从15px到12px\n        y_offset = qr_y + qr_height + 12  # 🎨 减少二维码与文..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "320-324",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "321-325",
        "block_hash": "9cdcd04754aacd6ae79fadce862c0f00",
        "content": "        # 🎯 取票码（使用dsValidateCode，重点显示，红色）\n        ticket_text = f\"取票码: {ds_validate_code}\"\n        d..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "320-324",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "322-326",
        "block_hash": "9cdcd04754aacd6ae79fadce862c0f00",
        "content": "        ticket_text = f\"取票码: {ds_validate_code}\"\n        draw.text((left_margin, y_offset), ticket_t..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "326-330",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "327-331",
        "block_hash": "e57383089a320f75b653a10278a7678c",
        "content": "        if film_name and film_name != '未知影片':\n            film_text = f\"影片: {film_name}\"\n           ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "332-336",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "333-337",
        "block_hash": "a2f0524a65a49c6e9f2b82e7e3bbbb95",
        "content": "        if hall_name:\n            hall_text = f\"影厅: {hall_name}\"\n            draw.text((left_margin,..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "338-342",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "339-343",
        "block_hash": "55f3a7db22eafeb931e08f57aaabe137",
        "content": "        if cinema_name and cinema_name != '未知影院':\n            cinema_text = f\"影院: {cinema_name}\"\n   ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "344-348",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "345-349",
        "block_hash": "2284d2f71776dbbabc2958c8c37d450c",
        "content": "        if show_time and show_time != '未知时间':\n            time_text = f\"时间: {show_time}\"\n           ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "350-354",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "351-355",
        "block_hash": "a94d9b1c9bf80efaf0b3c7781d3480c1",
        "content": "        if seat_info and seat_info != '未知座位':\n            seat_text = f\"座位: {seat_info}\"\n           ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "359-363",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "360-364",
        "block_hash": "d1b48ace97ade68e59fe167dad87f398",
        "content": "        if mobile:\n            mobile_text = f\"手机: {mobile}\"\n            draw.text((left_margin, y_o..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "365-369",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "366-370",
        "block_hash": "6aa900320859a53cda45930e46111e22",
        "content": "        if cardno:\n            card_text = f\"卡号: {cardno}\"\n            draw.text((left_margin, y_off..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "370-374",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "371-375",
        "block_hash": "2861b39707628a559f4c0a87d13f7212",
        "content": "        # 🎯 订单编号（新增，黑色，统一字体）\n        if order_no:\n            order_text = f\"订单: {order_no}\"\n       ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "392-396",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "393-397",
        "block_hash": "b4d694f93fa165877b5a883351db5aea",
        "content": "        cinema_name = get_cinema_name_by_id(cinema_id)\n        \n        # 🎯 生成日期字符串 (MMDD格式)\n       ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "395-399",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "396-400",
        "block_hash": "7d98660243d96d5eb170637f37e466a0",
        "content": "        current_date = datetime.now().strftime(\"%m%d\")\n        \n        # 🎯 构建文件名：影院+日期+订单号.png\n    ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "32-36",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "400-404",
        "block_hash": "188ee73cd0ebcb3369c210a5a244353d",
        "content": "        \n        # 🎯 确保data/img目录存在\n        img_dir = os.path.join(\"data\", \"img\")\n        os.makedir..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "32-36",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "401-405",
        "block_hash": "188ee73cd0ebcb3369c210a5a244353d",
        "content": "        # 🎯 确保data/img目录存在\n        img_dir = os.path.join(\"data\", \"img\")\n        os.makedirs(img_dir..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "34-38",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "402-406",
        "block_hash": "b8f6ea3b1e0d05bc9dab4fc459513149",
        "content": "        img_dir = os.path.join(\"data\", \"img\")\n        os.makedirs(img_dir, exist_ok=True)\n        \n ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "35-39",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "403-407",
        "block_hash": "225bec2abb0784e201a56a4665c8c100",
        "content": "        os.makedirs(img_dir, exist_ok=True)\n        \n        # 🎯 完整文件路径\n        file_path = os.path...."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "37-41",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "405-409",
        "block_hash": "679d107add64807a5d7c723110efd7bb",
        "content": "        # 🎯 完整文件路径\n        file_path = os.path.join(img_dir, filename)\n        \n        # 🎯 保存图片\n   ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "47-51",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "415-419",
        "block_hash": "831a5da0c448f6d7dfc9e28669c65f14",
        "content": "        \n        return file_path\n        \n    except Exception as e:\n        print(f\"[图片保存] ❌ 保存失败:..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "48-52",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "416-420",
        "block_hash": "d9e8472a24a192d807866b1c67dfd23f",
        "content": "        return file_path\n        \n    except Exception as e:\n        print(f\"[图片保存] ❌ 保存失败: {e}\")\n  ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "49-53",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "417-421",
        "block_hash": "0d2be07e1ed273b8857d2ace15db839d",
        "content": "        \n    except Exception as e:\n        print(f\"[图片保存] ❌ 保存失败: {e}\")\n        import traceback\n  ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "50-54",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "418-422",
        "block_hash": "bfc8757b9a2a1eaa1d82890a522e057d",
        "content": "    except Exception as e:\n        print(f\"[图片保存] ❌ 保存失败: {e}\")\n        import traceback\n        tra..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "51-55",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "419-423",
        "block_hash": "82552d2f953e280b8ae4db8459a16048",
        "content": "        print(f\"[图片保存] ❌ 保存失败: {e}\")\n        import traceback\n        traceback.print_exc()\n        ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "423-427",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "424-428",
        "block_hash": "a9dfa3809ea78933263466074e656adb",
        "content": "def test_qrcode_generation():\n    \"\"\"测试二维码生成功能\"\"\"\n    print(\"🧪 测试二维码生成功能\")\n    \n    # 测试数据"
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "436-440",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "437-441",
        "block_hash": "579479ad6eb6c7164ee628d0f8ef3ff9",
        "content": "    # 生成二维码\n    qr_bytes = generate_ticket_qrcode(test_ticket_code, test_order_info)\n    \n    if qr_..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "441-445",
        "file2": "utils\\qrcode_generator.py",
        "lines2": "442-446",
        "block_hash": "8c85454ccb339d02add7be6615173cd0",
        "content": "        save_path = save_qrcode_image(qr_bytes, \"TEST123\", \"35fec8259e74\")\n        print(f\"✅ 测试成功，图片..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "17-21",
        "file2": "utils\\signals.py",
        "lines2": "18-22",
        "block_hash": "81862df0eba61c63f28f6621536ea648",
        "content": "    # ===== 用户认证事件 =====\n    user_login_success = pyqtSignal(dict)  # 用户登录成功\n    user_logout = pyqtS..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "17-21",
        "file2": "utils\\signals.py",
        "lines2": "19-23",
        "block_hash": "81862df0eba61c63f28f6621536ea648",
        "content": "    user_login_success = pyqtSignal(dict)  # 用户登录成功\n    user_logout = pyqtSignal()  # 用户登出\n    user_..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "31-35",
        "file2": "utils\\signals.py",
        "lines2": "32-36",
        "block_hash": "f7a776b5e2a54a00f1316e3acad0f4da",
        "content": "    # ===== 影院管理事件 =====\n    cinema_selected = pyqtSignal(dict)  # 影院选择\n    cinema_changed = pyqtSig..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "31-35",
        "file2": "utils\\signals.py",
        "lines2": "33-37",
        "block_hash": "f7a776b5e2a54a00f1316e3acad0f4da",
        "content": "    cinema_selected = pyqtSignal(dict)  # 影院选择\n    cinema_changed = pyqtSignal(dict)  # 影院变更\n    cin..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "37-41",
        "file2": "utils\\signals.py",
        "lines2": "38-42",
        "block_hash": "52fe6f222d170e07dea33bc6044f3703",
        "content": "    movie_selected = pyqtSignal(dict)  # 电影选择\n    movie_list_updated = pyqtSignal(list)  # 电影列表更新\n  ..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "43-47",
        "file2": "utils\\signals.py",
        "lines2": "44-48",
        "block_hash": "692471587d20cec1d48c8a2d8fdd525e",
        "content": "    seat_selected = pyqtSignal(list)  # 座位选择\n    seat_map_loaded = pyqtSignal(dict)  # 座位图加载完成\n    s..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "58-62",
        "file2": "utils\\signals.py",
        "lines2": "59-63",
        "block_hash": "52b7ea0eee4a6a5da766c6637f10aad5",
        "content": "    coupon_bound = pyqtSignal(dict)  # 券绑定\n    coupon_selected = pyqtSignal(list)  # 券选择\n    coupon_..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "64-68",
        "file2": "utils\\signals.py",
        "lines2": "65-69",
        "block_hash": "e6156abac83a18feee93fab5d9224cab",
        "content": "    error_occurred = pyqtSignal(str, str)  # 错误发生 (title, message)\n    message_show = pyqtSignal(str..."
      },
      {
        "file1": "ui\\interfaces\\plugin_interface.py",
        "lines1": "105-109",
        "file2": "utils\\signals.py",
        "lines2": "113-117",
        "block_hash": "cfe27ef0b520b7cfb6c914a5433bdc1e",
        "content": "                        try:\n                            if data is not None:\n                      ..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "146-150",
        "file2": "utils\\signals.py",
        "lines2": "147-151",
        "block_hash": "b10084ee2a14c7bb668f86264d2bef14",
        "content": "    def clear_history(self):\n        \"\"\"清空事件历史\"\"\"\n        with self._lock:\n            self._event_h..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "151-155",
        "file2": "utils\\signals.py",
        "lines2": "152-156",
        "block_hash": "392f9c4d9781ba0d60a4becea9ee3f72",
        "content": "    def get_subscribers_count(self, event_name: str) -> int:\n        \"\"\"获取事件订阅者数量\"\"\"\n        with se..."
      },
      {
        "file1": "utils\\signals.py",
        "lines1": "156-160",
        "file2": "utils\\signals.py",
        "lines2": "157-161",
        "block_hash": "760e38601f268f330c3e1c511f89a032",
        "content": "                valid_refs = [ref for ref in self._subscribers[event_name] if ref() is not None]\n   ..."
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "6-10",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "6-10",
        "block_hash": "e1e8359e92cacbe94478565322cc5fec",
        "content": "\"\"\"\n\nimport os\nfrom datetime import datetime\nfrom PIL import Image, ImageDraw, ImageFont"
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "7-11",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "7-11",
        "block_hash": "42faddebcb8c440b5ba1df8a7ad43883",
        "content": "\nimport os\nfrom datetime import datetime\nfrom PIL import Image, ImageDraw, ImageFont\nimport io"
      },
      {
        "file1": "utils\\qrcode_generator.py",
        "lines1": "7-11",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "8-12",
        "block_hash": "42faddebcb8c440b5ba1df8a7ad43883",
        "content": "import os\nfrom datetime import datetime\nfrom PIL import Image, ImageDraw, ImageFont\nimport io\n"
      },
      {
        "file1": "utils\\simple_qrcode_generator.py",
        "lines1": "20-24",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "21-25",
        "block_hash": "9e6d839e179c3bbb67d5814c930270a7",
        "content": "        if not ticket_code:\n            print(f\"[简化二维码] ❌ 取票码为空\")\n            return None\n        \n ..."
      },
      {
        "file1": "utils\\simple_qrcode_generator.py",
        "lines1": "35-39",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "36-40",
        "block_hash": "6b85257490660096fe2a93e9b7118032",
        "content": "        # 🎯 创建画布\n        canvas_width = 350\n        canvas_height = 400\n        canvas = Image.new('..."
      },
      {
        "file1": "utils\\simple_qrcode_generator.py",
        "lines1": "35-39",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "37-41",
        "block_hash": "6b85257490660096fe2a93e9b7118032",
        "content": "        canvas_width = 350\n        canvas_height = 400\n        canvas = Image.new('RGB', (canvas_wid..."
      },
      {
        "file1": "utils\\simple_qrcode_generator.py",
        "lines1": "62-66",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "63-67",
        "block_hash": "d59bc44cdf1780bd5ea9f6889e043c62",
        "content": "        box_margin = 20\n        box_height = 80\n        draw.rectangle([box_margin, y_offset, canvas..."
      },
      {
        "file1": "utils\\simple_qrcode_generator.py",
        "lines1": "98-102",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "99-103",
        "block_hash": "3fbeaf621a5bd6e3f930df5102b11268",
        "content": "        for item in info_items:\n            if item:  # 只显示非空项目\n                draw.text((left_marg..."
      },
      {
        "file1": "utils\\simple_qrcode_generator.py",
        "lines1": "105-109",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "106-110",
        "block_hash": "4ff4d7991b75cd396239f47bffb45ccf",
        "content": "        # 转换为bytes\n        img_buffer = io.BytesIO()\n        canvas.save(img_buffer, format='PNG')\n ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "32-36",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "126-130",
        "block_hash": "188ee73cd0ebcb3369c210a5a244353d",
        "content": "        \n        # 确保目录存在\n        img_dir = os.path.join(\"data\", \"img\")\n        os.makedirs(img_dir,..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "32-36",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "127-131",
        "block_hash": "188ee73cd0ebcb3369c210a5a244353d",
        "content": "        # 确保目录存在\n        img_dir = os.path.join(\"data\", \"img\")\n        os.makedirs(img_dir, exist_ok..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "34-38",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "128-132",
        "block_hash": "b8f6ea3b1e0d05bc9dab4fc459513149",
        "content": "        img_dir = os.path.join(\"data\", \"img\")\n        os.makedirs(img_dir, exist_ok=True)\n        \n ..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "35-39",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "129-133",
        "block_hash": "225bec2abb0784e201a56a4665c8c100",
        "content": "        os.makedirs(img_dir, exist_ok=True)\n        \n        # 完整文件路径\n        file_path = os.path.jo..."
      },
      {
        "file1": "services\\order_api.py",
        "lines1": "37-41",
        "file2": "utils\\simple_qrcode_generator.py",
        "lines2": "131-135",
        "block_hash": "679d107add64807a5d7c723110efd7bb",
        "content": "        # 完整文件路径\n        file_path = os.path.join(img_dir, filename)\n        \n        # 保存图片\n       ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "2-6",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "3-7",
        "block_hash": "aacbd4592b9e72ad6af49ff54514df51",
        "content": "\"\"\"\n订单详情显示管理器 - 统一所有订单详情显示逻辑\n解决 _show_order_detail 和 _update_order_details 方法重复问题\n\"\"\"\n"
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "10-14",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "11-15",
        "block_hash": "ffc27b9041647cb1178c4a9191a52583",
        "content": "\nclass FieldNameMapper:\n    \"\"\"字段名映射器 - 处理不同来源的字段名差异\"\"\"\n    \n    # 标准字段映射表"
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "29-33",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "30-34",
        "block_hash": "2c3e7d5412f6bc9deb5640068135506e",
        "content": "    @classmethod\n    def normalize_data(cls, data: Dict[str, Any]) -> Dict[str, Any]:\n        \"\"\"标准化..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "40-44",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "41-45",
        "block_hash": "9efafad74de101dd74f92231bb40ce53",
        "content": "        # 保留原始数据\n        for key, value in data.items():\n            if key not in normalized:\n     ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "73-77",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "74-78",
        "block_hash": "996d46b1ab0a6c4e8204da9df25c8bd1",
        "content": "            enhanced_data = self._enhance_and_normalize_order_data(order_data)\n            \n        ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "76-80",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "77-81",
        "block_hash": "10eddbf49d7a0738708eedb31eb40638",
        "content": "            display_content = self._build_display_content(enhanced_data, display_context)\n          ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "78-82",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "79-83",
        "block_hash": "8c1aa898d803a6069943593b8e0a3d4c",
        "content": "            # 3. 更新UI显示\n            self._update_ui_display(display_content, enhanced_data)\n        ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "83-87",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "84-88",
        "block_hash": "9252d7dc8ca8738be7ac9f8e47804a87",
        "content": "        except Exception as e:\n            print(f\"[订单详情管理器] 显示错误: {e}\")\n            import tracebac..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "92-96",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "93-97",
        "block_hash": "2a944f76df13d7810ea0fd9c530eecbe",
        "content": "            enhanced_data = FieldNameMapper.normalize_data(order_data)\n            \n            # 数据..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "94-98",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "95-99",
        "block_hash": "3ac38b658cfc24239fcb937509965c92",
        "content": "            # 数据增强 - 从主窗口上下文获取更多信息\n            enhanced_data = self._enhance_with_context_data(enhan..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "105-109",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "106-110",
        "block_hash": "5e1b376d70343800d88a9d2a4c551636",
        "content": "    def _enhance_with_context_data(self, order_data: Dict[str, Any]) -> Dict[str, Any]:\n        \"\"\"从..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "111-115",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "112-116",
        "block_hash": "02d55244f59dcbce3037e53cb800678f",
        "content": "            if hasattr(self.main_window, 'current_account') and self.main_window.current_account:\n  ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "116-120",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "117-121",
        "block_hash": "50d6bb77fa30540b128b9c20b56a72b2",
        "content": "            # 从Tab管理器获取当前选择的信息\n            if hasattr(self.main_window, 'tab_manager_widget'):\n     ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "156-160",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "157-161",
        "block_hash": "530014e3a553c49be9de2410cbb9563d",
        "content": "            if hasattr(self.main_window, 'current_coupon_info') and self.main_window.current_coupon_..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "167-171",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "168-172",
        "block_hash": "4bcecc83bf27e4e014cfad94b9ce3024",
        "content": "    def _build_display_content(self, order_data: Dict[str, Any], context: str) -> List[str]:\n       ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "175-179",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "176-180",
        "block_hash": "5cf19820891b99d6872f7aa45d19e0c6",
        "content": "            # 密码策略信息\n            password_info = self._build_password_policy_info(order_data)\n      ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "175-179",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "177-181",
        "block_hash": "5cf19820891b99d6872f7aa45d19e0c6",
        "content": "            password_info = self._build_password_policy_info(order_data)\n            if password_inf..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "180-184",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "181-185",
        "block_hash": "e4b497b456d8e64a4da0cff86f06d8ad",
        "content": "            # 价格信息\n            info_lines.extend(self._build_price_info(order_data))\n            \n  ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "189-193",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "190-194",
        "block_hash": "9e3797cf4523776f78f99aa2636c9c44",
        "content": "    def _build_basic_info(self, order_data: Dict[str, Any]) -> List[str]:\n        \"\"\"构建基础信息\"\"\"\n     ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "193-197",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "194-198",
        "block_hash": "32c5adc82ad3d3dcf2568edf10a5d725",
        "content": "        # 订单号\n        order_id = order_data.get('order_id', order_data.get('orderno', 'N/A'))\n      ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "197-201",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "198-202",
        "block_hash": "3b29978754eb80799f56a6326d1327ec",
        "content": "        # 影片信息\n        movie = order_data.get('movie_name', order_data.get('movie', 'N/A'))\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4070-4074",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "214-218",
        "block_hash": "67a41c5f0092d15af5212ae9dcedc9c9",
        "content": "        if hall:\n            info_lines.append(f\"影厅: {hall}\")\n        else:\n            info_lines.a..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4071-4075",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "215-219",
        "block_hash": "25e3c16189841a9126a30d70ed035e42",
        "content": "            info_lines.append(f\"影厅: {hall}\")\n        else:\n            info_lines.append(f\"影院: {cine..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4082-4086",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "226-230",
        "block_hash": "83ec4db5c429040667a0c77368a947fd",
        "content": "                info_lines.append(f\"座位: {seat_str}\")\n        else:\n            info_lines.append(f\"座..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "230-234",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "231-235",
        "block_hash": "a4f4b5538d55afaf796c634ba99e9c7b",
        "content": "        status = order_data.get('status', '待支付')\n        info_lines.append(f\"状态: {status}\")\n        ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "235-239",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "236-240",
        "block_hash": "8e7ac018e3fb21f74c50e38615dcb66c",
        "content": "    def _build_password_policy_info(self, order_data: Dict[str, Any]) -> Optional[str]:\n        \"\"\"构..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "240-244",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "241-245",
        "block_hash": "2b67d48e0606ca45ad55261ba34034fa",
        "content": "            # 从api_data获取\n            api_data = order_data.get('api_data', {})\n            if api_d..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "240-244",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "242-246",
        "block_hash": "2b67d48e0606ca45ad55261ba34034fa",
        "content": "            api_data = order_data.get('api_data', {})\n            if api_data and isinstance(api_dat..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "4153-4157",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "243-247",
        "block_hash": "3b6aede93429b9416764fbe93a1db59b",
        "content": "            if api_data and isinstance(api_data, dict):\n                enable_mempassword = api_dat..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "245-249",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "246-250",
        "block_hash": "34e861084eaa0ef701fc63b5a5d41345",
        "content": "            # 直接从order_data获取\n            if enable_mempassword is None:\n                enable_memp..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "249-253",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "250-254",
        "block_hash": "ab01d23c0e13f000eb6a5f3d2c8032e7",
        "content": "            # 使用主窗口的增强密码显示方法\n            if hasattr(self.main_window, '_get_enhanced_password_displa..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3436-3440",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "273-277",
        "block_hash": "cee6f204d210dadaa223e1e609437f91",
        "content": "                try:\n                    if isinstance(value, str):\n                        return i..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3437-3441",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "274-278",
        "block_hash": "7acd258523c21c11b8a9ba88b5d06838",
        "content": "                    if isinstance(value, str):\n                        return int(value) if value.st..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3438-3442",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "275-279",
        "block_hash": "7d8774e5d701f5801924504b5a27f582",
        "content": "                        return int(value) if value.strip() else default\n                    elif isi..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3439-3443",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "276-280",
        "block_hash": "0105b60e2fb79c1b9d841cbc961d6c87",
        "content": "                    elif isinstance(value, (int, float)):\n                        return int(value)\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3440-3444",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "277-281",
        "block_hash": "3d864628786a75a18827ef84d860caa4",
        "content": "                        return int(value)\n                    else:\n                        return d..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "3441-3445",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "278-282",
        "block_hash": "77f19ef8a154d1f0ab1d93850e122f70",
        "content": "                    else:\n                        return default\n                except (ValueError,..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "282-286",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "283-287",
        "block_hash": "bb782fb47a07a4de54a459783a0dac3f",
        "content": "            # 从api_data中获取价格信息\n            api_data = order_data.get('api_data', {})\n            api..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "287-291",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "288-292",
        "block_hash": "bb87e1438d8b06c16e3aa49bf434fd9b",
        "content": "            if api_data and isinstance(api_data, dict):\n                api_mem_price = safe_int_con..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "300-304",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "301-305",
        "block_hash": "13c37c6e5de158f9306b4a0f4d471bea",
        "content": "            if api_total_price > 0:\n                original_price_yuan = api_total_price / 100.0\n  ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "314-318",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "315-319",
        "block_hash": "b75de656e86c06f298cddac693db3d45",
        "content": "            # 券信息\n            coupon_count = len(order_data.get('selected_coupons', []))\n           ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "314-318",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "316-320",
        "block_hash": "b75de656e86c06f298cddac693db3d45",
        "content": "            coupon_count = len(order_data.get('selected_coupons', []))\n            if coupon_count >..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "319-323",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "320-324",
        "block_hash": "a4ad677386dcb5d2beda93a1f8de8d90",
        "content": "                # 券抵扣金额\n                discount = order_data.get('discount_amount', 0)\n            ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "319-323",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "321-325",
        "block_hash": "a4ad677386dcb5d2beda93a1f8de8d90",
        "content": "                discount = order_data.get('discount_amount', 0)\n                if discount > 0:\n   ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "340-344",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "341-345",
        "block_hash": "f7af346af72bb8fc14a4f91187a2ff8b",
        "content": "                    if api_total_price > 0:\n                        total_amount = api_total_price /..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "307-311",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "347-351",
        "block_hash": "790581a28031eb1e587cf387b5d3c3c7",
        "content": "                        if isinstance(amount, str):\n                            try:\n               ..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "363-367",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "364-368",
        "block_hash": "fe610d29592a1f51bd62957fabc5f7b0",
        "content": "            phone = order_data.get('phone_number', '')\n            if phone and hasattr(self.main_wi..."
      },
      {
        "file1": "modules\\order_display\\order_detail_manager.py",
        "lines1": "367-371",
        "file2": "modules\\order_display\\order_detail_manager.py",
        "lines2": "368-372",
        "block_hash": "c0d1606fc29d7ad723b708ef9e78c280",
        "content": "            # 更新订单详情文本\n            details = \"\\n\".join(display_content)\n            if hasattr(self...."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "controllers\\account_controller.py",
        "lines2": "24-28",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 服务实例"
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "27-31",
        "file2": "controllers\\account_controller.py",
        "lines2": "28-32",
        "block_hash": "413f83298ea1d48a78f611dd9d022f11",
        "content": "        # 服务实例\n        self.auth_service = AuthService()\n        self.member_service = MemberService..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "31-35",
        "file2": "controllers\\account_controller.py",
        "lines2": "32-36",
        "block_hash": "23b30dd8350feb7ce4d618185173a0c5",
        "content": "        # 当前状态\n        self.current_account = None\n        self.current_cinema = None\n        self.a..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "31-35",
        "file2": "controllers\\account_controller.py",
        "lines2": "33-37",
        "block_hash": "23b30dd8350feb7ce4d618185173a0c5",
        "content": "        self.current_account = None\n        self.current_cinema = None\n        self.account_list = [..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "41-45",
        "file2": "controllers\\account_controller.py",
        "lines2": "42-46",
        "block_hash": "29bfd5c1586b1590bdc8c697abd2dc1a",
        "content": "    def _connect_events(self):\n        \"\"\"连接事件总线\"\"\"\n        event_bus.cinema_selected.connect(self._..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "55-59",
        "file2": "controllers\\account_controller.py",
        "lines2": "56-60",
        "block_hash": "7703fd78501fa6b9ccbbd07a5c9bc41f",
        "content": "    @event_handler(\"user_login_success\")\n    def _on_user_login_success(self, user_data: dict):\n    ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "63-67",
        "file2": "controllers\\account_controller.py",
        "lines2": "64-68",
        "block_hash": "9d8a6658ffe75106cb7fe1d5c8f3ab54",
        "content": "    def load_account_list(self) -> List[dict]:\n        \"\"\"加载账号列表\"\"\"\n        try:\n            print(\"..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "77-81",
        "file2": "controllers\\account_controller.py",
        "lines2": "78-82",
        "block_hash": "348c06eac95c29a82ffc203007e831df",
        "content": "            # 如果有选择的影院，按影院过滤账号\n            if self.current_cinema:\n                cinema_id = self...."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "94-98",
        "file2": "controllers\\account_controller.py",
        "lines2": "95-99",
        "block_hash": "ba6dd5b2c8056e8bb92f86ec85e9ab97",
        "content": "            # 发布账号列表更新事件\n            self.account_list_updated.emit(self.account_list)\n            \n..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "99-103",
        "file2": "controllers\\account_controller.py",
        "lines2": "100-104",
        "block_hash": "ef86e25a9f6d6f0fa26be1c46a8068a8",
        "content": "        except Exception as e:\n            print(f\"[账号控制器] 加载账号列表错误: {e}\")\n            self.account_..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "110-114",
        "file2": "controllers\\account_controller.py",
        "lines2": "111-115",
        "block_hash": "598534a6e0f6ea00fa5465552d5f79fc",
        "content": "            self.current_account = account_data\n            phone = account_data.get('phone', 'N/A')..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "115-119",
        "file2": "controllers\\account_controller.py",
        "lines2": "116-120",
        "block_hash": "5402ef8e2ae73805ed8a51692c35c86b",
        "content": "            # 发布账号选择事件\n            self.account_selected.emit(account_data)\n            event_bus.ac..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "156-160",
        "file2": "controllers\\account_controller.py",
        "lines2": "157-161",
        "block_hash": "177a1d6aa356b0fda7996f3044e5fba1",
        "content": "            phone = account_data.get('phone', '')\n            openid = account_data.get('openid', ''..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "161-165",
        "file2": "controllers\\account_controller.py",
        "lines2": "162-166",
        "block_hash": "33c6774727653ef9ae515be3214d44bc",
        "content": "            if not all([phone, openid, token, cinema_id]):\n                self.account_login_failed..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "166-170",
        "file2": "controllers\\account_controller.py",
        "lines2": "167-171",
        "block_hash": "3e709e037dd34d3b33d484cd9fd58fc1",
        "content": "            login_result = self.auth_service.cinema_login(phone, openid, token, cinema_id)\n         ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "171-175",
        "file2": "controllers\\account_controller.py",
        "lines2": "172-176",
        "block_hash": "d54a486d99b568969783266c9b949729",
        "content": "                # 更新账号信息\n                updated_account = account_data.copy()\n                updat..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "175-179",
        "file2": "controllers\\account_controller.py",
        "lines2": "176-180",
        "block_hash": "bc87d47f8cc3dbaf2b72a55e0a403c11",
        "content": "                # 发布登录成功事件\n                self.account_login_success.emit(updated_account)\n        ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "189-193",
        "file2": "controllers\\account_controller.py",
        "lines2": "190-194",
        "block_hash": "3d5b8c911bb535e5ac61bdd3e90682c5",
        "content": "        except Exception as e:\n            print(f\"[账号控制器] 登录账号错误: {e}\")\n            self.account_lo..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "controllers\\account_controller.py",
        "lines2": "205-209",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            # 如果有当前影院，添加影院信息\n            if self.current_cinema:\n                account_data['cinem..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "controllers\\account_controller.py",
        "lines2": "206-210",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            if self.current_cinema:\n                account_data['cinemaid'] = self.current_cinema.g..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "210-214",
        "file2": "controllers\\account_controller.py",
        "lines2": "211-215",
        "block_hash": "ed7639ec9a372fc1021ea4766370c82d",
        "content": "            result = save_account(account_data)\n            \n            if result:\n                ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "216-220",
        "file2": "controllers\\account_controller.py",
        "lines2": "217-221",
        "block_hash": "2857ccb36562e84e2ce4bb6c1c6e19eb",
        "content": "                self.load_account_list()\n                \n                # 发布账号添加事件\n               ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "221-225",
        "file2": "controllers\\account_controller.py",
        "lines2": "222-226",
        "block_hash": "ea8c742cd6d9e34cd6b8a60a5bcefca9",
        "content": "                return True\n            else:\n                self.account_error.emit(\"添加失败\", \"保存账号失..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "226-230",
        "file2": "controllers\\account_controller.py",
        "lines2": "227-231",
        "block_hash": "9bf08880bdc78b545f7900cb0a8bc057",
        "content": "        except Exception as e:\n            print(f\"[账号控制器] 添加账号错误: {e}\")\n            self.account_er..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "239-243",
        "file2": "controllers\\account_controller.py",
        "lines2": "240-244",
        "block_hash": "d5a07a3a5c6713f6b3bdd3fb79f0cc62",
        "content": "            result = delete_account(phone)\n            \n            if result:\n                print..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "244-248",
        "file2": "controllers\\account_controller.py",
        "lines2": "245-249",
        "block_hash": "8e0293fd2b6fcdb98e9b297e0beca4a6",
        "content": "                # 如果删除的是当前账号，清空当前账号\n                if self.current_account and self.current_account..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "249-253",
        "file2": "controllers\\account_controller.py",
        "lines2": "250-254",
        "block_hash": "686acdf4e7f21b61d063a942c0f2ef31",
        "content": "                self.load_account_list()\n                \n                # 发布账号删除事件\n               ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "254-258",
        "file2": "controllers\\account_controller.py",
        "lines2": "255-259",
        "block_hash": "6dcc406847dcda045b9fe3cb291bcef5",
        "content": "                return True\n            else:\n                self.account_error.emit(\"删除失败\", \"删除账号失..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "259-263",
        "file2": "controllers\\account_controller.py",
        "lines2": "260-264",
        "block_hash": "15e1e4c1e0481b8adba6f1471b0f9635",
        "content": "        except Exception as e:\n            print(f\"[账号控制器] 删除账号错误: {e}\")\n            self.account_er..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "5-9",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "5-9",
        "block_hash": "083a4f08769fa3e8cefa8b5e4ac20604",
        "content": "\"\"\"\n\nfrom typing import Dict, List, Optional, Any\nfrom PyQt5.QtCore import QObject, pyqtSignal\nfrom ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "24-28",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 服务实例"
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "42-46",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "43-47",
        "block_hash": "f9de8afafec4aa69b516f7b91ac863ed",
        "content": "    def _connect_events(self):\n        \"\"\"连接事件总线\"\"\"\n        event_bus.account_selected.connect(self...."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "57-61",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "58-62",
        "block_hash": "c98bbcf960d166f9d4a58da564d98414",
        "content": "    @event_handler(\"user_login_success\")\n    def _on_user_login_success(self, user_data: dict):\n    ..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "65-69",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "66-70",
        "block_hash": "db6ae6ec10a48ce0b31f28a22c6c407b",
        "content": "    def load_cinema_list(self) -> List[dict]:\n        \"\"\"加载影院列表\"\"\"\n        try:\n            print(\"[..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "73-77",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "74-78",
        "block_hash": "919de017220b33d9d4f900b98b633fc0",
        "content": "            if cinemas:\n                self.cinema_list = cinemas\n                print(f\"[影院控制器] 影..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "88-92",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "89-93",
        "block_hash": "9da2364800069e28cb25e2ecc017c96b",
        "content": "        except Exception as e:\n            print(f\"[影院控制器] 加载影院列表错误: {e}\")\n            self.cinema_e..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "99-103",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "100-104",
        "block_hash": "4b1d0e76cda9806a4a20ab84c9a58309",
        "content": "            self.current_cinema = cinema_data\n            cinema_name = cinema_data.get('cinemaShort..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "104-108",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "105-109",
        "block_hash": "f7d2282fe144ab44dae59333b1c06e15",
        "content": "            # 发布影院选择事件\n            self.cinema_selected.emit(cinema_data)\n            event_bus.cine..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "124-128",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "125-129",
        "block_hash": "0c9feb2077cf071f957e51c3a5c06196",
        "content": "            # 获取必要参数\n            base_url = self.current_cinema.get('base_url', '') or self.current_..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "129-133",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "130-134",
        "block_hash": "e972074abcb91a9bf4fbc494b24df715",
        "content": "            cinema_id = self.current_cinema.get('cinemaid', '')\n            user_id = self.current_a..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "134-138",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "135-139",
        "block_hash": "3c0ebc7cd8b9ec8ea442e26f57b0749f",
        "content": "            if not all([base_url, cinema_id, user_id]):\n                print(\"[影院控制器] 参数不完整，无法加载电影\"..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "139-143",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "140-144",
        "block_hash": "0cfeed450a5d7f41cb57072b45a073db",
        "content": "            raw_data = get_films(base_url, cinema_id, openid, user_id, token)\n            normalized..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "144-148",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "145-149",
        "block_hash": "f5b88747f46975b63cb8b4b1b4e69574",
        "content": "            if movies:\n                self.movie_list = movies\n                print(f\"[影院控制器] 电影列表..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "159-163",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "160-164",
        "block_hash": "09da058f8781570a3738f679f9267908",
        "content": "        except Exception as e:\n            print(f\"[影院控制器] 加载电影列表错误: {e}\")\n            self.cinema_e..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "183-187",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "184-188",
        "block_hash": "7da7e100bbaee50f7c02a90fd22bbf57",
        "content": "            event_bus.movie_selected.emit(movie_data)\n            \n            # 加载该电影的场次列表\n        ..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "192-196",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "193-197",
        "block_hash": "0e5c06ccd531349060e744e351b11900",
        "content": "    def load_session_list(self, movie_data: dict) -> List[dict]:\n        \"\"\"加载场次列表\"\"\"\n        try:\n ..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "223-227",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "224-228",
        "block_hash": "c41662cdcc7bf27d632d7552bad00f22",
        "content": "            self.session_list_updated.emit(sessions)\n            event_bus.session_list_updated.emit..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "228-232",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "229-233",
        "block_hash": "97daef90507f9ae802b4ff78b4b93781",
        "content": "        except Exception as e:\n            print(f\"[影院控制器] 加载场次列表错误: {e}\")\n            self.cinema_e..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "243-247",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "244-248",
        "block_hash": "2a8aed6635ebc8564b0d349f1592ef5b",
        "content": "            event_bus.session_selected.emit(session_data)\n            \n            # 加载座位图\n         ..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "259-263",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "260-264",
        "block_hash": "3988e71b39668d481b618fdb728229ad",
        "content": "            print(\"[影院控制器] 开始加载座位图\")\n            \n            # 发布座位图加载中事件\n            event_bus.sea..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "124-128",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "264-268",
        "block_hash": "0c9feb2077cf071f957e51c3a5c06196",
        "content": "            \n            # 获取必要参数\n            base_url = self.current_cinema.get('base_url', '') or ..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "124-128",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "265-269",
        "block_hash": "0c9feb2077cf071f957e51c3a5c06196",
        "content": "            # 获取必要参数\n            base_url = self.current_cinema.get('base_url', '') or self.current_..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "124-128",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "266-270",
        "block_hash": "0c9feb2077cf071f957e51c3a5c06196",
        "content": "            base_url = self.current_cinema.get('base_url', '') or self.current_cinema.get('domain', ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1455-1459",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "269-273",
        "block_hash": "dc8685583a087385662e97c0709452b8",
        "content": "            \n            # 构建API参数\n            params = {\n                'base_url': base_url,\n    ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1456-1460",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "270-274",
        "block_hash": "2f9b73cc9f646b5d4e99fc8658f26257",
        "content": "            # 构建API参数\n            params = {\n                'base_url': base_url,\n                '..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1457-1461",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "271-275",
        "block_hash": "ca6515353ed46162f25a54bb8b256af8",
        "content": "            params = {\n                'base_url': base_url,\n                'showCode': session_dat..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1458-1462",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "272-276",
        "block_hash": "218c09f866b60c03bc8446d5ed344db6",
        "content": "                'base_url': base_url,\n                'showCode': session_data.get('g', ''),\n       ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1459-1463",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "273-277",
        "block_hash": "991223d0c1dcfba5013ad2410104574c",
        "content": "                'showCode': session_data.get('g', ''),\n                'hallCode': session_data.get(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1460-1464",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "274-278",
        "block_hash": "9cec1ca4b9ff216ec99faeaea1d73832",
        "content": "                'hallCode': session_data.get('j', ''),\n                'filmCode': session_data.get(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1472-1476",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "285-289",
        "block_hash": "b508802cb9f6d1a9ee64e278308afb95",
        "content": "            \n            # 验证参数完整性\n            required_params = ['base_url', 'showCode', 'hallCode'..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1473-1477",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "286-290",
        "block_hash": "ed7bd1e867c11a7b68aded7bdd5e3244",
        "content": "            # 验证参数完整性\n            required_params = ['base_url', 'showCode', 'hallCode', 'filmCode',..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "295-299",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "296-300",
        "block_hash": "dddaa6beed07393b560685654fb2e5c5",
        "content": "            seat_result = get_plan_seat_info(**params)\n            \n            if seat_result and i..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1485-1489",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "297-301",
        "block_hash": "efc51ef34b2ea49e6f9ee0f574d9db54",
        "content": "            \n            if seat_result and isinstance(seat_result, dict):\n                if seat_r..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1485-1489",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "298-302",
        "block_hash": "efc51ef34b2ea49e6f9ee0f574d9db54",
        "content": "            if seat_result and isinstance(seat_result, dict):\n                if seat_result.get('re..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "300-304",
        "file2": "controllers\\cinema_controller.py",
        "lines2": "301-305",
        "block_hash": "16a6012a0dbc528216adb5fda60e7d39",
        "content": "                    seat_data = seat_result.get('resultData', {})\n                    \n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "37-41",
        "file2": "controllers\\order_controller.py",
        "lines2": "10-14",
        "block_hash": "0edc9cac96e26daae9d64789af0d9dc4",
        "content": "from services.order_api import (\n    create_order, get_unpaid_order_detail, get_coupons_by_order,\n  ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "controllers\\order_controller.py",
        "lines2": "27-31",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 当前状态"
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "31-35",
        "file2": "controllers\\order_controller.py",
        "lines2": "32-36",
        "block_hash": "252437ce90457526dab637316066133a",
        "content": "        self.current_order = None\n        self.current_account = None\n        self.selected_coupons ..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "47-51",
        "file2": "controllers\\order_controller.py",
        "lines2": "47-51",
        "block_hash": "34e7dfc119cf7e7fc0e38b8091ac94c7",
        "content": "    \n    @event_handler(\"account_selected\")\n    def _on_account_selected(self, account_data: dict):\n..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "59-63",
        "file2": "controllers\\order_controller.py",
        "lines2": "60-64",
        "block_hash": "73570f773a47585264c593af420614f3",
        "content": "    @event_handler(\"order_submitted\")\n    def _handle_order_submission(self, order_data: dict):\n    ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "68-72",
        "file2": "controllers\\order_controller.py",
        "lines2": "69-73",
        "block_hash": "4591896c84a8188ad0d8c2d3011aff03",
        "content": "            seats = order_data.get('seats', [])\n            if not seats:\n                self.order..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "73-77",
        "file2": "controllers\\order_controller.py",
        "lines2": "74-78",
        "block_hash": "b71e156150ae0595e43ee488ca8982f0",
        "content": "            session_info = order_data.get('session_info', {})\n            if not session_info:\n     ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "106-110",
        "file2": "controllers\\order_controller.py",
        "lines2": "107-111",
        "block_hash": "da243d9b232b79b80dacd9834ed54305",
        "content": "            # 调用API创建订单\n            result = create_order(order_params)\n            \n            if ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "109-113",
        "file2": "controllers\\order_controller.py",
        "lines2": "110-114",
        "block_hash": "808a1088eab63194c192340095cf3046",
        "content": "            if result and result.get('resultCode') == '0':\n                # 订单创建成功\n                ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "111-115",
        "file2": "controllers\\order_controller.py",
        "lines2": "112-116",
        "block_hash": "bcaaad93172223a66cdf79ce3e05fb8d",
        "content": "                order_data = result.get('resultData', {})\n                self.current_order = order..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "114-118",
        "file2": "controllers\\order_controller.py",
        "lines2": "115-119",
        "block_hash": "cf0b9ed7965a2f94033238c3ee93143a",
        "content": "                print(f\"[订单控制器] 订单创建成功: {order_data.get('order_id', 'N/A')}\")\n                \n     ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "138-142",
        "file2": "controllers\\order_controller.py",
        "lines2": "139-143",
        "block_hash": "f30c1cd1b9280b2875d1fe93af23b11f",
        "content": "            detail_result = get_order_detail({'order_id': order_id})\n            \n            if det..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "144-148",
        "file2": "controllers\\order_controller.py",
        "lines2": "145-149",
        "block_hash": "4624259f87e3dabd75763f63cf6a7301",
        "content": "                event_bus.order_detail_updated.emit(order_detail)\n                \n                #..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "147-151",
        "file2": "controllers\\order_controller.py",
        "lines2": "148-152",
        "block_hash": "52a9998737442fd18d57ce5eddd548cf",
        "content": "                self._load_available_coupons(order_detail)\n                \n        except Exception..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "159-163",
        "file2": "controllers\\order_controller.py",
        "lines2": "160-164",
        "block_hash": "0afe657a47a7d7d15cfa5ef3beb0b091",
        "content": "            coupon_result = get_coupons_by_order({\n                'account': self.current_account,\n..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "168-172",
        "file2": "controllers\\order_controller.py",
        "lines2": "169-173",
        "block_hash": "b6e61c715153e1114ed55510cdbe0d1c",
        "content": "                event_bus.coupon_list_updated.emit(coupons)\n                \n        except Exceptio..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "186-190",
        "file2": "controllers\\order_controller.py",
        "lines2": "187-191",
        "block_hash": "25908cbc3617ee42f142d19b90bc7fb2",
        "content": "            # 调用支付API\n            result = pay_order(pay_params)\n            \n            if result ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "189-193",
        "file2": "controllers\\order_controller.py",
        "lines2": "190-194",
        "block_hash": "bb31eb9dde9a9aef812f54640d882551",
        "content": "            if result and result.get('resultCode') == '0':\n                # 支付成功\n                pr..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "191-195",
        "file2": "controllers\\order_controller.py",
        "lines2": "192-196",
        "block_hash": "4593ae592dce27cebfe34ed02a396795",
        "content": "                print(f\"[订单控制器] 订单支付成功: {order_id}\")\n                \n                # 获取取票码\n      ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "196-200",
        "file2": "controllers\\order_controller.py",
        "lines2": "197-201",
        "block_hash": "22fd18adb9ca8236d92ee0989b59aebc",
        "content": "                # 发布支付成功事件\n                self.order_paid.emit({'order_id': order_id})\n            ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1022-1026",
        "file2": "controllers\\order_controller.py",
        "lines2": "199-203",
        "block_hash": "3fd8e436704d6c30ae922a2216baf9b5",
        "content": "                event_bus.order_paid.emit(order_id)\n                \n                # 清空当前订单\n      ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "210-214",
        "file2": "controllers\\order_controller.py",
        "lines2": "211-215",
        "block_hash": "c8f02293713c5ccaeaad8c7aaf02d2b6",
        "content": "        except Exception as e:\n            print(f\"[订单控制器] 支付订单错误: {e}\")\n            self.order_erro..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "215-219",
        "file2": "controllers\\order_controller.py",
        "lines2": "216-220",
        "block_hash": "710174737486d2b561ede77a70379749",
        "content": "    def _get_order_qrcode(self, order_id: str):\n        \"\"\"获取订单取票码\"\"\"\n        try:\n            qr_re..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "226-230",
        "file2": "controllers\\order_controller.py",
        "lines2": "227-231",
        "block_hash": "4f60ee07a2ac713af654864c9c9af0bb",
        "content": "                    event_bus.emit_custom('qrcode_received', {\n                        'order_id': o..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "234-238",
        "file2": "controllers\\order_controller.py",
        "lines2": "235-239",
        "block_hash": "97ffa74969e2dfe219b7c49245ad88a9",
        "content": "    def cancel_order(self, order_id: str) -> bool:\n        \"\"\"取消订单\"\"\"\n        try:\n            # 这里可..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "250-254",
        "file2": "controllers\\order_controller.py",
        "lines2": "251-255",
        "block_hash": "1d2493e96169f46300ebf7e4d04d6a93",
        "content": "                # 发布取消事件\n                self.order_cancelled.emit(order_id)\n                event_b..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "254-258",
        "file2": "controllers\\order_controller.py",
        "lines2": "255-259",
        "block_hash": "d6354d9416ed5acf8239dd587a304fcc",
        "content": "                # 清空当前订单\n                if self.current_order and self.current_order.get('order_id'..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "202-206",
        "file2": "controllers\\order_controller.py",
        "lines2": "257-261",
        "block_hash": "784dda9ca93acbef40763aec31d5406a",
        "content": "                    self.current_order = None\n                    self.selected_coupons.clear()\n    ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "265-269",
        "file2": "controllers\\order_controller.py",
        "lines2": "266-270",
        "block_hash": "83b8cc290f8b9eeb250eaf09e193781e",
        "content": "        except Exception as e:\n            print(f\"[订单控制器] 取消订单错误: {e}\")\n            self.order_erro..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "276-280",
        "file2": "controllers\\order_controller.py",
        "lines2": "277-281",
        "block_hash": "4b4815827082203078ca338969b81e09",
        "content": "            result = get_order_list({'account': self.current_account})\n            \n            if r..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "284-288",
        "file2": "controllers\\order_controller.py",
        "lines2": "285-289",
        "block_hash": "4f76e65f052997a35157ea8dd50b87a5",
        "content": "                return orders\n            else:\n                print(f\"[订单控制器] 获取订单列表失败: {result.ge..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "812-816",
        "file2": "controllers\\order_controller.py",
        "lines2": "300-304",
        "block_hash": "ec6066144282e5b5fa2bec7515e5959f",
        "content": "            \n            result = bind_coupon({\n                'account': self.current_account,\n   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "812-816",
        "file2": "controllers\\order_controller.py",
        "lines2": "301-305",
        "block_hash": "ec6066144282e5b5fa2bec7515e5959f",
        "content": "            result = bind_coupon({\n                'account': self.current_account,\n                ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "814-818",
        "file2": "controllers\\order_controller.py",
        "lines2": "302-306",
        "block_hash": "4f304a8f37a81a3980e4e7996c35db87",
        "content": "                'account': self.current_account,\n                'coupon_code': coupon_code\n        ..."
      },
      {
        "file1": "controllers\\order_controller.py",
        "lines1": "309-313",
        "file2": "controllers\\order_controller.py",
        "lines2": "310-314",
        "block_hash": "17fcb60538b457b63412ec8d7a73ff4e",
        "content": "                event_bus.coupon_bound.emit({\n                    'coupon_code': coupon_code,\n      ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "17-21",
        "file2": "views\\main_window.py",
        "lines2": "18-22",
        "block_hash": "75cc104f629c357618409a00aada1812",
        "content": "# 导入控制器\nfrom controllers.order_controller import OrderController\nfrom controllers.account_controller..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "17-21",
        "file2": "views\\main_window.py",
        "lines2": "19-23",
        "block_hash": "75cc104f629c357618409a00aada1812",
        "content": "from controllers.order_controller import OrderController\nfrom controllers.account_controller import ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "22-26",
        "file2": "views\\main_window.py",
        "lines2": "23-27",
        "block_hash": "d602e80b87f86cf360b77dbd941d702e",
        "content": "# 导入UI组件\nfrom views.components.seat_map_panel import SeatMapPanel\nfrom views.components.account_pane..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "22-26",
        "file2": "views\\main_window.py",
        "lines2": "24-28",
        "block_hash": "d602e80b87f86cf360b77dbd941d702e",
        "content": "from views.components.seat_map_panel import SeatMapPanel\nfrom views.components.account_panel import ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "61-65",
        "file2": "views\\main_window.py",
        "lines2": "34-38",
        "block_hash": "887f91a5ba992c770bb7ba19b9af3b0f",
        "content": "    \n    # 信号定义\n    login_success = pyqtSignal(dict)  # 登录成功\n    \n    def __init__(self):"
      },
      {
        "file1": "main_modular.py",
        "lines1": "62-66",
        "file2": "views\\main_window.py",
        "lines2": "35-39",
        "block_hash": "f5a8f62bb05a49844e8424bfc9c2347b",
        "content": "    # 信号定义\n    login_success = pyqtSignal(dict)  # 登录成功\n    \n    def __init__(self):\n        super()..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "62-66",
        "file2": "views\\main_window.py",
        "lines2": "36-40",
        "block_hash": "f5a8f62bb05a49844e8424bfc9c2347b",
        "content": "    login_success = pyqtSignal(dict)  # 登录成功\n    \n    def __init__(self):\n        super().__init__()..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "41-45",
        "file2": "views\\main_window.py",
        "lines2": "42-46",
        "block_hash": "dc59a1c76a62a15300f9ffaa6183595b",
        "content": "        self._init_controllers()\n        \n        # 初始化UI组件\n        self._init_ui_components()\n     ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "56-60",
        "file2": "views\\main_window.py",
        "lines2": "57-61",
        "block_hash": "6454a76b1ea5cd486f6fec317c3ac32d",
        "content": "        self._connect_events()\n        \n        # 注册组件到事件管理器\n        self._register_components()\n   ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "59-63",
        "file2": "views\\main_window.py",
        "lines2": "60-64",
        "block_hash": "71bf4c0a2e1695145de9fbe0b5afd484",
        "content": "        self._register_components()\n        \n        # 启动认证流程 - 多重保障\n        print(\"[主窗口] 准备启动认证流程....."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "72-76",
        "file2": "views\\main_window.py",
        "lines2": "73-77",
        "block_hash": "c1c4b8b4568ec7e162c07db423f70b35",
        "content": "            print(\"[主窗口] 使用QTimer延迟启动...\")\n            QTimer.singleShot(100, self._start_auth_flow_..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "93-97",
        "file2": "views\\main_window.py",
        "lines2": "94-98",
        "block_hash": "31a2b634a93f45d549031ce511e76062",
        "content": "    def _setup_window(self):\n        \"\"\"设置窗口属性\"\"\"\n        self.setWindowTitle(\"柴犬影院下单系统 - 重构版本\")\n   ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "98-102",
        "file2": "views\\main_window.py",
        "lines2": "99-103",
        "block_hash": "5ab16264092514aed93168c06a4424a6",
        "content": "        # 设置应用程序字体\n        font = QFont(\"Microsoft YaHei\", 10)\n        self.setFont(font)\n        \n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "150-154",
        "file2": "views\\main_window.py",
        "lines2": "121-125",
        "block_hash": "286e373ade747b882d4e182c3b5c67da",
        "content": "    \n    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        # 创建中央部件\n        central_widget = QWidget..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "151-155",
        "file2": "views\\main_window.py",
        "lines2": "122-126",
        "block_hash": "8490f0ab18bed59cd0614d1d7af85566",
        "content": "    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        # 创建中央部件\n        central_widget = QWidget()\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "152-156",
        "file2": "views\\main_window.py",
        "lines2": "123-127",
        "block_hash": "5c1f15a2c4bfb3c172285e777b4a6dfe",
        "content": "        \"\"\"初始化用户界面\"\"\"\n        # 创建中央部件\n        central_widget = QWidget()\n        self.setCentralWid..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "153-157",
        "file2": "views\\main_window.py",
        "lines2": "124-128",
        "block_hash": "547a5cc6b18982c68274296abf5b592d",
        "content": "        # 创建中央部件\n        central_widget = QWidget()\n        self.setCentralWidget(central_widget)\n  ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "154-158",
        "file2": "views\\main_window.py",
        "lines2": "125-129",
        "block_hash": "e84b0581c6677a1d078cc193ce028b15",
        "content": "        central_widget = QWidget()\n        self.setCentralWidget(central_widget)\n        \n        # ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "155-159",
        "file2": "views\\main_window.py",
        "lines2": "126-130",
        "block_hash": "51dcf764356828e866908275e1651493",
        "content": "        self.setCentralWidget(central_widget)\n        \n        # 创建主布局\n        main_layout = QHBoxLa..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "156-160",
        "file2": "views\\main_window.py",
        "lines2": "127-131",
        "block_hash": "c03be6133cb2e2f065f37142a2a11856",
        "content": "        \n        # 创建主布局\n        main_layout = QHBoxLayout(central_widget)\n        main_layout.setCo..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "156-160",
        "file2": "views\\main_window.py",
        "lines2": "128-132",
        "block_hash": "c03be6133cb2e2f065f37142a2a11856",
        "content": "        # 创建主布局\n        main_layout = QHBoxLayout(central_widget)\n        main_layout.setContentsMar..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "156-160",
        "file2": "views\\main_window.py",
        "lines2": "129-133",
        "block_hash": "c03be6133cb2e2f065f37142a2a11856",
        "content": "        main_layout = QHBoxLayout(central_widget)\n        main_layout.setContentsMargins(5, 5, 5, 5)..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "132-136",
        "file2": "views\\main_window.py",
        "lines2": "133-137",
        "block_hash": "4542200b92a039019c68db991cee153c",
        "content": "        # 创建三栏布局\n        self._create_left_panel(main_layout)\n        self._create_center_panel(main..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "145-149",
        "file2": "views\\main_window.py",
        "lines2": "163-167",
        "block_hash": "6ff34b3c7a9f20f2cf82eadcced81e88",
        "content": "            QWidget {\n                background-color: white;\n                border: 1px solid #dd..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "146-150",
        "file2": "views\\main_window.py",
        "lines2": "164-168",
        "block_hash": "33038630901b98d7ba33aed4b3f84a3a",
        "content": "                background-color: white;\n                border: 1px solid #ddd;\n                bor..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "169-173",
        "file2": "views\\main_window.py",
        "lines2": "170-174",
        "block_hash": "ada887736e9d93ca80a66fc59410e855",
        "content": "        center_layout = QVBoxLayout(center_widget)\n        center_layout.setContentsMargins(5, 5, 5,..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "174-178",
        "file2": "views\\main_window.py",
        "lines2": "175-179",
        "block_hash": "e060e748432b42ef832ac9bc3205f961",
        "content": "        center_layout.addWidget(self.cinema_panel, 40)\n        \n        # 下部：座位图面板 (60%)\n        cen..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "176-180",
        "file2": "views\\main_window.py",
        "lines2": "177-181",
        "block_hash": "cb3233b7d49e9778d73ae62d29c1f9bf",
        "content": "        # 下部：座位图面板 (60%)\n        center_layout.addWidget(self.seat_map_panel, 60)\n        \n        m..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "145-149",
        "file2": "views\\main_window.py",
        "lines2": "187-191",
        "block_hash": "6ff34b3c7a9f20f2cf82eadcced81e88",
        "content": "            QWidget {\n                background-color: white;\n                border: 1px solid #dd..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "146-150",
        "file2": "views\\main_window.py",
        "lines2": "188-192",
        "block_hash": "33038630901b98d7ba33aed4b3f84a3a",
        "content": "                background-color: white;\n                border: 1px solid #ddd;\n                bor..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "193-197",
        "file2": "views\\main_window.py",
        "lines2": "194-198",
        "block_hash": "b4d0c6b69eeedc277cbb83bf6f94e003",
        "content": "        right_layout = QVBoxLayout(right_widget)\n        right_layout.setContentsMargins(5, 5, 5, 5)..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "198-202",
        "file2": "views\\main_window.py",
        "lines2": "199-203",
        "block_hash": "f2d86c8de6606094ff3471ad52a05523",
        "content": "        self._create_order_detail_area(right_layout)\n        \n        # 创建支付区域\n        self._create_..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "200-204",
        "file2": "views\\main_window.py",
        "lines2": "201-205",
        "block_hash": "27e5513d08be7c4e6859a6f0222eedbd",
        "content": "        # 创建支付区域\n        self._create_payment_area(right_layout)\n        \n        main_layout.addWid..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "205-209",
        "file2": "views\\main_window.py",
        "lines2": "206-210",
        "block_hash": "4da80936c6717fc63bcb96d5135cb80f",
        "content": "    def _create_order_detail_area(self, layout: QVBoxLayout):\n        \"\"\"创建订单详情区域\"\"\"\n        from Py..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "209-213",
        "file2": "views\\main_window.py",
        "lines2": "210-214",
        "block_hash": "c3e5b3954606e269d58a5c7c7d638242",
        "content": "        # 订单详情组\n        order_group = QGroupBox(\"订单详情\")\n        order_layout = QVBoxLayout(order_gro..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "243-247",
        "file2": "views\\main_window.py",
        "lines2": "244-248",
        "block_hash": "cd1035f9ad454978ec04706c7a9cd99c",
        "content": "    def _create_payment_area(self, layout: QVBoxLayout):\n        \"\"\"创建支付区域\"\"\"\n        from PyQt5.QtW..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "247-251",
        "file2": "views\\main_window.py",
        "lines2": "248-252",
        "block_hash": "ef3be9a69063a7b683707ae268b32f5b",
        "content": "        # 支付组\n        payment_group = QGroupBox(\"支付操作\")\n        payment_layout = QVBoxLayout(payment..."
      },
      {
        "file1": "ui\\components\\auto_browser.py",
        "lines1": "227-231",
        "file2": "views\\main_window.py",
        "lines2": "275-279",
        "block_hash": "f7c62849ac41e67aabf98dda65912276",
        "content": "                border-radius: 5px;\n            }\n            QPushButton:hover {\n                ba..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "268-272",
        "file2": "views\\main_window.py",
        "lines2": "276-280",
        "block_hash": "10fafcf495a24b8ff488793da8f7a7b2",
        "content": "            }\n            QPushButton:hover {\n                background-color: #f57c00;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "269-273",
        "file2": "views\\main_window.py",
        "lines2": "277-281",
        "block_hash": "606922a82d919620c6f634ef053de3e7",
        "content": "            QPushButton:hover {\n                background-color: #f57c00;\n            }\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "270-274",
        "file2": "views\\main_window.py",
        "lines2": "278-282",
        "block_hash": "8ca4c9a0a244159c95622da30c1646da",
        "content": "                background-color: #f57c00;\n            }\n            QPushButton:pressed {\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "377-381",
        "file2": "views\\main_window.py",
        "lines2": "279-283",
        "block_hash": "60d79e098548f48645eb1d3dc7110055",
        "content": "            }\n            QPushButton:pressed {\n                background-color: #ef6c00;\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "378-382",
        "file2": "views\\main_window.py",
        "lines2": "280-284",
        "block_hash": "005022cf582f937432aaba34c1727937",
        "content": "            QPushButton:pressed {\n                background-color: #ef6c00;\n            }\n         ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "379-383",
        "file2": "views\\main_window.py",
        "lines2": "281-285",
        "block_hash": "fb018814293230b515d46f9d5d32f776",
        "content": "                background-color: #ef6c00;\n            }\n            QPushButton:disabled {\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "380-384",
        "file2": "views\\main_window.py",
        "lines2": "282-286",
        "block_hash": "21600f8931c6a9aaf03f7d862879586e",
        "content": "            }\n            QPushButton:disabled {\n                background-color: #cccccc;\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "381-385",
        "file2": "views\\main_window.py",
        "lines2": "283-287",
        "block_hash": "fdf1ccdd570e0cbf755b138995cc8bb5",
        "content": "            QPushButton:disabled {\n                background-color: #cccccc;\n                color:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "307-311",
        "file2": "views\\main_window.py",
        "lines2": "293-297",
        "block_hash": "19382cd29a82080698a21b7a821e7327",
        "content": "        self.qr_display.setStyleSheet(\"\"\"\n            QLabel {\n                color: #666666;\n     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "308-312",
        "file2": "views\\main_window.py",
        "lines2": "294-298",
        "block_hash": "2ed8f534d7854a6b9f2af1116c65e9d3",
        "content": "            QLabel {\n                color: #666666;\n                font: 12px \"Microsoft YaHei\";\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2388-2392",
        "file2": "views\\main_window.py",
        "lines2": "297-301",
        "block_hash": "37183ef25fef1cb850d26be80a0cfbdb",
        "content": "                background-color: #f0f0f0;\n                border: 1px solid #dddddd;\n              ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2389-2393",
        "file2": "views\\main_window.py",
        "lines2": "298-302",
        "block_hash": "8e867a1735a31f82b376f8d5b1b1487e",
        "content": "                border: 1px solid #dddddd;\n                padding: 20px;\n                border-rad..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "304-308",
        "file2": "views\\main_window.py",
        "lines2": "305-309",
        "block_hash": "91750ee162b1d4f3780797a50c4b65ef",
        "content": "        layout.addWidget(payment_group, 30)\n    \n    def _connect_signals(self):\n        \"\"\"连接信号槽\"\"\"..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "309-313",
        "file2": "views\\main_window.py",
        "lines2": "310-314",
        "block_hash": "d449aa0e1760c64035f9593d1d0b307e",
        "content": "        self.account_panel.account_selected.connect(self.account_controller.select_account)\n        ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "314-318",
        "file2": "views\\main_window.py",
        "lines2": "315-319",
        "block_hash": "99c644fb5f20d965388c98d64a904fae",
        "content": "        # 影院面板信号\n        self.cinema_panel.cinema_selected.connect(self.cinema_controller.select_cin..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "314-318",
        "file2": "views\\main_window.py",
        "lines2": "316-320",
        "block_hash": "99c644fb5f20d965388c98d64a904fae",
        "content": "        self.cinema_panel.cinema_selected.connect(self.cinema_controller.select_cinema)\n        self..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "322-326",
        "file2": "views\\main_window.py",
        "lines2": "323-327",
        "block_hash": "048a137fd54b172d89d305194d5290cc",
        "content": "        # 控制器信号\n        self.order_controller.order_error.connect(self._show_error_message)\n        ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "322-326",
        "file2": "views\\main_window.py",
        "lines2": "324-328",
        "block_hash": "048a137fd54b172d89d305194d5290cc",
        "content": "        self.order_controller.order_error.connect(self._show_error_message)\n        self.account_con..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "327-331",
        "file2": "views\\main_window.py",
        "lines2": "328-332",
        "block_hash": "d436b8fb1628f1fb2a5173aa2b139fe9",
        "content": "        # 支付按钮\n        self.pay_button.clicked.connect(self._on_pay_button_clicked)\n        \n       ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "338-342",
        "file2": "views\\main_window.py",
        "lines2": "339-343",
        "block_hash": "c997afcdcad026918e4704b428fe0a8f",
        "content": "        # 订阅自定义事件\n        event_bus.subscribe('qrcode_received', self._on_qrcode_received)\n\n        ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "353-357",
        "file2": "views\\main_window.py",
        "lines2": "354-358",
        "block_hash": "5f0561d1651a0b2f450fd89c8314ee1d",
        "content": "        # 标记主窗口就绪\n        event_manager.mark_component_ready(\"main_window\")\n        \n        print(\"..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "375-379",
        "file2": "views\\main_window.py",
        "lines2": "376-380",
        "block_hash": "4a68f3d590ebd419a02cb0d076f10cf7",
        "content": "            print(\"[主窗口] 准备显示登录窗口...\")\n            self.login_window.show()\n            self.login_w..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "384-388",
        "file2": "views\\main_window.py",
        "lines2": "385-389",
        "block_hash": "f42c2439a43fb07d66d56404db7ad68e",
        "content": "            print(f\"[主窗口] 启动用户认证流程完成\")\n            print(f\"[主窗口] 登录窗口位置: {self.login_window.pos()}\")..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "395-399",
        "file2": "views\\main_window.py",
        "lines2": "396-400",
        "block_hash": "ee68f8bf1947260b4771ee96a691883b",
        "content": "    def _start_auth_flow_safe(self):\n        \"\"\"安全的认证流程启动方法\"\"\"\n        print(\"[主窗口] _start_auth_flow..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "400-404",
        "file2": "views\\main_window.py",
        "lines2": "401-405",
        "block_hash": "12515bbf0cf37cb8743b02c22d9758e5",
        "content": "            if hasattr(self, 'login_window') and self.login_window:\n                print(\"[主窗口] 发现已..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "408-412",
        "file2": "views\\main_window.py",
        "lines2": "409-413",
        "block_hash": "fc63852f3d92550d845e3d3614ac774f",
        "content": "        except Exception as e:\n            print(f\"[主窗口] 安全认证流程启动异常: {e}\")\n            import traceb..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "2730-2734",
        "file2": "views\\main_window.py",
        "lines2": "420-424",
        "block_hash": "7da52f07621cad17a0d9a229a16a8793",
        "content": "                QMessageBox.Yes | QMessageBox.No,\n                QMessageBox.Yes\n            )\n\n   ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "426-430",
        "file2": "views\\main_window.py",
        "lines2": "427-431",
        "block_hash": "a2d87558d99049f607e9ed9af01f3d9b",
        "content": "    def _manual_start_login(self):\n        \"\"\"手动启动登录窗口\"\"\"\n        print(\"[主窗口] 手动启动登录窗口\")\n        tr..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "431-435",
        "file2": "views\\main_window.py",
        "lines2": "432-436",
        "block_hash": "d4616923957f49a56ed38cdf0b0fb8db",
        "content": "            from ui.login_window import LoginWindow\n\n            self.login_window = LoginWindow()\n ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "440-444",
        "file2": "views\\main_window.py",
        "lines2": "441-445",
        "block_hash": "dbdc78ca272ca4b755df07a628d927fa",
        "content": "            self.login_window.setWindowFlags(self.login_window.windowFlags() | Qt.WindowStaysOnTopHi..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "449-453",
        "file2": "views\\main_window.py",
        "lines2": "450-454",
        "block_hash": "13ea13b5c855bb7b4077b0088a67d202",
        "content": "        except Exception as e:\n            print(f\"[主窗口] 手动启动登录窗口失败: {e}\")\n            import traceb..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "469-473",
        "file2": "views\\main_window.py",
        "lines2": "470-474",
        "block_hash": "cf054b2e60fbfcacab1b0edd2e640817",
        "content": "    def _center_login_window(self):\n        \"\"\"确保登录窗口在主屏幕中央\"\"\"\n        try:\n            from PyQt5.Q..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "474-478",
        "file2": "views\\main_window.py",
        "lines2": "475-479",
        "block_hash": "cd5e8b551fd9fa9473236c06c0b4e29f",
        "content": "            # 获取主屏幕几何信息\n            desktop = QDesktopWidget()\n            screen_rect = desktop.ava..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "478-482",
        "file2": "views\\main_window.py",
        "lines2": "479-483",
        "block_hash": "4cd8549b136099c01a4a1cbf54d46a25",
        "content": "            # 计算登录窗口的中央位置\n            login_size = self.login_window.size()\n            x = screen_r..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "478-482",
        "file2": "views\\main_window.py",
        "lines2": "480-484",
        "block_hash": "4cd8549b136099c01a4a1cbf54d46a25",
        "content": "            login_size = self.login_window.size()\n            x = screen_rect.x() + (screen_rect.wid..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "490-494",
        "file2": "views\\main_window.py",
        "lines2": "491-495",
        "block_hash": "a2595802d96d017c0091f20cd7d99c5d",
        "content": "        except Exception as e:\n            print(f\"[主窗口] 居中登录窗口失败: {e}\")\n            # 如果居中失败，至少移动到(..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "514-518",
        "file2": "views\\main_window.py",
        "lines2": "501-505",
        "block_hash": "d9c616127083ba9703a2581ebec50f22",
        "content": "            \n            # 关闭登录窗口\n            if hasattr(self, 'login_window') and self.login_window..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "514-518",
        "file2": "views\\main_window.py",
        "lines2": "502-506",
        "block_hash": "d9c616127083ba9703a2581ebec50f22",
        "content": "            # 关闭登录窗口\n            if hasattr(self, 'login_window') and self.login_window:\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "514-518",
        "file2": "views\\main_window.py",
        "lines2": "503-507",
        "block_hash": "d9c616127083ba9703a2581ebec50f22",
        "content": "            if hasattr(self, 'login_window') and self.login_window:\n                self.login_windo..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "507-511",
        "file2": "views\\main_window.py",
        "lines2": "508-512",
        "block_hash": "38f370fa481f1ed531bea6dcb160b22a",
        "content": "            self.show()\n            self.raise_()\n            self.activateWindow()\n            self..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "512-516",
        "file2": "views\\main_window.py",
        "lines2": "513-517",
        "block_hash": "792e626a5304dd1b674a2b2abea5296f",
        "content": "            # 发布登录成功事件\n            self.login_success.emit(user_info)\n            event_bus.user_log..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "517-521",
        "file2": "views\\main_window.py",
        "lines2": "518-522",
        "block_hash": "d1200e9914c64ddf190900e47096fd79",
        "content": "            QTimer.singleShot(500, self._start_data_loading)\n            \n        except Exception a..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "522-526",
        "file2": "views\\main_window.py",
        "lines2": "523-527",
        "block_hash": "0e64ca089629d1775575992932f298f9",
        "content": "    def _start_data_loading(self):\n        \"\"\"启动数据加载 - 优化版：先影院后账号\"\"\"\n        try:\n            print(..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "528-532",
        "file2": "views\\main_window.py",
        "lines2": "529-533",
        "block_hash": "aed476637cd389fb0b2c11dfdd9cee60",
        "content": "            print(\"[主窗口] 步骤1: 加载影院列表\")\n            cinemas = self.cinema_controller.load_cinema_list..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "539-543",
        "file2": "views\\main_window.py",
        "lines2": "540-544",
        "block_hash": "f5f352758806c356b103a82cf0bc90bf",
        "content": "                # 发布影院选择事件\n                from utils.signals import event_bus\n                event..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "544-548",
        "file2": "views\\main_window.py",
        "lines2": "545-549",
        "block_hash": "79efd7aa61e5d688ebe01bff3b5001a5",
        "content": "                QTimer.singleShot(300, lambda: self._load_cinema_accounts(first_cinema))\n           ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "549-553",
        "file2": "views\\main_window.py",
        "lines2": "550-554",
        "block_hash": "2f5c2dbad903ece872d6015505c708ed",
        "content": "            print(\"[主窗口] 智能数据加载流程启动完成\")\n\n        except Exception as e:\n            print(f\"[主窗口] 数据..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "560-564",
        "file2": "views\\main_window.py",
        "lines2": "561-565",
        "block_hash": "539664c520ac37a2e6a40dcdd3212975",
        "content": "            print(f\"[主窗口] 步骤3: 加载影院 {cinema_name} 的关联账号\")\n\n            # 加载账号列表（账号控制器会根据当前影院过滤）\n    ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "562-566",
        "file2": "views\\main_window.py",
        "lines2": "563-567",
        "block_hash": "20d2b247f6602d6d7adf918d1f82829a",
        "content": "            # 加载账号列表（账号控制器会根据当前影院过滤）\n            accounts = self.account_controller.load_account_lis..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "565-569",
        "file2": "views\\main_window.py",
        "lines2": "566-570",
        "block_hash": "92a474c8f475bb1c2e28fb940b77f7c0",
        "content": "            if accounts and len(accounts) > 0:\n                # 第四步：自动选择第一个账号\n                first..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "567-571",
        "file2": "views\\main_window.py",
        "lines2": "568-572",
        "block_hash": "23b896430d37f4155aed6df0e2a44a60",
        "content": "                first_account = accounts[0]\n                userid = first_account.get('userid', fir..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "570-574",
        "file2": "views\\main_window.py",
        "lines2": "571-575",
        "block_hash": "a50f1a2dc87520f33bfdfe67fae7b105",
        "content": "                print(f\"[主窗口] 步骤4: 自动选择默认账号: {userid}\")\n\n                # 选择账号\n                self..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "575-579",
        "file2": "views\\main_window.py",
        "lines2": "576-580",
        "block_hash": "166ac0aa03b3419cc691f35a22833075",
        "content": "                print(f\"[主窗口] ✅ 智能加载完成: 影院={cinema_name}, 账号={userid}\")\n                print(f\"[主窗口..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "657-661",
        "file2": "views\\main_window.py",
        "lines2": "586-590",
        "block_hash": "ec2e80a4072ff5d33ea2be4f3eae4762",
        "content": "        try:\n            from PyQt5.QtWidgets import QDesktopWidget\n            screen = QDesktopWid..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "658-662",
        "file2": "views\\main_window.py",
        "lines2": "587-591",
        "block_hash": "78159da2ba93cdb5c4887ecb684edbfc",
        "content": "            from PyQt5.QtWidgets import QDesktopWidget\n            screen = QDesktopWidget().screenG..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "659-663",
        "file2": "views\\main_window.py",
        "lines2": "588-592",
        "block_hash": "e630de156c20850aff202584e2925b3e",
        "content": "            screen = QDesktopWidget().screenGeometry()\n            size = self.geometry()\n          ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "660-664",
        "file2": "views\\main_window.py",
        "lines2": "589-593",
        "block_hash": "2b914088d03c9cce9c586089511a3857",
        "content": "            size = self.geometry()\n            x = (screen.width() - size.width()) // 2\n            ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "219-223",
        "file2": "views\\main_window.py",
        "lines2": "604-608",
        "block_hash": "3236086f759e06a5c88738fe1f6678d0",
        "content": "                padding: 10px;\n                background-color: #E8F5E9;\n                border-rad..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "220-224",
        "file2": "views\\main_window.py",
        "lines2": "605-609",
        "block_hash": "cace50279b26f074f01d147dc273713d",
        "content": "                background-color: #E8F5E9;\n                border-radius: 3px;\n                borde..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "625-629",
        "file2": "views\\main_window.py",
        "lines2": "626-630",
        "block_hash": "4d95c9b78e9a15e1cded7a5925864096",
        "content": "            # 如果是待支付状态，启用支付按钮\n            if order_detail.get('status') == '待支付':\n                se..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "637-641",
        "file2": "views\\main_window.py",
        "lines2": "638-642",
        "block_hash": "8d44d467bd2c80454f9b3f312c5ed3cf",
        "content": "            event_bus.order_submitted.emit(order_data)\n            \n        except Exception as e:\n ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "664-668",
        "file2": "views\\main_window.py",
        "lines2": "665-669",
        "block_hash": "9dc5cd76480da95af5dcd52533d51a53",
        "content": "            self.order_detail_text.append(\"\\n\\n✅ 支付成功！\")\n\n        except Exception as e:\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1297-1301",
        "file2": "views\\main_window.py",
        "lines2": "674-678",
        "block_hash": "93ad3c91e42f76ccc039675140a70569",
        "content": "            if qr_code:\n                self.qr_display.setText(f\"取票成功！\\n\\n取票码: {qr_code}\")\n        ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1298-1302",
        "file2": "views\\main_window.py",
        "lines2": "675-679",
        "block_hash": "258f67ece7218c023e5713b126c48a55",
        "content": "                self.qr_display.setText(f\"取票成功！\\n\\n取票码: {qr_code}\")\n                self.qr_display...."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1299-1303",
        "file2": "views\\main_window.py",
        "lines2": "676-680",
        "block_hash": "343a61a79ee08ff334ae48f5432be506",
        "content": "                self.qr_display.setStyleSheet(\"\"\"\n                    QLabel {\n                     ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1300-1304",
        "file2": "views\\main_window.py",
        "lines2": "677-681",
        "block_hash": "512c0d967161b4ed77a4e279c4cda2ce",
        "content": "                    QLabel {\n                        color: #2e7d32;\n                        font: b..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1301-1305",
        "file2": "views\\main_window.py",
        "lines2": "678-682",
        "block_hash": "b87b2aef26956b531a123195bcca905b",
        "content": "                        color: #2e7d32;\n                        font: bold 12px \"Microsoft YaHei\";\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1302-1306",
        "file2": "views\\main_window.py",
        "lines2": "679-683",
        "block_hash": "1dfc3cfa43c9d5e434400f7ebe3fd422",
        "content": "                        font: bold 12px \"Microsoft YaHei\";\n                        background-color:..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1303-1307",
        "file2": "views\\main_window.py",
        "lines2": "680-684",
        "block_hash": "91a52af776fb6b5c285c955fa45263a1",
        "content": "                        background-color: #e8f5e8;\n                        border: 2px solid #4caf50..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1304-1308",
        "file2": "views\\main_window.py",
        "lines2": "681-685",
        "block_hash": "e542b283e111f25d002271ea8cd7b903",
        "content": "                        border: 2px solid #4caf50;\n                        padding: 20px;\n          ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "689-693",
        "file2": "views\\main_window.py",
        "lines2": "690-694",
        "block_hash": "76a2c5c9d135c7396b9e17487ceb4066",
        "content": "    def _start_countdown(self, seconds: int):\n        \"\"\"启动倒计时\"\"\"\n        # 这里可以实现倒计时逻辑\n        self..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "20-24",
        "file2": "views\\components\\account_panel.py",
        "lines2": "21-25",
        "block_hash": "4be6e2f765f0c12b2ea6298723ae33e4",
        "content": "    account_selected = pyqtSignal(dict)  # 账号选择\n    account_login_requested = pyqtSignal(dict)  # 账号..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "views\\components\\account_panel.py",
        "lines2": "25-29",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 状态变量"
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "28-32",
        "file2": "views\\components\\account_panel.py",
        "lines2": "29-33",
        "block_hash": "73949d199caf8238836ec24c076da08d",
        "content": "        # 状态变量\n        self.account_list = []\n        self.current_account = None\n        self.curre..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "28-32",
        "file2": "views\\components\\account_panel.py",
        "lines2": "30-34",
        "block_hash": "73949d199caf8238836ec24c076da08d",
        "content": "        self.account_list = []\n        self.current_account = None\n        self.current_cinema = Non..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "39-43",
        "file2": "views\\components\\account_panel.py",
        "lines2": "41-45",
        "block_hash": "48fac530c969e993a9eccf7ebde8108f",
        "content": "    \n    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "72-76",
        "file2": "views\\components\\account_panel.py",
        "lines2": "44-48",
        "block_hash": "845ef4bb25dd351f32677fcc61907543",
        "content": "        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, 5)\n        layout.setS..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "47-51",
        "file2": "views\\components\\account_panel.py",
        "lines2": "48-52",
        "block_hash": "d1834ef64dfa39c914a9cf6964ef1958",
        "content": "        # 账号登录区\n        login_group = QGroupBox(\"账号登录\")\n        login_layout = QVBoxLayout(login_gro..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "88-92",
        "file2": "views\\components\\account_panel.py",
        "lines2": "89-93",
        "block_hash": "d52addd99b89a7e6bfc5fab8feaf59b9",
        "content": "        # 账号列表区\n        list_group = QGroupBox(\"账号列表\")\n        list_layout = QVBoxLayout(list_group)..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "490-494",
        "file2": "views\\components\\account_panel.py",
        "lines2": "114-118",
        "block_hash": "3425a546f91853fe3d05d7771a3089bd",
        "content": "            }\n            QListWidget::item {\n                padding: 8px;\n                border-b..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "491-495",
        "file2": "views\\components\\account_panel.py",
        "lines2": "115-119",
        "block_hash": "659c73fc9cf5c40fd0f99a2ad51e3a77",
        "content": "            QListWidget::item {\n                padding: 8px;\n                border-bottom: 1px sol..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "492-496",
        "file2": "views\\components\\account_panel.py",
        "lines2": "116-120",
        "block_hash": "c0cdd30ed03cfa21998ab2e8d23b84c9",
        "content": "                padding: 8px;\n                border-bottom: 1px solid #eee;\n            }\n         ..."
      },
      {
        "file1": "ui\\widgets\\classic_components.py",
        "lines1": "498-502",
        "file2": "views\\components\\account_panel.py",
        "lines2": "122-126",
        "block_hash": "685751cb703faa35eb82fd564d6c0bba",
        "content": "            }\n            QListWidget::item:hover {\n                background-color: #F5F5F5;\n     ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "129-133",
        "file2": "views\\components\\account_panel.py",
        "lines2": "130-134",
        "block_hash": "197369173d926ed28eec688eeda260ad",
        "content": "        account_button_layout = QHBoxLayout()\n        self.select_button = QPushButton(\"选择账号\")\n     ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "601-605",
        "file2": "views\\components\\account_panel.py",
        "lines2": "151-155",
        "block_hash": "7a5b3e90dfc2081ae7dce41d08338ae1",
        "content": "            QLabel {\n                color: #4CAF50;\n                font-weight: bold;\n            ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "602-606",
        "file2": "views\\components\\account_panel.py",
        "lines2": "152-156",
        "block_hash": "90244af703c6df8409c2e02102a4a599",
        "content": "                color: #4CAF50;\n                font-weight: bold;\n                padding: 10px;\n  ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "603-607",
        "file2": "views\\components\\account_panel.py",
        "lines2": "153-157",
        "block_hash": "6c8dd366a66e15fd17ebfc1712caad89",
        "content": "                font-weight: bold;\n                padding: 10px;\n                background-color: ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "219-223",
        "file2": "views\\components\\account_panel.py",
        "lines2": "154-158",
        "block_hash": "3236086f759e06a5c88738fe1f6678d0",
        "content": "                padding: 10px;\n                background-color: #E8F5E9;\n                border-rad..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "220-224",
        "file2": "views\\components\\account_panel.py",
        "lines2": "155-159",
        "block_hash": "cace50279b26f074f01d147dc273713d",
        "content": "                background-color: #E8F5E9;\n                border-radius: 3px;\n                borde..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "46-50",
        "file2": "views\\components\\account_panel.py",
        "lines2": "172-176",
        "block_hash": "9c6f171af4b6a7138c70334ecf08181d",
        "content": "    \n    @event_handler(\"cinema_selected\")\n    def _on_cinema_selected(self, cinema_data: dict):\n   ..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "47-51",
        "file2": "views\\components\\account_panel.py",
        "lines2": "189-193",
        "block_hash": "34e7dfc119cf7e7fc0e38b8091ac94c7",
        "content": "    \n    @event_handler(\"account_selected\")\n    def _on_account_selected(self, account_data: dict):\n..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "207-211",
        "file2": "views\\components\\account_panel.py",
        "lines2": "208-212",
        "block_hash": "6d539707de3a2ea101b4219b6959d010",
        "content": "    @event_handler(\"account_removed\")\n    def _on_account_removed(self, phone: str):\n        \"\"\"账号删除..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "212-216",
        "file2": "views\\components\\account_panel.py",
        "lines2": "213-217",
        "block_hash": "6c789c3c7bd6b9619e32bde727cd4625",
        "content": "        # 如果删除的是当前账号，清空显示\n        if self.current_account and self.current_account.get('phone') == p..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "217-221",
        "file2": "views\\components\\account_panel.py",
        "lines2": "218-222",
        "block_hash": "836d5aed6ccc99af78b72f599148d86c",
        "content": "    def _update_account_list_display(self):\n        \"\"\"更新账号列表显示\"\"\"\n        try:\n            self.acc..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "228-232",
        "file2": "views\\components\\account_panel.py",
        "lines2": "229-233",
        "block_hash": "854af47fc2adc036805af411f31612ae",
        "content": "            for account in self.account_list:\n                phone = account.get('phone', 'N/A')\n  ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "233-237",
        "file2": "views\\components\\account_panel.py",
        "lines2": "234-238",
        "block_hash": "13a9e6c6f3cc5f0ef375c2dd18d3d593",
        "content": "                display_text = f\"{phone}\\n影院: {cinema_name}\"\n                \n                item =..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "238-242",
        "file2": "views\\components\\account_panel.py",
        "lines2": "239-243",
        "block_hash": "ef2d870db4cd4811ae9ac298ad4d8838",
        "content": "                # 设置字体\n                font = QFont()\n                font.setPointSize(9)\n         ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "243-247",
        "file2": "views\\components\\account_panel.py",
        "lines2": "244-248",
        "block_hash": "f3b0c1e9b6edaf7f360e98380f39168d",
        "content": "                self.account_list_widget.addItem(item)\n            \n        except Exception as e:\n ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "225-229",
        "file2": "views\\components\\account_panel.py",
        "lines2": "267-271",
        "block_hash": "78f4b360f8924b18d0a6a47a9cb218ed",
        "content": "    \n    def _on_login_clicked(self):\n        \"\"\"登录按钮点击处理\"\"\"\n        try:\n            phone = self.p..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "227-231",
        "file2": "views\\components\\account_panel.py",
        "lines2": "270-274",
        "block_hash": "af487ba6171ad7bc4054611fee810f71",
        "content": "        try:\n            phone = self.phone_input.text().strip()\n            openid = self.openid_in..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "274-278",
        "file2": "views\\components\\account_panel.py",
        "lines2": "275-279",
        "block_hash": "642eca512a620fe3ee2431a9f77fccee",
        "content": "            if not all([phone, openid, token]):\n                QMessageBox.warning(self, \"输入错误\", \"请..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "views\\components\\account_panel.py",
        "lines2": "285-289",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            \n            # 如果有当前影院，添加影院信息\n            if self.current_cinema:\n                accoun..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "views\\components\\account_panel.py",
        "lines2": "286-290",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            # 如果有当前影院，添加影院信息\n            if self.current_cinema:\n                account_data['cinem..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "views\\components\\account_panel.py",
        "lines2": "287-291",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            if self.current_cinema:\n                account_data['cinemaid'] = self.current_cinema.g..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "227-231",
        "file2": "views\\components\\account_panel.py",
        "lines2": "300-304",
        "block_hash": "af487ba6171ad7bc4054611fee810f71",
        "content": "        try:\n            phone = self.phone_input.text().strip()\n            openid = self.openid_in..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "271-275",
        "file2": "views\\components\\account_panel.py",
        "lines2": "301-305",
        "block_hash": "d136e0c7ca7f5bfd4a2f241ea9542569",
        "content": "            phone = self.phone_input.text().strip()\n            openid = self.openid_input.text().st..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "272-276",
        "file2": "views\\components\\account_panel.py",
        "lines2": "302-306",
        "block_hash": "00af0aed246685200e277f8f53b07147",
        "content": "            openid = self.openid_input.text().strip()\n            token = self.token_input.text().st..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "273-277",
        "file2": "views\\components\\account_panel.py",
        "lines2": "303-307",
        "block_hash": "7a67b6af7bace8989a04e273f54b3b2b",
        "content": "            token = self.token_input.text().strip()\n            \n            if not all([phone, open..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "274-278",
        "file2": "views\\components\\account_panel.py",
        "lines2": "304-308",
        "block_hash": "642eca512a620fe3ee2431a9f77fccee",
        "content": "            \n            if not all([phone, openid, token]):\n                QMessageBox.warning(sel..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "274-278",
        "file2": "views\\components\\account_panel.py",
        "lines2": "305-309",
        "block_hash": "642eca512a620fe3ee2431a9f77fccee",
        "content": "            if not all([phone, openid, token]):\n                QMessageBox.warning(self, \"输入错误\", \"请..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "309-313",
        "file2": "views\\components\\account_panel.py",
        "lines2": "310-314",
        "block_hash": "98569e6cc365a8af04d0ac7c5b64e15e",
        "content": "            for account in self.account_list:\n                if account.get('phone') == phone:\n    ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "278-282",
        "file2": "views\\components\\account_panel.py",
        "lines2": "314-318",
        "block_hash": "e89342bc0c2907591f02d377336dd48c",
        "content": "            \n            # 构建账号数据\n            account_data = {\n                'phone': phone,\n     ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "279-283",
        "file2": "views\\components\\account_panel.py",
        "lines2": "315-319",
        "block_hash": "a38f1ff61c7d231e1c8d778a80c909c8",
        "content": "            # 构建账号数据\n            account_data = {\n                'phone': phone,\n                'o..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "280-284",
        "file2": "views\\components\\account_panel.py",
        "lines2": "316-320",
        "block_hash": "61637f3a14ed0b16e17e2c55605986e4",
        "content": "            account_data = {\n                'phone': phone,\n                'openid': openid,\n     ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "281-285",
        "file2": "views\\components\\account_panel.py",
        "lines2": "317-321",
        "block_hash": "9324de0362a6db51a6814d9fcef0b211",
        "content": "                'phone': phone,\n                'openid': openid,\n                'token': token\n   ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "284-288",
        "file2": "views\\components\\account_panel.py",
        "lines2": "320-324",
        "block_hash": "eac27f57a356b35e01911bfed0e88418",
        "content": "            }\n            \n            # 如果有当前影院，添加影院信息\n            if self.current_cinema:\n        ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "views\\components\\account_panel.py",
        "lines2": "321-325",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            \n            # 如果有当前影院，添加影院信息\n            if self.current_cinema:\n                accoun..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "views\\components\\account_panel.py",
        "lines2": "322-326",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            # 如果有当前影院，添加影院信息\n            if self.current_cinema:\n                account_data['cinem..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "204-208",
        "file2": "views\\components\\account_panel.py",
        "lines2": "323-327",
        "block_hash": "d05b63563e8fa06a1110060f1cb96fe8",
        "content": "            if self.current_cinema:\n                account_data['cinemaid'] = self.current_cinema.g..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "340-344",
        "file2": "views\\components\\account_panel.py",
        "lines2": "341-345",
        "block_hash": "d87f8c5b780da69169b4b752a910fedd",
        "content": "            account_data = current_item.data(Qt.UserRole)\n            if account_data:\n             ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "336-340",
        "file2": "views\\components\\account_panel.py",
        "lines2": "352-356",
        "block_hash": "830ddf03c5156f71561e085cae5f48cc",
        "content": "        try:\n            current_item = self.account_list_widget.currentItem()\n            if not cu..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "337-341",
        "file2": "views\\components\\account_panel.py",
        "lines2": "353-357",
        "block_hash": "f9e98712baaa1bf8ca12db0dd84f73f2",
        "content": "            current_item = self.account_list_widget.currentItem()\n            if not current_item:\n ..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "360-364",
        "file2": "views\\components\\account_panel.py",
        "lines2": "361-365",
        "block_hash": "7ee4a38e2ebb2191366c14b43afff8a9",
        "content": "            phone = account_data.get('phone', '')\n            if not phone:\n                return\n ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "272-276",
        "file2": "views\\components\\account_panel.py",
        "lines2": "366-370",
        "block_hash": "622be99be7011abb9e56f30c1c6d6b22",
        "content": "            reply = QMessageBox.question(\n                self, \"确认删除\", \n                f\"确定要删除账号 {..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "273-277",
        "file2": "views\\components\\account_panel.py",
        "lines2": "367-371",
        "block_hash": "f45fefb38d865dac04cb5bdd3c9e7df7",
        "content": "                self, \"确认删除\", \n                f\"确定要删除账号 {phone} 吗？\",\n                QMessageBox.Ye..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "274-278",
        "file2": "views\\components\\account_panel.py",
        "lines2": "368-372",
        "block_hash": "bdbb08940357dc8e83afd76bf064a8ff",
        "content": "                f\"确定要删除账号 {phone} 吗？\",\n                QMessageBox.Yes | QMessageBox.No,\n           ..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "275-279",
        "file2": "views\\components\\account_panel.py",
        "lines2": "369-373",
        "block_hash": "96be0c1b11f35eb6bcf9a5a227b283bc",
        "content": "                QMessageBox.Yes | QMessageBox.No,\n                QMessageBox.No\n            )\n     ..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "264-268",
        "file2": "views\\components\\account_panel.py",
        "lines2": "386-390",
        "block_hash": "9371e47b39cefe2e964331eff0e41438",
        "content": "    \n    def get_current_account(self) -> Optional[dict]:\n        \"\"\"获取当前账号\"\"\"\n        return self.c..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "5-9",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "5-9",
        "block_hash": "a5a2b96669ca4a5d1d92330bf843bdd9",
        "content": "\"\"\"\n\nfrom typing import Dict, List, Optional\nfrom PyQt5.QtWidgets import (\n    QWidget, QVBoxLayout,..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "11-15",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "11-15",
        "block_hash": "064655bae3b31b5f206b84bc25cff155",
        "content": ")\nfrom PyQt5.QtCore import Qt, pyqtSignal\nfrom PyQt5.QtGui import QFont\nfrom utils.signals import ev..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "12-16",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "12-16",
        "block_hash": "aceca65d5b917187412ce05880ac101b",
        "content": "from PyQt5.QtCore import Qt, pyqtSignal\nfrom PyQt5.QtGui import QFont\nfrom utils.signals import even..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "19-23",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "20-24",
        "block_hash": "697d901cd8497529e252dd3a01d927dc",
        "content": "    # 信号定义\n    cinema_selected = pyqtSignal(dict)  # 影院选择\n    movie_selected = pyqtSignal(dict)  # 电..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "24-28",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 状态变量"
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "34-38",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "27-31",
        "block_hash": "887cfbf5d963f7eb5e4f7a4c159ba5d3",
        "content": "        \n        # 状态变量\n        self.cinema_list = []\n        self.movie_list = []\n        self.sess..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "39-43",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "43-47",
        "block_hash": "48fac530c969e993a9eccf7ebde8108f",
        "content": "    \n    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "42-46",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "44-48",
        "block_hash": "7d45731d1434fc68677223702dda7365",
        "content": "    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setC..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "43-47",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "45-49",
        "block_hash": "5db9d8b83a1ecfdf674a8f5992a4d3da",
        "content": "        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "72-76",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "46-50",
        "block_hash": "845ef4bb25dd351f32677fcc61907543",
        "content": "        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, 5)\n        layout.setS..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "60-64",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "85-89",
        "block_hash": "237ffeeda9b36d1b9ab1b5bdf8e3e26a",
        "content": "            QComboBox {\n                padding: 5px;\n                border: 1px solid #ddd;\n      ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "61-65",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "86-90",
        "block_hash": "d88ac877e690e1278bc15c0cc36e63b7",
        "content": "                padding: 5px;\n                border: 1px solid #ddd;\n                border-radius:..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "62-66",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "87-91",
        "block_hash": "d3b44dda644adc7ff4a78775fc9ea5be",
        "content": "                border: 1px solid #ddd;\n                border-radius: 3px;\n                backgrou..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "63-67",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "88-92",
        "block_hash": "a7c5f03e16ebd396d334fdd54ee67270",
        "content": "                border-radius: 3px;\n                background-color: white;\n            }\n         ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "64-68",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "89-93",
        "block_hash": "b329eed06e68a1e470acfff900e945f1",
        "content": "                background-color: white;\n            }\n            QComboBox:focus {\n               ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "99-103",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "100-104",
        "block_hash": "0572524cfb0c1d184fb1d7e316ebcd1e",
        "content": "        # 场次选择区\n        session_group = QGroupBox(\"场次选择\")\n        session_layout = QVBoxLayout(sessi..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "103-107",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "104-108",
        "block_hash": "0add2ab1d4769502f7bbb46ce5b9f86c",
        "content": "        # 场次表格\n        self.session_table = QTableWidget()\n        self.session_table.setColumnCount..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "103-107",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "105-109",
        "block_hash": "0add2ab1d4769502f7bbb46ce5b9f86c",
        "content": "        self.session_table = QTableWidget()\n        self.session_table.setColumnCount(4)\n        sel..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "163-167",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "120-124",
        "block_hash": "979f47913bc76392317b15f37cf44faf",
        "content": "            }\n            QTableWidget::item:selected {\n                background-color: #E3F2FD;\n ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "164-168",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "121-125",
        "block_hash": "01060122930f34ed67d21a55c9f99b99",
        "content": "            QTableWidget::item:selected {\n                background-color: #E3F2FD;\n               ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "165-169",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "122-126",
        "block_hash": "529b765d7b8d06a0b2984071116f0ebd",
        "content": "                background-color: #E3F2FD;\n                color: #1976D2;\n            }\n           ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "166-170",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "123-127",
        "block_hash": "094731ccbdd8f2287807849048d014b1",
        "content": "                color: #1976D2;\n            }\n            QHeaderView::section {\n                bac..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "140-144",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "141-145",
        "block_hash": "a2a20cb84fb7b581308b2934a4b62169",
        "content": "        # 连接选择信号\n        self.session_table.itemSelectionChanged.connect(self._on_session_selection_..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "140-144",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "142-146",
        "block_hash": "a2a20cb84fb7b581308b2934a4b62169",
        "content": "        self.session_table.itemSelectionChanged.connect(self._on_session_selection_changed)\n        ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "146-150",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "147-151",
        "block_hash": "bba81b83306fa1f921fcbdfab9711a83",
        "content": "        session_button_layout = QHBoxLayout()\n        self.select_session_button = QPushButton(\"选择场次..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "219-223",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "167-171",
        "block_hash": "3236086f759e06a5c88738fe1f6678d0",
        "content": "                padding: 10px;\n                background-color: #f9f9f9;\n                border-rad..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "220-224",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "168-172",
        "block_hash": "cace50279b26f074f01d147dc273713d",
        "content": "                background-color: #f9f9f9;\n                border-radius: 3px;\n                borde..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "161-165",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "174-178",
        "block_hash": "1a0066497ecf3d7917a86b5c37a0fe99",
        "content": "        \n        layout.addWidget(current_group)\n    \n    def _connect_events(self):\n        \"\"\"连接事件..."
      },
      {
        "file1": "controllers\\account_controller.py",
        "lines1": "46-50",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "209-213",
        "block_hash": "9c6f171af4b6a7138c70334ecf08181d",
        "content": "    \n    @event_handler(\"cinema_selected\")\n    def _on_cinema_selected(self, cinema_data: dict):\n   ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "227-231",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "228-232",
        "block_hash": "4c48ff2ebde1aa307565ad6476d5ac18",
        "content": "    def _update_cinema_combo(self):\n        \"\"\"更新影院下拉框\"\"\"\n        try:\n            self.cinema_combo..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "232-236",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "233-237",
        "block_hash": "595dbb0ae7169fab5f9241e3a500c914",
        "content": "            if not self.cinema_list:\n                self.cinema_combo.addItem(\"暂无影院数据\")\n           ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "247-251",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "248-252",
        "block_hash": "47f849d1ec54ff9bccd9cf4363767c9d",
        "content": "    def _update_movie_combo(self):\n        \"\"\"更新电影下拉框\"\"\"\n        try:\n            self.movie_combo.c..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "252-256",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "253-257",
        "block_hash": "6e4f6861faa3eb8812ee8567fa733118",
        "content": "            if not self.movie_list:\n                self.movie_combo.addItem(\"暂无电影数据\")\n             ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "267-271",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "268-272",
        "block_hash": "595d0523c6198e85386ff4ba3fd6f680",
        "content": "    def _update_session_table(self):\n        \"\"\"更新场次表格\"\"\"\n        try:\n            self.session_tabl..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "272-276",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "273-277",
        "block_hash": "38aa3adca02fb3ebc042c5100ec384fb",
        "content": "            if not self.session_list:\n                return\n            \n            self.session_t..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "279-283",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "280-284",
        "block_hash": "d02d112764f77f4f74cc9b2ef41d3033",
        "content": "                time_item = QTableWidgetItem(session.get('time', 'N/A'))\n                time_item.s..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "283-287",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "284-288",
        "block_hash": "ed64acd5008c5cea62d3e124095b961d",
        "content": "                # 影厅\n                hall_item = QTableWidgetItem(session.get('hall', 'N/A'))\n      ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "287-291",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "288-292",
        "block_hash": "62128481864df6daecf3b7dfc8cc38e1",
        "content": "                # 价格\n                price_item = QTableWidgetItem(f\"¥{session.get('price', '0.00')}..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "291-295",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "292-296",
        "block_hash": "70b76e072f1b627ceb4ee0487636d11b",
        "content": "                # 状态\n                status_item = QTableWidgetItem(\"可选\")\n                status_ite..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "291-295",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "293-297",
        "block_hash": "70b76e072f1b627ceb4ee0487636d11b",
        "content": "                status_item = QTableWidgetItem(\"可选\")\n                status_item.setForeground(Qt.da..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "297-301",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "298-302",
        "block_hash": "791e1553a36cd7841a80b3fa9c039642",
        "content": "            self.session_table.resizeColumnsToContents()\n            \n        except Exception as e:..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "302-306",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "303-307",
        "block_hash": "a802d82e5660f1c184f2301b6343c3ca",
        "content": "    def _update_current_selection_display(self):\n        \"\"\"更新当前选择显示\"\"\"\n        try:\n            par..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "315-319",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "316-320",
        "block_hash": "117c8985f4a647824dc7059f82d3eb33",
        "content": "            if self.current_session:\n                session_time = self.current_session.get('time',..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "603-607",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "327-331",
        "block_hash": "6c8dd366a66e15fd17ebfc1712caad89",
        "content": "                        font-weight: bold;\n                        padding: 10px;\n                  ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "219-223",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "328-332",
        "block_hash": "3236086f759e06a5c88738fe1f6678d0",
        "content": "                        padding: 10px;\n                        background-color: #E3F2FD;\n          ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "220-224",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "329-333",
        "block_hash": "cace50279b26f074f01d147dc273713d",
        "content": "                        background-color: #E3F2FD;\n                        border-radius: 3px;\n     ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "163-167",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "336-340",
        "block_hash": "b994e599653d11840e8fd1d9d0cc2273",
        "content": "                self.current_selection_label.setStyleSheet(\"\"\"\n                    QLabel {\n        ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "164-168",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "337-341",
        "block_hash": "391675e191404d75ff1b61bd2107b85d",
        "content": "                    QLabel {\n                        color: #666;\n                        font-size:..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "165-169",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "338-342",
        "block_hash": "5642d05aa6cac949e822cfd3b747ebe1",
        "content": "                        color: #666;\n                        font-size: 12px;\n                      ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "166-170",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "339-343",
        "block_hash": "7b1c1f3ecf5e29396ecd32086da4f4e9",
        "content": "                        font-size: 12px;\n                        padding: 10px;\n                    ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "219-223",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "340-344",
        "block_hash": "3236086f759e06a5c88738fe1f6678d0",
        "content": "                        padding: 10px;\n                        background-color: #f9f9f9;\n          ..."
      },
      {
        "file1": "views\\main_window.py",
        "lines1": "220-224",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "341-345",
        "block_hash": "cace50279b26f074f01d147dc273713d",
        "content": "                        background-color: #f9f9f9;\n                        border-radius: 3px;\n     ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "401-405",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "402-406",
        "block_hash": "c59ca87d9b2effdbb67605a88e71c80d",
        "content": "            time_item = self.session_table.item(current_row, 0)\n            if time_item:\n          ..."
      },
      {
        "file1": "views\\components\\cinema_panel.py",
        "lines1": "406-410",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "407-411",
        "block_hash": "e46eb6c628a2886c85463510cd3fc3ca",
        "content": "                    self.session_selected.emit(session_data)\n            \n        except Exception a..."
      },
      {
        "file1": "controllers\\cinema_controller.py",
        "lines1": "328-332",
        "file2": "views\\components\\cinema_panel.py",
        "lines2": "411-415",
        "block_hash": "8c0fc4bbb8a89ee3cdb5e7e61aab35db",
        "content": "    \n    def get_current_cinema(self) -> Optional[dict]:\n        \"\"\"获取当前影院\"\"\"\n        return self.cu..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "28-32",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "29-33",
        "block_hash": "52c2f78c0c11ec9b193029f6bd8139e0",
        "content": "        # 设置按钮属性\n        self.setFixedSize(30, 25)\n        self.setText(str(self.col))\n        self...."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "28-32",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "30-34",
        "block_hash": "52c2f78c0c11ec9b193029f6bd8139e0",
        "content": "        self.setFixedSize(30, 25)\n        self.setText(str(self.col))\n        self.setFont(QFont(\"Ar..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "34-38",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "35-39",
        "block_hash": "490731dd1dcda7cf42ad55c7886f8939",
        "content": "        self._update_style()\n        \n        # 连接点击事件\n        self.clicked.connect(self._on_clicked..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "458-462",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "50-54",
        "block_hash": "6b299abefc7721d521053fa219fcf381",
        "content": "                    font-weight: bold;\n                }\n                QPushButton:hover {\n       ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "43-47",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "58-62",
        "block_hash": "ad3c99aebb858c6163ec63e852702f31",
        "content": "            # 已选座位 - 蓝色\n            self.setStyleSheet(\"\"\"\n                QPushButton {\n           ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "44-48",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "59-63",
        "block_hash": "72097af985feea07b9c67acdfb4fa58b",
        "content": "            self.setStyleSheet(\"\"\"\n                QPushButton {\n                    background-colo..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "45-49",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "60-64",
        "block_hash": "8d9bbc10052b8f3fa014400bc9584d30",
        "content": "                QPushButton {\n                    background-color: #2196F3;\n                    col..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "46-50",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "61-65",
        "block_hash": "82a428ac50ced8c6f3a81114f662d9b5",
        "content": "                    background-color: #2196F3;\n                    color: white;\n                   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "47-51",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "62-66",
        "block_hash": "1f07831e07d6eb90cf8ada119a78b310",
        "content": "                    color: white;\n                    border: 1px solid #1976D2;\n                   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "48-52",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "63-67",
        "block_hash": "7a1f151a491b0e69da43d6bedfafee7a",
        "content": "                    border: 1px solid #1976D2;\n                    border-radius: 3px;\n             ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "49-53",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "64-68",
        "block_hash": "34420af5c88aa4842e17545be3a5f1f7",
        "content": "                    border-radius: 3px;\n                    font-weight: bold;\n                }\n   ..."
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "lines1": "458-462",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "65-69",
        "block_hash": "6b299abefc7721d521053fa219fcf381",
        "content": "                    font-weight: bold;\n                }\n                QPushButton:hover {\n       ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "52-56",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "67-71",
        "block_hash": "a3afd06409edf2e38aa02f096d2f9822",
        "content": "                QPushButton:hover {\n                    background-color: #1976D2;\n                }..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "43-47",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "73-77",
        "block_hash": "ad3c99aebb858c6163ec63e852702f31",
        "content": "            # 已售座位 - 红色\n            self.setStyleSheet(\"\"\"\n                QPushButton {\n           ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "44-48",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "74-78",
        "block_hash": "72097af985feea07b9c67acdfb4fa58b",
        "content": "            self.setStyleSheet(\"\"\"\n                QPushButton {\n                    background-colo..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "45-49",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "75-79",
        "block_hash": "8d9bbc10052b8f3fa014400bc9584d30",
        "content": "                QPushButton {\n                    background-color: #f44336;\n                    col..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "46-50",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "76-80",
        "block_hash": "82a428ac50ced8c6f3a81114f662d9b5",
        "content": "                    background-color: #f44336;\n                    color: white;\n                   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "47-51",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "77-81",
        "block_hash": "1f07831e07d6eb90cf8ada119a78b310",
        "content": "                    color: white;\n                    border: 1px solid #d32f2f;\n                   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "43-47",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "85-89",
        "block_hash": "ad3c99aebb858c6163ec63e852702f31",
        "content": "            # 不可用座位 - 灰色\n            self.setStyleSheet(\"\"\"\n                QPushButton {\n          ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "44-48",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "86-90",
        "block_hash": "72097af985feea07b9c67acdfb4fa58b",
        "content": "            self.setStyleSheet(\"\"\"\n                QPushButton {\n                    background-colo..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "45-49",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "87-91",
        "block_hash": "8d9bbc10052b8f3fa014400bc9584d30",
        "content": "                QPushButton {\n                    background-color: #9E9E9E;\n                    col..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "46-50",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "88-92",
        "block_hash": "82a428ac50ced8c6f3a81114f662d9b5",
        "content": "                    background-color: #9E9E9E;\n                    color: white;\n                   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "47-51",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "89-93",
        "block_hash": "1f07831e07d6eb90cf8ada119a78b310",
        "content": "                    color: white;\n                    border: 1px solid #757575;\n                   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "78-82",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "90-94",
        "block_hash": "d227c5c0335e4d55c1b955ac725f22a2",
        "content": "                    border: 1px solid #757575;\n                    border-radius: 3px;\n             ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "79-83",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "91-95",
        "block_hash": "185b87abc51cf93bb3e9c9147809764d",
        "content": "                    border-radius: 3px;\n                    font-weight: bold;\n                }\n   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "109-113",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "110-114",
        "block_hash": "b941bdb24bc734792fd907cc9c4d281a",
        "content": "    def set_status(self, status: str):\n        \"\"\"设置座位状态\"\"\"\n        self.status = status\n        sel..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "30-34",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "122-126",
        "block_hash": "976e54cd89e31cf3fa4c249dde2322f9",
        "content": "    \n    def __init__(self, parent=None):\n        super().__init__(parent)\n        \n        # 状态变量"
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "126-130",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "127-131",
        "block_hash": "4d9d3f23bf26e58e98622b4637f79b9d",
        "content": "        self.seat_matrix = []  # 座位矩阵\n        self.seat_buttons = {}  # 座位按钮映射 {(row, col): button}\n..."
      },
      {
        "file1": "ui\\components\\account_list_panel_pyqt5.py",
        "lines1": "39-43",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "139-143",
        "block_hash": "48fac530c969e993a9eccf7ebde8108f",
        "content": "    \n    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "42-46",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "140-144",
        "block_hash": "7d45731d1434fc68677223702dda7365",
        "content": "    def _init_ui(self):\n        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setC..."
      },
      {
        "file1": "views\\components\\account_panel.py",
        "lines1": "43-47",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "141-145",
        "block_hash": "5db9d8b83a1ecfdf674a8f5992a4d3da",
        "content": "        \"\"\"初始化用户界面\"\"\"\n        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, ..."
      },
      {
        "file1": "ui\\widgets\\account_widget.py",
        "lines1": "72-76",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "142-146",
        "block_hash": "845ef4bb25dd351f32677fcc61907543",
        "content": "        layout = QVBoxLayout(self)\n        layout.setContentsMargins(5, 5, 5, 5)\n        layout.setS..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "159-163",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "160-164",
        "block_hash": "d8a734f88f9e5d662519cb68c92f71a4",
        "content": "        self.seat_scroll = QScrollArea()\n        self.seat_scroll.setWidgetResizable(True)\n        s..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "164-168",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "165-169",
        "block_hash": "cbcb111575c21e95e4b882163bb26de1",
        "content": "        # 座位图容器\n        self.seat_container = QWidget()\n        self.seat_layout = QVBoxLayout(self...."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "164-168",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "166-170",
        "block_hash": "cbcb111575c21e95e4b882163bb26de1",
        "content": "        self.seat_container = QWidget()\n        self.seat_layout = QVBoxLayout(self.seat_container)\n..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "225-229",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "174-178",
        "block_hash": "a57ac5a7b7f372b5289870029e1abe04",
        "content": "            QLabel {\n                color: #999999;\n                font: 14px \"Microsoft YaHei\";\n ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "226-230",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "175-179",
        "block_hash": "c5ba789b57b985974deb16210b788911",
        "content": "                color: #999999;\n                font: 14px \"Microsoft YaHei\";\n                backgr..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "227-231",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "176-180",
        "block_hash": "f89f429141cca15f35f727ab49b3de47",
        "content": "                font: 14px \"Microsoft YaHei\";\n                background-color: #ffffff;\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "228-232",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "177-181",
        "block_hash": "241ca2ac31c0b4cccf9fcbf992111170",
        "content": "                background-color: #ffffff;\n                border: 1px dashed #cccccc;\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "229-233",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "178-182",
        "block_hash": "4de22b6dae3c394c5563e6ccbab26105",
        "content": "                border: 1px dashed #cccccc;\n                padding: 60px;\n                border-ra..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "202-206",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "203-207",
        "block_hash": "e13a5daf41ec3c84f4e997081bfef442",
        "content": "        layout.addLayout(button_layout)\n        \n        # 座位状态说明\n        legend_layout = QHBoxLayou..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "45-49",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "212-216",
        "block_hash": "8d9bbc10052b8f3fa014400bc9584d30",
        "content": "            QPushButton {\n                background-color: #4CAF50;\n                color: white;\n ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "46-50",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "213-217",
        "block_hash": "82a428ac50ced8c6f3a81114f662d9b5",
        "content": "                background-color: #4CAF50;\n                color: white;\n                border: 1px..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "47-51",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "214-218",
        "block_hash": "1f07831e07d6eb90cf8ada119a78b310",
        "content": "                color: white;\n                border: 1px solid #45a049;\n                border-radi..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "78-82",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "215-219",
        "block_hash": "d227c5c0335e4d55c1b955ac725f22a2",
        "content": "                border: 1px solid #45a049;\n                border-radius: 3px;\n                font-..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "45-49",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "226-230",
        "block_hash": "8d9bbc10052b8f3fa014400bc9584d30",
        "content": "            QPushButton {\n                background-color: #2196F3;\n                color: white;\n ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "46-50",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "227-231",
        "block_hash": "82a428ac50ced8c6f3a81114f662d9b5",
        "content": "                background-color: #2196F3;\n                color: white;\n                border: 1px..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "47-51",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "228-232",
        "block_hash": "1f07831e07d6eb90cf8ada119a78b310",
        "content": "                color: white;\n                border: 1px solid #1976D2;\n                border-radi..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "78-82",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "229-233",
        "block_hash": "d227c5c0335e4d55c1b955ac725f22a2",
        "content": "                border: 1px solid #1976D2;\n                border-radius: 3px;\n                font-..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "45-49",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "240-244",
        "block_hash": "8d9bbc10052b8f3fa014400bc9584d30",
        "content": "            QPushButton {\n                background-color: #f44336;\n                color: white;\n ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "46-50",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "241-245",
        "block_hash": "82a428ac50ced8c6f3a81114f662d9b5",
        "content": "                background-color: #f44336;\n                color: white;\n                border: 1px..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "47-51",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "242-246",
        "block_hash": "1f07831e07d6eb90cf8ada119a78b310",
        "content": "                color: white;\n                border: 1px solid #d32f2f;\n                border-radi..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "78-82",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "243-247",
        "block_hash": "d227c5c0335e4d55c1b955ac725f22a2",
        "content": "                border: 1px solid #d32f2f;\n                border-radius: 3px;\n                font-..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1518-1522",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "279-283",
        "block_hash": "7c1023be858ca829611107888c41fec9",
        "content": "                    'name': seat_data.get('hname', '未知影厅'),\n                    'screen_type': seat_..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1519-1523",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "280-284",
        "block_hash": "8478a55d95b71b9cdb0fb22289aa90a6",
        "content": "                    'screen_type': seat_data.get('screentype', ''),\n                    'seat_count'..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1619-1623",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "306-310",
        "block_hash": "ff77c61ea4cb0d7bdce6ff4584d6465b",
        "content": "            if max_row == 0 or max_col == 0:\n                return []\n            \n            # 创建..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1620-1624",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "307-311",
        "block_hash": "f365fee2a0110166e4700d226dc0a3d6",
        "content": "                return []\n            \n            # 创建座位矩阵\n            seat_matrix = []\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1621-1625",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "308-312",
        "block_hash": "48954826951afccdb1f1926b05e3a22f",
        "content": "            \n            # 创建座位矩阵\n            seat_matrix = []\n            for row in range(max_row)..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1622-1626",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "309-313",
        "block_hash": "4510b43c9c42f16955fa336f1a5f893b",
        "content": "            # 创建座位矩阵\n            seat_matrix = []\n            for row in range(max_row):\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1622-1626",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "310-314",
        "block_hash": "4510b43c9c42f16955fa336f1a5f893b",
        "content": "            seat_matrix = []\n            for row in range(max_row):\n                seat_row = [None..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1624-1628",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "311-315",
        "block_hash": "c4b51579373bbb76569a561aa9e21963",
        "content": "            for row in range(max_row):\n                seat_row = [None] * max_col\n                s..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1625-1629",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "312-316",
        "block_hash": "3dd46f8b09018e6bf6c168bbf2cfb18a",
        "content": "                seat_row = [None] * max_col\n                seat_matrix.append(seat_row)\n           ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "314-318",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "315-319",
        "block_hash": "cc44e60bfa48dbd792cbb9ab665d657e",
        "content": "            # 填充座位数据\n            for seat in seats_array:\n                row_num = seat.get('rn', 0..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1635-1639",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "321-325",
        "block_hash": "17c04d61a1fffa7b17487d759d9ef2da",
        "content": "                    # 解析座位状态\n                    seat_state = seat.get('s', 'F')\n                   ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1636-1640",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "322-326",
        "block_hash": "f98efa48380c0edc083a858806031ac7",
        "content": "                    seat_state = seat.get('s', 'F')\n                    if seat_state == 'F':\n      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1637-1641",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "323-327",
        "block_hash": "18d7d62eac9b53b125abc16b916748cd",
        "content": "                    if seat_state == 'F':\n                        status = 'available'\n             ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1638-1642",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "324-328",
        "block_hash": "eb51090a52f004c0745f33f5c530a223",
        "content": "                        status = 'available'\n                    elif seat_state == 'B':\n           ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1639-1643",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "325-329",
        "block_hash": "f786a6b25eb5b32693401d3d8fe42cad",
        "content": "                    elif seat_state == 'B':\n                        status = 'sold'\n                ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1662-1666",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "334-338",
        "block_hash": "c0e9880fcbfdf515e861365ecc18cdb9",
        "content": "                        'status': status,\n                        'price': 0,\n                      ..."
      },
      {
        "file1": "main_modular.py",
        "lines1": "1663-1667",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "335-339",
        "block_hash": "3bcd1368d83ddb94dc8705e1aab4abab",
        "content": "                        'price': 0,\n                        'seatname': seat.get('sn', ''),\n        ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "353-357",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "354-358",
        "block_hash": "beb23519c959202b178c28122b1f73a7",
        "content": "            if not self.seat_matrix:\n                self._show_placeholder(\"没有座位数据\")\n              ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "370-374",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "371-375",
        "block_hash": "4c6df2c8ebabb1ef11a7495b19cfa5f5",
        "content": "                for col_idx, seat_data in enumerate(seat_row):\n                    if seat_data:\n   ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "399-403",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "400-404",
        "block_hash": "2d26241abc66d0ee43fc6fe5626aaceb",
        "content": "            self.seat_layout.addWidget(seat_widget)\n            \n            # 启用操作按钮\n            se..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "401-405",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "402-406",
        "block_hash": "7abf1e522adbe40f93cf1065edc4ba98",
        "content": "            # 启用操作按钮\n            self.clear_button.setEnabled(True)\n            \n            print(\"..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "420-424",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "421-425",
        "block_hash": "498c0f534b9cedc27e592853dfb7b4cf",
        "content": "    def _show_placeholder(self, message: str):\n        \"\"\"显示占位符\"\"\"\n        self.placeholder_label.se..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "435-439",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "436-440",
        "block_hash": "286b0e32dbf432717f05fe219ec4d3d5",
        "content": "    @event_handler(\"seat_map_error\")\n    def _on_seat_map_error(self, error_msg: str):\n        \"\"\"座位..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "440-444",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "441-445",
        "block_hash": "4bba3a320b9f4cf4cde13f6963ce0b86",
        "content": "    def on_seat_clicked(self, seat_button: SeatButton):\n        \"\"\"座位按钮点击处理\"\"\"\n        try:\n        ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "445-449",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "446-450",
        "block_hash": "dc5569169ab51a72477a60ac95481791",
        "content": "            if seat_button.status == 'selected':\n                self.selected_seats.add(seat_pos)\n ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "451-455",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "452-456",
        "block_hash": "364efedff441f468c6102f059302ae5d",
        "content": "            self._update_seat_input()\n            \n            # 更新提交按钮状态\n            self.submit_bu..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "463-467",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "464-468",
        "block_hash": "8e06a7beaee1299b6175d86adfdb3a31",
        "content": "            self.seat_selected.emit(selected_seat_data)\n            \n        except Exception as e:\n..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "480-484",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "481-485",
        "block_hash": "9d226535c7b757ee273389d7b862a276",
        "content": "            for row, col in self.selected_seats.copy():\n                if (row, col) in self.seat_b..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "485-489",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "486-490",
        "block_hash": "7938a09b3ece563fc75c83ab68e853ba",
        "content": "            self.selected_seats.clear()\n            self._update_seat_input()\n            self.submi..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "490-494",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "491-495",
        "block_hash": "e1aec9c47ce3228a4fb2928e19460f1f",
        "content": "            self.seat_selected.emit([])\n            \n        except Exception as e:\n            prin..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "456-460",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "501-505",
        "block_hash": "bac389e39a871199f0ffd29830feedc3",
        "content": "            \n            # 构建选中座位数据\n            selected_seat_data = []\n            for row, col in ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "457-461",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "502-506",
        "block_hash": "7514e654c5a152c37b7165cb1970e054",
        "content": "            # 构建选中座位数据\n            selected_seat_data = []\n            for row, col in self.selected..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "458-462",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "503-507",
        "block_hash": "e81694a9f0fba4757e06a828d074b99d",
        "content": "            selected_seat_data = []\n            for row, col in self.selected_seats:\n               ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "459-463",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "504-508",
        "block_hash": "395a7d840ca85822a5c56b3f430be3f4",
        "content": "            for row, col in self.selected_seats:\n                if (row, col) in self.seat_buttons:..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "515-519",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "516-520",
        "block_hash": "44be44e9478522bf5bddcd45fe99c444",
        "content": "            self.order_submitted.emit(order_data)\n            \n        except Exception as e:\n      ..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "458-462",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "523-527",
        "block_hash": "e81694a9f0fba4757e06a828d074b99d",
        "content": "        selected_seat_data = []\n        for row, col in self.selected_seats:\n            if (row, co..."
      },
      {
        "file1": "views\\components\\seat_map_panel.py",
        "lines1": "529-533",
        "file2": "views\\components\\seat_map_panel.py",
        "lines2": "530-534",
        "block_hash": "683116b2a07f33b9e868028125bacb9a",
        "content": "    def set_enabled(self, enabled: bool):\n        \"\"\"设置面板启用状态\"\"\"\n        self.clear_button.setEnable..."
      }
    ],
    "redundant_imports": [],
    "redundant_apis": {
      "low_usage": {
        "api_request": 1,
        "api_get": 1,
        "api_post": 1
      },
      "similar_groups": []
    },
    "unused_resources": [
      {
        "type": "import",
        "file": "services\\account_api.py",
        "resource": "requests\nfrom urllib.parse import urlparse, parse_qs\nfrom .api_base import api_get\n\ndef login_and_check_card",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\account_api.py",
        "resource": "json\nimport os\n\ndef get_account_list",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\admin_api.py",
        "resource": "typing.Dict",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\admin_api.py",
        "resource": "requests\nimport json\nfrom typing import Dict, Optional, Tuple\n\nclass AdminAPIService",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\api_base.py",
        "resource": ".film_service.load_cinemas\n            cinemas",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\api_base.py",
        "resource": "requests\nimport urllib3\nimport json",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\api_base.py",
        "resource": "load_cinemas\n            cinemas",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\auth_service.py",
        "resource": "hashlib\nimport uuid\nimport platform\nimport subprocess\nimport json\nimport requests\nimport time\nimport re\nfrom typing import Dict, Optional, Tuple\n\nclass AuthService",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\cinema_id_helper.py",
        "resource": "re\n\ndef validate_cinema_id_format",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\cinema_info_api.py",
        "resource": "requests\nimport json\nimport urllib3\nimport time",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\cinema_manager.py",
        "resource": ".cinema_info_api.get_cinema_info\n            cinema_info",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\cinema_manager.py",
        "resource": "os\nimport json\nfrom .cinema_info_api import validate_cinema, format_cinema_data\n\nclass CinemaManager",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\cinema_manager.py",
        "resource": "get_cinema_info\n            cinema_info",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\film_service.py",
        "resource": ".cinema_manager.cinema_manager\n        cinema_list",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\film_service.py",
        "resource": ".cinema_manager.cinema_manager\n            migrated_cinemas",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\film_service.py",
        "resource": "requests\nimport json\nimport os\nimport urllib3",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\film_service.py",
        "resource": "cinema_manager\n        cinema_list",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\film_service.py",
        "resource": "cinema_manager\n            migrated_cinemas",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\member_service.py",
        "resource": ".api_base.api_get\n\ndef get_member_info",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\member_service.py",
        "resource": "requests\nimport json\nfrom .api_base import api_get\n\ndef get_member_info",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\order_api.py",
        "resource": "datetime.datetime\nfrom",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\order_api.py",
        "resource": ".api_base.api_base\n\n    if not cinemaid",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\order_api.py",
        "resource": "urllib.parse.urlencode\n        base_path",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\order_api.py",
        "resource": "requests\nimport urllib3\nimport os\nfrom datetime import datetime\nfrom .api_base import api_get, api_post\n\nurllib3.disable_warnings",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\order_api.py",
        "resource": "urllib.parse\n    print",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\order_api.py",
        "resource": "api_base\n\n    if not cinemaid",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\order_api.py",
        "resource": "urlencode\n        base_path",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\ui_utils.py",
        "resource": "PyQt5.QtWidgets.QMessageBox\nfrom PyQt5",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\ui_utils.py",
        "resource": "PyQt5.QtGui.QFont\n\nclass MessageManager",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\ui_utils.py",
        "resource": "PyQt5.QtWidgets.QDesktopWidget\n            screen",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\ui_utils.py",
        "resource": "QMessageBox\nfrom PyQt5.QtCore import QTimer, Qt\nfrom PyQt5.QtGui import QFont\n\nclass MessageManager",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "services\\ui_utils.py",
        "resource": "QDesktopWidget\n            screen",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\login_window.py",
        "resource": "services.auth_service.auth_service\nfrom services",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\login_window.py",
        "resource": "sys\nimport os\nimport json\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\login_window.py",
        "resource": "Qt, QTimer, pyqtSignal, QThread, pyqtSlot\nfrom PyQt5.QtGui import QFont, QPalette, QColor, QIcon, QClipboard",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\login_window.py",
        "resource": "auth_service\nfrom services.ui_utils import MessageManager, UIConstants\n\nclass LoginThread",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\login_window.py",
        "resource": "datetime\n            current_time",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\account_list_panel_pyqt5.py",
        "resource": "typing.Callable",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\account_list_panel_pyqt5.py",
        "resource": "PyQt5.QtWidgets.QApplication\n            \n            phone",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\account_list_panel_pyqt5.py",
        "resource": "os\nimport json\nfrom typing import Callable, Optional, Dict, List\n\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\account_list_panel_pyqt5.py",
        "resource": "Qt, pyqtSignal\nfrom PyQt5.QtGui import QFont, QCursor\n\nclass AccountListPanelPyQt5",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\account_list_panel_pyqt5.py",
        "resource": "QApplication\n            \n            phone",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\auto_browser.py",
        "resource": "json\nimport re\nfrom urllib.parse import urlparse, parse_qs\nfrom PyQt5.QtWidgets import QWidget, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, QTextEdit\nfrom PyQt5.QtCore import pyqtSignal, QUrl",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\auto_browser.py",
        "resource": "QWebEngineView, QWebEnginePage, QWebEngineProfile\n    from PyQt5.QtWebEngineCore import QWebEngineUrlRequestInterceptor\n    WEBENGINE_AVAILABLE",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\cinema_select_panel_pyqt5.py",
        "resource": "typing.Callable",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\cinema_select_panel_pyqt5.py",
        "resource": "services.cinema_manager.cinema_manager\nfrom services",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\cinema_select_panel_pyqt5.py",
        "resource": "services.ui_utils.MessageManager\n\nclass CinemaSelectPanelPyQt5",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\cinema_select_panel_pyqt5.py",
        "resource": "json\nimport os\nfrom typing import Callable, Optional, Dict, List\n\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\cinema_select_panel_pyqt5.py",
        "resource": "Qt, pyqtSignal\nfrom PyQt5.QtGui import QFont\n\nfrom services.cinema_manager import cinema_manager\nfrom services.film_service import get_films, load_cinemas, get_plan_seat_info\nfrom services.ui_utils import MessageManager\n\nclass CinemaSelectPanelPyQt5",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\curl_parser.py",
        "resource": "re\nimport json\nfrom urllib.parse import urlparse, parse_qs\nfrom typing import Dict, Optional, Tuple\n\nclass CurlParser",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\seat_map_panel_pyqt5.py",
        "resource": "PyQt5.QtWidgets.QMessageBox\n            QMessageBox",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\seat_map_panel_pyqt5.py",
        "resource": "Callable, Optional, Dict, List, Set, Tuple\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\seat_map_panel_pyqt5.py",
        "resource": "Qt, pyqtSignal, QPoint\nfrom PyQt5.QtGui import QFont, QPalette, QMouseEvent\n\nclass SeatMapPanelPyQt5",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\components\\seat_map_panel_pyqt5.py",
        "resource": "QMessageBox\n            QMessageBox.warning",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "datetime.datetime\n\nfrom PyQt5",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "ui.components.auto_browser.AutoBrowserWidget\n    AUTO_BROWSER_AVAILABLE",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "services.cinema_manager.cinema_manager\n            cinemas",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "utils.signals.event_bus\n            from services",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "datetime.datetime\n\n            accounts_file",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "json\nimport re\nimport os\nimport webbrowser\nfrom datetime import datetime\n\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "pyqtSignal, Qt\nfrom PyQt5.QtGui import QFont",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "AutoBrowserWidget\n    AUTO_BROWSER_AVAILABLE",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "get_cinema_info, format_cinema_data\n            from services.cinema_manager import cinema_manager",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "cinema_manager\n            cinemas",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "json\n            import os\n\n            accounts_file",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "event_bus\n            from services.cinema_manager import cinema_manager",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\dialogs\\auto_parameter_extractor.py",
        "resource": "json\n            import os\n            from datetime import datetime\n\n            accounts_file",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\interfaces\\plugin_interface.py",
        "resource": "Dict, Any, Optional\nfrom PyQt5.QtWidgets import QWidget\nfrom PyQt5.QtCore import QObject, pyqtSignal\n\n\nclass IPluginInterface",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "PyQt5.QtWidgets.QMenu\n            menu",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "PyQt5.QtWidgets.QTableWidgetItem\n    return QTableWidgetItem",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "os\nimport json\nfrom typing import Dict, List, Optional, Any\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "pyqtSignal, Qt",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "IWidgetInterface, event_bus\n\n\nclass AccountWidget",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "QMenu\n            menu",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "QInputDialog, QLineEdit, QMessageBox",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "traceback\n            traceback.print_exc",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\account_widget.py",
        "resource": "QTableWidgetItem\n    return QTableWidgetItem",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\classic_components.py",
        "resource": "typing.Any\n\n\nclass ClassicGroupBox",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\classic_components.py",
        "resource": "Qt, pyqtSignal\nfrom PyQt5.QtGui import QColor\nfrom typing import Any\n\n\nclass ClassicGroupBox",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\seat_order_widget.py",
        "resource": "Dict, List, Optional, Any\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\seat_order_widget.py",
        "resource": "pyqtSignal, Qt",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\seat_order_widget.py",
        "resource": "IWidgetInterface, event_bus\n\n\nclass SeatOrderWidget",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "services.ui_utils.MessageManager\n\n\nclass TabManagerWidget",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "services.order_api.bind_coupon\n        from PyQt5",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "PyQt5.QtWidgets.QApplication\n            clipboard",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "PyQt5.QtWidgets.QApplication\n            QApplication",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "datetime.datetime\n                expire_datetime",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "datetime.datetime\n        timestamp",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "PyQt5.QtWidgets.QAbstractItemView\n        self",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "utils.signals.event_bus\n            from services",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "services.cinema_manager.cinema_manager\n            from datetime import datetime",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "utils.signals.event_bus\n                event_bus",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "services.order_api.get_order_detail\n\n            params",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "services.order_api.cancel_order\n\n            params",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "random\nimport time\nfrom typing import Dict, List, Optional, Any\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "pyqtSignal, Qt, QTimer\nfrom PyQt5.QtGui import QColor, QFont",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "IWidgetInterface, event_bus",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "MessageManager\n\n\nclass TabManagerWidget",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "bind_coupon\n        from PyQt5.QtWidgets import QApplication\n        \n        for i, code in enumerate",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "QApplication\n            clipboard",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "QApplication\n            QApplication.processEvents",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "datetime\n                expire_datetime",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "datetime\n        timestamp",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "QAbstractItemView\n        self.order_table.setEditTriggers",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "get_cinema_info, format_cinema_data\n\n            print",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "event_bus\n            from services.cinema_manager import cinema_manager",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "cinema_manager\n            from datetime import datetime",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "json\n            import os\n            \n            accounts_file",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "get_films, normalize_film_data",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "get_order_detail, get_order_qrcode_api\n\n            print",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "generate_ticket_qrcode, save_qrcode_image\n            print",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "event_bus\n                event_bus.show_qrcode.emit",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "get_order_detail\n\n            params",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "ui\\widgets\\tab_manager_widget.py",
        "resource": "cancel_order\n\n            params",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\qrcode_generator.py",
        "resource": "datetime.datetime\nfrom PIL import Image",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\qrcode_generator.py",
        "resource": "os\nfrom datetime import datetime\nfrom PIL import Image, ImageDraw, ImageFont\nimport io",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\qrcode_generator.py",
        "resource": "sys\nimport os",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\qrcode_generator.py",
        "resource": "importlib\n        qr_module",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\qrcode_generator.py",
        "resource": "subprocess\n        print",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\qrcode_generator.py",
        "resource": "qrcode as qr_module\n            QRCODE_AVAILABLE",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\signals.py",
        "resource": "QObject, pyqtSignal\nfrom typing import Dict, Any, Callable, List, Optional\nimport weakref\nimport threading\nimport time\n\n\nclass EventBus",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\signals.py",
        "resource": "traceback\n                            traceback.print_exc",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\signals.py",
        "resource": "traceback\n                traceback.print_exc",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\simple_qrcode_generator.py",
        "resource": "datetime.datetime\nfrom PIL import Image",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\simple_qrcode_generator.py",
        "resource": "os\nfrom datetime import datetime\nfrom PIL import Image, ImageDraw, ImageFont\nimport io\n\ndef generate_simple_ticket_image",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "utils\\simple_qrcode_generator.py",
        "resource": "traceback\n        traceback.print_exc",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "modules\\order_display\\order_detail_manager.py",
        "resource": "Dict, List, Any, Optional\nimport json\n\n\nclass FieldNameMapper",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "modules\\order_display\\order_detail_manager.py",
        "resource": "traceback\n            traceback.print_exc",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "modules\\order_display\\__init__.py",
        "resource": "OrderDetailManager, FieldNameMapper\n\n__all__",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\account_controller.py",
        "resource": "typing.Dict",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\account_controller.py",
        "resource": "services.auth_service.AuthService\nfrom services",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\account_controller.py",
        "resource": "Dict, List, Optional, Any\nfrom PyQt5.QtCore import QObject, pyqtSignal\nfrom utils.signals import event_bus, event_handler\nfrom services.account_api import get_account_list, save_account, delete_account\nfrom services.auth_service import AuthService\nfrom services.member_service import MemberService\n\n\nclass AccountController",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\cinema_controller.py",
        "resource": "typing.Dict",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\cinema_controller.py",
        "resource": "Dict, List, Optional, Any\nfrom PyQt5.QtCore import QObject, pyqtSignal\nfrom utils.signals import event_bus, event_handler\nfrom services.cinema_manager import CinemaManager\nfrom services.film_service import get_films, normalize_film_data, get_plan_seat_info\n\n\nclass CinemaController",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\cinema_controller.py",
        "resource": "traceback\n            traceback.print_exc",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\order_controller.py",
        "resource": "typing.Dict",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\order_controller.py",
        "resource": "services.ui_utils.MessageManager\n\n\nclass OrderController",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\order_controller.py",
        "resource": "Dict, List, Optional, Any\nfrom PyQt5.QtCore import QObject, pyqtSignal, QTimer\nfrom utils.signals import event_bus, event_handler\nfrom services.order_api import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\order_controller.py",
        "resource": "MessageManager\n\n\nclass OrderController",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\order_controller.py",
        "resource": "traceback\n            traceback.print_exc",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\__init__.py",
        "resource": ".order_controller.OrderController\nfrom",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\__init__.py",
        "resource": ".cinema_controller.CinemaController\n\n__all__",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "controllers\\__init__.py",
        "resource": "OrderController\nfrom .account_controller import AccountController\nfrom .cinema_controller import CinemaController\n\n__all__",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "controllers.order_controller.OrderController\nfrom controllers",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "views.components.seat_map_panel.SeatMapPanel\nfrom views",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "ui.login_window.LoginWindow\n\n\nclass MainWindow",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "PyQt5.QtWidgets.QMessageBox\n            reply",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "ui.login_window.LoginWindow\n\n            self",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "utils.signals.event_bus\n                event_bus",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "PyQt5.QtWidgets.QDesktopWidget\n            screen",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "Qt, pyqtSignal, QTimer\nfrom PyQt5.QtGui import QFont",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "event_bus, event_manager, event_handler",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "OrderController\nfrom controllers.account_controller import AccountController\nfrom controllers.cinema_controller import CinemaController",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "SeatMapPanel\nfrom views.components.account_panel import AccountPanel\nfrom views.components.cinema_panel import CinemaPanel",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "LoginWindow\n\n\nclass MainWindow",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "QMessageBox\n            reply",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "LoginWindow\n\n            self.login_window",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "event_bus\n                event_bus.cinema_selected.emit",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\main_window.py",
        "resource": "QDesktopWidget\n            screen",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\__init__.py",
        "resource": ".main_window.MainWindow\n\n__all__",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\__init__.py",
        "resource": "MainWindow\n\n__all__",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\account_panel.py",
        "resource": "typing.Dict",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\account_panel.py",
        "resource": "Dict, List, Optional\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\account_panel.py",
        "resource": "Qt, pyqtSignal\nfrom PyQt5.QtGui import QFont\nfrom utils.signals import event_bus, event_handler\n\n\nclass AccountPanel",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\cinema_panel.py",
        "resource": "typing.Dict",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\cinema_panel.py",
        "resource": "Dict, List, Optional\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\cinema_panel.py",
        "resource": "Qt, pyqtSignal\nfrom PyQt5.QtGui import QFont\nfrom utils.signals import event_bus, event_handler\n\n\nclass CinemaPanel",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\seat_map_panel.py",
        "resource": "typing.Dict",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\seat_map_panel.py",
        "resource": "Dict, List, Optional, Set, Tuple\nfrom PyQt5.QtWidgets import",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\seat_map_panel.py",
        "resource": "Qt, pyqtSignal, QSize\nfrom PyQt5.QtGui import QFont, QPalette\nfrom utils.signals import event_bus, event_handler\n\n\nclass SeatButton",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\__init__.py",
        "resource": ".seat_map_panel.SeatMapPanel\nfrom",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\__init__.py",
        "resource": ".cinema_panel.CinemaPanel\n\n__all__",
        "reason": "imported but not used"
      },
      {
        "type": "import",
        "file": "views\\components\\__init__.py",
        "resource": "SeatMapPanel\nfrom .account_panel import AccountPanel\nfrom .cinema_panel import CinemaPanel\n\n__all__",
        "reason": "imported but not used"
      },
      {
        "type": "method",
        "resource": "请将您的实际抓包数据替换上述示例内容",
        "reason": "defined but not called"
      }
    ],
    "similar_functions": [
      {
        "file1": "services\\ui_utils.py",
        "method1": "show_info",
        "file2": "services\\ui_utils.py",
        "method2": "show_warning",
        "similarity": 91.6030534351145
      },
      {
        "file1": "services\\ui_utils.py",
        "method1": "show_info",
        "file2": "services\\ui_utils.py",
        "method2": "show_error",
        "similarity": 91.47286821705426
      },
      {
        "file1": "services\\ui_utils.py",
        "method1": "show_info",
        "file2": "services\\ui_utils.py",
        "method2": "ask_yes_no",
        "similarity": 80.2919708029197
      },
      {
        "file1": "services\\ui_utils.py",
        "method1": "show_warning",
        "file2": "services\\ui_utils.py",
        "method2": "show_error",
        "similarity": 89.39393939393939
      },
      {
        "file1": "services\\ui_utils.py",
        "method1": "show_warning",
        "file2": "services\\ui_utils.py",
        "method2": "ask_yes_no",
        "similarity": 75.71428571428571
      },
      {
        "file1": "services\\ui_utils.py",
        "method1": "show_error",
        "file2": "services\\ui_utils.py",
        "method2": "ask_yes_no",
        "similarity": 76.81159420289855
      },
      {
        "file1": "ui\\dialogs\\auto_parameter_extractor.py",
        "method1": "setup_curl_tab",
        "file2": "ui\\dialogs\\auto_parameter_extractor.py",
        "method2": "setup_manual_tab",
        "similarity": 80.21201413427562
      }
    ],
    "optimization_suggestions": [
      {
        "type": "duplicate_blocks",
        "priority": "medium",
        "description": "发现 2583 个重复代码块",
        "action": "提取为公共函数或常量",
        "estimated_reduction": "12915 行代码"
      },
      {
        "type": "unused_resources",
        "priority": "medium",
        "description": "发现 174 个未使用资源",
        "action": "移除未使用的导入和方法",
        "estimated_reduction": "174 个资源"
      }
    ],
    "refactoring_plan": {
      "phase_1": {
        "name": "清理未使用资源",
        "duration": "1-2天",
        "risk": "low",
        "tasks": [
          "移除未使用的导入语句",
          "删除未调用的方法",
          "清理冗余的变量定义"
        ]
      },
      "phase_2": {
        "name": "合并重复代码块",
        "duration": "2-3天",
        "risk": "medium",
        "tasks": [
          "提取重复的代码块为函数",
          "创建公共常量文件",
          "统一错误处理逻辑"
        ]
      },
      "phase_3": {
        "name": "重构重复方法",
        "duration": "3-5天",
        "risk": "high",
        "tasks": [
          "提取公共方法到基类",
          "创建工具类和辅助函数",
          "重构相似的API接口"
        ]
      },
      "phase_4": {
        "name": "优化API接口",
        "duration": "2-3天",
        "risk": "medium",
        "tasks": [
          "合并功能重叠的API",
          "简化API调用链路",
          "优化API参数设计"
        ]
      }
    }
  }
}